[
	{
		"id": "http://zotero.org/groups/121453/items/4ENZ8AHV",
		"type": "paper-conference",
		"title": "RESTful Web Services vs. \"Big\" Web Services: Making the Right Architectural Decision",
		"container-title": "Proceedings of the 17th International World Wide Web Conference",
		"publisher-place": "Beijing, China",
		"page": "805-814",
		"event-place": "Beijing, China",
		"abstract": "Recent technology trends in the Web Services (WS) domain indicate\nthat a solution eliminating the presumed complexity of the\nWS-* standards may be in sight: advocates of REpresentational\nState Transfer (REST) have come to believe that their ideas explaining\nwhy the World Wide Web works are just as applicable to\nsolve enterprise application integration problems and to simplify\nthe plumbing required to build service-oriented architectures. In\nthis paper we objectify the WS-* vs. REST debate by giving a\nquantitative technical comparison based on architectural principles\nand decisions. We show that the two approaches differ in the number\nof architectural decisions that must be made and in the number\nof available alternatives. This discrepancy between freedom-fromchoice\nand freedom-of-choice explains the complexity difference\nperceived. However, we also show that there are significant differences\nin the consequences of certain decisions in terms of resulting\ndevelopment and maintenance costs. Our comparison helps\ntechnical decision makers to assess the two integration styles and\ntechnologies more objectively and select the one that best fits their\nneeds: REST is well suited for basic, ad hoc integration scenarios,\nWS-* is more flexible and addresses advanced quality of service\nrequirements commonly occurring in enterprise computing.",
		"author": [
			{
				"family": "Pautasso",
				"given": "Cesare"
			},
			{
				"family": "Zimmermann",
				"given": "Olaf"
			},
			{
				"family": "Leymann",
				"given": "Frank"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/FQSV5WZI",
		"type": "paper-conference",
		"title": "An approach for composing RESTful linked services on the web",
		"container-title": "Proceedings of the companion publication of the 23rd international conference on World Wide Web companion",
		"publisher-place": "International World Wide Web Conferences Steering Commitee",
		"page": "977-982",
		"event-place": "International World Wide Web Conferences Steering Commitee",
		"abstract": "In this paper, we present an approach to compose linked services\non the Web based on the principles of linked data and REST. Our\ncontribution is a unified method for discovering both the interaction\npossibilities a service offers and the available semantic links to\nother services. Our composition engine is implemented as a generic\nclient that allows exploring a service API and interacting with other\nservices to answer user’s goal. We rely on a typical scenario in\norder to illustrate the benefits of our composition approach. We\nimplemented a prototype to demonstrate the applicability of our\nproposal, experiment and discuss the results obtained.",
		"URL": "http://liris.cnrs.fr/Documents/Liris-6481.pdf",
		"author": [
			{
				"family": "Bennara",
				"given": "Mehdi"
			},
			{
				"family": "Mrissa",
				"given": "Michael"
			},
			{
				"family": "Amghar",
				"given": "Youssef"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/SAWI8NRA",
		"type": "paper-conference",
		"title": "REST to JavaScript for Better Client-side Development",
		"container-title": "Proceedings of the 23rd International Conference on World Wide Web Companion",
		"collection-title": "WWW '14 Companion",
		"page": "937-942",
		"abstract": "In today's Web-centric era, embedded systems become mashup various web services via RESTful web services. RESTful web services use REST APIs that describe actions as resource state transfers via standard HTTP methods such as GET, PUT, POST, and DELETE. While RESTful web services are lightweight and executable on any platforms that support HTTP methods, writing programs composed of only such primitive methods is not a familiar concept to developers. Therefore, no single design strategy for (fully) RESTful APIs works for arbitrary domains, and current REST APIs are system dependent, incomplete, and likely to change. To help sever-side development of REST APIs, several domain-specific languages such as WADL, WSDL 2.0, and RDF provide automatic tools to generate REST APIs. However, client-side developers who often do not know the web services domain and do not understand RESTful web services suffer from the lack of any development help. In this paper, we present a new approach to build JavaScript APIs that are more accessible to client-side developers than REST APIs. We show a case study of our approach that uses JavaScript APIs and their wrapper implementation instead of REST APIs, and we describe the efficiency in the client-side development.",
		"URL": "http://dl.acm.org/citation.cfm?id=2579219",
		"author": [
			{
				"family": "Cho",
				"given": "Hyunghun"
			},
			{
				"family": "Ryu",
				"given": "Sukyoung"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/TKQM9FPH",
		"type": "article-journal",
		"title": "Developing web services choreography standards—the case of REST vs. SOAP",
		"container-title": "Decision Support Systems",
		"page": "9–29",
		"volume": "40",
		"issue": "1",
		"source": "Google Scholar",
		"URL": "http://www.sciencedirect.com/science/article/pii/S0167923604000612",
		"author": [
			{
				"family": "Zur Muehlen",
				"given": "Michael"
			},
			{
				"family": "Nickerson",
				"given": "Jeffrey V."
			},
			{
				"family": "Swenson",
				"given": "Keith D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2005"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2015",
					6,
					2
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/I5TBQKEG",
		"type": "article-journal",
		"title": "Control-Flow Patterns for Decentralized RESTful Service Composition",
		"container-title": "ACM Transactions on the Web (TWEB)",
		"page": "5:1–5:30",
		"volume": "8",
		"issue": "1",
		"DOI": "10.1145/2535911",
		"ISSN": "1559-1131",
		"author": [
			{
				"family": "Bellido",
				"given": "Jesus"
			},
			{
				"family": "Alarcón",
				"given": "Rosa"
			},
			{
				"family": "Pautasso",
				"given": "Cesare"
			},
			{
				"family": "Pautasso",
				"given": "Cesare"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/HX5C49E2",
		"type": "paper-conference",
		"title": "Atomic distributed transactions: a RESTful design",
		"container-title": "Proceedings of the companion publication of the 23rd international conference on World wide web companion",
		"publisher": "International World Wide Web Conferences Steering Committee",
		"page": "943–948",
		"source": "Google Scholar",
		"URL": "http://dl.acm.org/citation.cfm?id=2579221",
		"shortTitle": "Atomic distributed transactions",
		"author": [
			{
				"family": "Pardon",
				"given": "Guy"
			},
			{
				"family": "Pautasso",
				"given": "Cesare"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2015",
					6,
					17
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/BVNW7XGE",
		"type": "article-journal",
		"title": "Principled Design of the Modern Web Architecture",
		"container-title": "ACM Trans. Internet Technol.",
		"page": "115–150",
		"volume": "2",
		"issue": "2",
		"URL": "http://doi.acm.org/10.1145/514183.514185",
		"DOI": "10.1145/514183.514185",
		"ISSN": "1533-5399",
		"author": [
			{
				"family": "Fielding",
				"given": "Roy T."
			},
			{
				"family": "Taylor",
				"given": "Richard N."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2002",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/DH2VFW8Z",
		"type": "article-journal",
		"title": "RESTful Web service composition with BPEL for REST",
		"container-title": "Data & Knowledge Engineering",
		"page": "851–866",
		"volume": "68",
		"issue": "9",
		"source": "Google Scholar",
		"URL": "http://www.sciencedirect.com/science/article/pii/S0169023X09000366",
		"author": [
			{
				"family": "Pautasso",
				"given": "Cesare"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2015",
					8,
					18
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8FFFKA4X",
		"type": "paper-conference",
		"title": "Using WADL Specifications to Develop and Maintain REST Client Applications",
		"container-title": "Web Services (ICWS), 2015 IEEE International Conference on",
		"publisher": "IEEE",
		"page": "81–88",
		"source": "Google Scholar",
		"URL": "http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=7195555",
		"author": [
			{
				"family": "Fokaefs",
				"given": "Marios"
			},
			{
				"family": "Stroulia",
				"given": "Eleni"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2016",
					6,
					2
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/D7SW9U8E",
		"type": "paper-conference",
		"title": "WSDarwin: A web application for the support of REST service evolution",
		"container-title": "Software Maintenance and Evolution (ICSME), 2015 IEEE International Conference on",
		"publisher": "IEEE",
		"page": "336–338",
		"source": "Google Scholar",
		"URL": "http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=7332483",
		"shortTitle": "WSDarwin",
		"author": [
			{
				"family": "Fokaefs",
				"given": "Marios"
			},
			{
				"family": "Oprescu",
				"given": "Mihai"
			},
			{
				"family": "Stroulia",
				"given": "Eleni"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2016",
					6,
					28
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/I7VK22CT",
		"type": "paper-conference",
		"title": "SA-REST and (S)mashups : Adding Semantics to RESTful Services",
		"publisher": "IEEE",
		"page": "469-476",
		"source": "CrossRef",
		"URL": "http://ieeexplore.ieee.org/document/4338383/",
		"DOI": "10.1109/ICSC.2007.94",
		"ISBN": "978-0-7695-2997-4",
		"shortTitle": "SA-REST and (S)mashups",
		"author": [
			{
				"family": "Lathem",
				"given": "Jon"
			},
			{
				"family": "Gomadam",
				"given": "Karthik"
			},
			{
				"family": "Sheth",
				"given": "Amit P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2007",
					9
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2016",
					10,
					3
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/CQ9GAGV2",
		"type": "paper-conference",
		"title": "Are REST APIs for Cloud Computing Well-Designed? An Exploratory Study",
		"container-title": "International Conference on Service-Oriented Computing",
		"publisher": "Springer",
		"page": "157–170",
		"source": "Google Scholar",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-319-46295-0_10",
		"shortTitle": "Are REST APIs for Cloud Computing Well-Designed?",
		"author": [
			{
				"family": "Petrillo",
				"given": "Fabio"
			},
			{
				"family": "Merle",
				"given": "Philippe"
			},
			{
				"family": "Moha",
				"given": "Naouel"
			},
			{
				"family": "Guéhéneuc",
				"given": "Yann-Gaël"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2016",
					10,
					26
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8CZZPQU7",
		"type": "paper-conference",
		"title": "Advanced REST API Management and Evolution Using MDA",
		"container-title": "Proceedings of the 3rd International Workshop on (Document) Changes: Modeling, Detection, Storage and Visualization",
		"collection-title": "DChanges 2015",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "11–18",
		"source": "ACM Digital Library",
		"event-place": "New York, NY, USA",
		"abstract": "The REST (Representational State Transfer) has become a popular and preferred way of communication on the Web. JSON (JavaScript Object Notation) [5] is the most used data interchange format these days. JSON can be easily used with (but not-only) applications written in JavaScript or other programming languages. In our previous work we presented a solution how to describe REST API based on the MDA principle and how to provide automatic evolution management. The aim of this paper is to extend our previous results with deeper analysis and additional model operations to make evolution process simple for the API designer. Next, we aim to enlarge abilities of the platform for the specific model of the REST to be able to generate final communication structures in JSON, or other formats like, e.g., XML, as well as their schemas. The proposed approach was implemented within a complex evolution-management framework called DaemonX which provides an extensible platform for evolution management of various data formats, such as, e.g., XML, relational, object, etc. Several experiments proving the concept were then carried out.",
		"URL": "http://doi.acm.org/10.1145/2881631.2881635",
		"DOI": "10.1145/2881631.2881635",
		"ISBN": "978-1-4503-3714-4",
		"author": [
			{
				"family": "Polák",
				"given": "Marek"
			},
			{
				"family": "Holubová",
				"given": "Irena"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2WCEDEFJ",
		"type": "article-journal",
		"title": "Definition of REST web services with JSON schema",
		"container-title": "Software: Practice and Experience",
		"page": "n/a-n/a",
		"source": "Wiley Online Library",
		"abstract": "The Web has evolved from being a collection of documents to a collection of interconnected services that interoperate throughout the Internet. Web services are a natural consequence of this evolution. The web services model was initially centered around the eXtensible Markup Language (XML). Such services can be described by Web Services Description Language documents that are formally defined through the XML Schema Definition language. However, in recent years the popularity of XML-based web services has declined, as more developers favor JavaScript Object Notation (JSON)-based alternatives. Although the use of the latter language is spreading, no official standard to formally describe JSON documents exists. The aim of this article is to demonstrate how JSON Schema, and particularly the JSON Hyper Schema extension, is suitable to describe JSON-based web services that follow the REST architectural pattern. Copyright © 2016 John Wiley & Sons, Ltd.",
		"URL": "http://onlinelibrary.wiley.com/doi/10.1002/spe.2466/abstract",
		"DOI": "10.1002/spe.2466",
		"ISSN": "1097-024X",
		"journalAbbreviation": "Softw. Pract. Exper.",
		"language": "en",
		"author": [
			{
				"family": "Barbaglia",
				"given": "Guido"
			},
			{
				"family": "Murzilli",
				"given": "Simone"
			},
			{
				"family": "Cudini",
				"given": "Stefano"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					1,
					1
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					26
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/WCR3KZUJ",
		"type": "paper-conference",
		"title": "hRESTS: An HTML Microformat for Describing RESTful Web Services",
		"container-title": "2008 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology",
		"page": "619-625",
		"volume": "1",
		"source": "IEEE Xplore",
		"event": "2008 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology",
		"abstract": "The Web 2.0 wave brings, among other aspects, the programmable Web: increasing numbers of Web sites provide machine-oriented APIs and Web services. However, most APIs are only described with text in HTML documents. The lack of machine-readable API descriptions affects the feasibility of tool support for developers who use these services. We propose a microformat called hRESTS (HTML for RESTful Services) for machine-readable descriptions of Web APIs, backed by a simple service model. The hRESTS microformat describes main aspects of services, such as operations, inputs and outputs. We also present two extensions of hRESTS: SA-REST, which captures the facets of public APIs important for mashup developers, and MicroWSMO, which provides support for semantic automation.",
		"DOI": "10.1109/WIIAT.2008.379",
		"shortTitle": "hRESTS",
		"author": [
			{
				"family": "Kopecký",
				"given": "J."
			},
			{
				"family": "Gomadam",
				"given": "K."
			},
			{
				"family": "Vitvar",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/MDZ5FSHI",
		"type": "paper-conference",
		"title": "Micro-resource: A microformat framework for dual restful web services",
		"page": "56-63",
		"volume": "1",
		"source": "Scopus",
		"archive": "Scopus",
		"event": "WEBIST 2010 - Proceedings of the 6th International Conference on Web Information Systems and Technology",
		"abstract": "RESTful architecture style that underlies the Web has gained rapid adoption as a way to develop web services for machines. But the full potential of REST is hindered by the fact that HTML pages designed for human interactions are not suitable for machine processing. To address this problem, we developed a microformat framework, called micro-resource, to extend web sites into dual RESTful web services for both human and machines alike with minimum changes. This framework avoids the pitfalls of alternative \"parallel\" web services by keeping the correspondence and duality between human and machine webs. This framework is simple, extensible and also composable with other existing microformats. Initial application of this framework on some RESTful service composition shows that the approach is efficient and feasible.",
		"ISBN": "978-989-674-025-2",
		"shortTitle": "Micro-resource",
		"language": "English",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/PP78THAQ",
		"type": "paper-conference",
		"title": "NeoIDL: A domain-specific language for specifying REST services",
		"page": "613-618",
		"volume": "2015-January",
		"source": "Scopus",
		"archive": "Scopus",
		"event": "Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE",
		"abstract": "Service-oriented computing has emerged as an effective approach for integrating business (and systems) that might spread throughout different organizations. A service is a unit of logic modularization that hides implementation details using well-defined contracts. However, existing languages for contract specification in this domain present several limitations. For instance, both WSDL and Swagger use language-independent data formats (XML and JSON) that are not suitable for specifying contracts and often lead to heavyweight specifications. Interface description languages, such as CORBA IDL and Apache Thrift, solve this issue by providing specific languages for contract specifications. Nevertheless, these languages do not target to the REST architectural style and lack support for language extensibility. In this paper we present the design and implementation of NeoIDL, an extensible domain specific language and program generator for writing REST based contracts that are further translated into service's implementations. We also describe an evaluation that suggests the rapid return on investment with respect to the design and development of NeoIDL.",
		"DOI": "10.18293/SEKE2015-218",
		"ISBN": "978-1-891706-37-0",
		"shortTitle": "NeoIDL",
		"language": "English",
		"author": [
			{
				"family": "Bonifácio",
				"given": "R."
			},
			{
				"family": "De",
				"given": "Castro"
			},
			{
				"family": "Fernandes",
				"given": "R."
			},
			{
				"family": "Palmeira",
				"given": "A."
			},
			{
				"family": "Kulesza",
				"given": "U."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VHSPMCW8",
		"type": "paper-conference",
		"title": "On Using JSON-LD to Create Evolvable RESTful Services",
		"container-title": "Proceedings of the Third International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "25–32",
		"source": "ACM Digital Library",
		"event-place": "New York, NY, USA",
		"abstract": "As the amount of data and devices on the Web experiences exponential growth issues on how to integrate such hugely heterogeneous components into a scalable system become increasingly important. REST has proven to be a viable solution for such large-scale information systems. It provides a set of architectural constraints that, when applied as a whole, result in benefits in terms of loose coupling, maintainability, evolvability, and scalability. Unfortunately, some of REST's constraints such as the ones that demand self-descriptive messages or require the use of hypermedia as the engine of application state are rarely implemented correctly. This results in tightly coupled and thus brittle systems. To solve these and other issues, we present JSON-LD, a community effort to standardize a media type targeted to machine-to-machine communication with inherent hypermedia support and rich semantics. Since JSON-LD is 100% compatible with traditional JSON, developers can continue to use their existing tools and libraries. As we show in the paper, JSON-LD can be used to build truly RESTful services that, at the same time, integrate the exposed data into the Semantic Web. The required additional design costs are significantly outweighed by the achievable benefits in terms of loose coupling, evolvability, scalability, self-descriptiveness, and maintainability.",
		"URL": "http://doi.acm.org/10.1145/2307819.2307827",
		"DOI": "10.1145/2307819.2307827",
		"ISBN": "978-1-4503-1190-8",
		"author": [
			{
				"family": "Lanthaler",
				"given": "Markus"
			},
			{
				"family": "Gütl",
				"given": "Christian"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/5HQBBNBV",
		"type": "paper-conference",
		"title": "RESTler: Crawling RESTful Services",
		"container-title": "Proceedings of the 19th International Conference on World Wide Web",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "1051–1052",
		"source": "ACM Digital Library",
		"event-place": "New York, NY, USA",
		"abstract": "Service descriptions allow designers to document, understand, and use services, creating new useful and complex services with aggregated business value. Unlike RPC-based services, REST characteristics require a different approach to service description. We present the Resource Linking Language (ReLL) that introduces the concepts of media types, resource types, and link types as first class citizens for a service description. A proof of concept, a crawler called RESTler that crawls RESTful services based on ReLL descriptions, is also presented.",
		"URL": "http://doi.acm.org/10.1145/1772690.1772799",
		"DOI": "10.1145/1772690.1772799",
		"ISBN": "978-1-60558-799-8",
		"shortTitle": "RESTler",
		"author": [
			{
				"family": "Alarcón",
				"given": "Rosa"
			},
			{
				"family": "Wilde",
				"given": "Erik"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/6G4MMAUC",
		"type": "paper-conference",
		"title": "REST API Management and Evolution Using MDA",
		"container-title": "Proceedings of the Eighth International C* Conference on Computer Science & Software Engineering",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "102–109",
		"source": "ACM Digital Library",
		"event-place": "New York, NY, USA",
		"abstract": "Nowadays, the REST (Representational State Transfer) is becoming the most commonly used way how to create, publish, and consume Web Services, exploiting JSON (JavaScript Object Notation) as the data exchange format. However, there are still no official standards for REST (like WSDL for Web Services) and for JSON (like XML Schema for the XML language). Next, there are no defined instructions how the resource versions should be managed. In this paper we focus on managing and generating REST resources based on the MDA (Model-Driven Architecture) principle which enables designing and maintenance of complex projects. We introduce a way how to describe the REST API in MDA and how to provide automatic evolution management between subsequent API versions derived from the original version. The proposed solution describes a novel model which represents REST requests and algorithms for providing evolution of this model based on changes done in the PIM (Platform-Independent Model) of MDA.",
		"URL": "http://doi.acm.org/10.1145/2790798.2790820",
		"DOI": "10.1145/2790798.2790820",
		"ISBN": "978-1-4503-3419-8",
		"author": [
			{
				"family": "Polák",
				"given": "Marek"
			},
			{
				"family": "Holubová",
				"given": "Irena"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/X4DMSB2P",
		"type": "paper-conference",
		"title": "RESTful or RESTless-current state of today's top web APIs",
		"page": "42-51",
		"volume": "1165",
		"source": "Scopus",
		"archive": "Scopus",
		"event": "CEUR Workshop Proceedings",
		"abstract": "Recent developments in the world of services on the Web show that both the number of available Web APIs as well as the applications built on top is constantly increasing. This trend is commonly attributed to the wide adoption of the REST architectural principles [1]. Still, the development of Web APIs is rather autonomous and it is up to the providers to decide how to implement, expose and describe the Web APIs. The individual implementations are then commonly documented in textual form as part of a webpage, showing a wide variety in terms of content, structure and level of detail. As a result, client application developers are forced to manually process and interpret the documentation, and to implement individual solutions with low level of interoperability and reuse. Before we can achieve a higher level of automation and can make any significant improvement to current practices and technologies, we need to reach a deeper understanding of their similarities and differences. Therefore, in this paper we present a thorough analysis of the most popular Web APIs through the examination of their documentation. We provide conclusions about common description forms, output types, usage of API parameters, invocation support, level of reusability, API granularity and authentication details. The collected data builds a solid foundation for identifying deficiencies and can be used as a basis for devising common standards and guidelines for Web API development.",
		"language": "English",
		"author": [
			{
				"family": "Bülthoff",
				"given": "F."
			},
			{
				"family": "Maleshkova",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8SUQHM42",
		"type": "article-journal",
		"title": "Today's top \"RESTful\" services and why they are not RESTful",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "354-367",
		"volume": "7651 LNCS",
		"source": "Scopus",
		"archive": "Scopus",
		"abstract": "Since Fielding's seminal contribution on the REST architecture style in 2000, the so-called class of RESTful services has taken off to challenge previously existing Web services. Several books have since then emerged, providing a set of valuable guidelines and design principles for the development of truly RESTful services. However, today's most popular \"RESTful\" services adopt only few of these guidelines, resulting in overburdening developers integrating multiple services in mashup applications. In this paper we present an in-depth analysis for the top 20 RESTful services listed on programmableweb.com against 17 RESTful service design criteria found in literature. Results provide evidence that hardly any of the services claiming to be RESTful is truly RESTful, probably due to the lack of rigidness and ease-of-use of currently available decision criteria. To improve the situation, we provide recommendations for various stakeholder groups. © 2012 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-35063-4_26",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Renzel",
				"given": "D."
			},
			{
				"family": "Schlebusch",
				"given": "P."
			},
			{
				"family": "Klamma",
				"given": "R."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/R2SECARE",
		"type": "article-journal",
		"title": "Maintaining replicated recovery log for RESTful services",
		"container-title": "International Journal of Grid and High Performance Computing",
		"page": "23-35",
		"volume": "7",
		"issue": "3",
		"source": "Scopus",
		"archive": "Scopus",
		"abstract": "Along with development of information systems, their requirements in terms of fault-tolerance increase and become more stringent. A possible approach to deal with this issue is rollback-recovery that consists in loading by the recovering node its most recent checkpoint, or retransmitting requests saved in its message log, to reach a consistent pre-failure state. Both checkpoint and message log are commonly said to be saved in a persistent storage able to survive any failure. In this paper the authors propose the implementation of a stable storage by means of replication of the log containing recovery information. The proposed solution is especially tailored for the service oriented systems implemented accordingly to REST paradigm. Thus, they utilize RESTful semantics in order to reduce the size of replicated recovery log and thereby increasing the efficiency of the proposed recovery log replication protocol. © 2015, IGI Global.",
		"DOI": "10.4018/IJGHPC.2015070102",
		"ISSN": "1938-0259",
		"language": "English",
		"author": [
			{
				"family": "Kobusinska",
				"given": "A."
			},
			{
				"family": "Wawrzyniak",
				"given": "D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/5G69RZ9S",
		"type": "article-journal",
		"title": "REST and Web Services: In Theory and in Practice",
		"page": "35-57",
		"source": "rd.springer.com",
		"URL": "http://link.springer.com/chapter/10.1007/978-1-4419-8303-9_2",
		"DOI": "10.1007/978-1-4419-8303-9_2",
		"shortTitle": "REST and Web Services",
		"language": "en",
		"author": [
			{
				"family": "Adamczyk",
				"given": "Paul"
			},
			{
				"family": "Smith",
				"given": "Patrick H."
			},
			{
				"family": "Johnson",
				"given": "Ralph E."
			},
			{
				"family": "Hafiz",
				"given": "Munawar"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/4S6JWNKR",
		"type": "article-journal",
		"title": "The Essence of REST Architectural Style",
		"page": "21-33",
		"source": "rd.springer.com",
		"URL": "http://link.springer.com/chapter/10.1007/978-1-4419-8303-9_1",
		"DOI": "10.1007/978-1-4419-8303-9_1",
		"language": "en",
		"author": [
			{
				"family": "Navon",
				"given": "Jaime"
			},
			{
				"family": "Fernandez",
				"given": "Federico"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/J8M8TWQA",
		"type": "article-journal",
		"title": "Using MPI to Improve ROA&REST Transfer Data Services",
		"container-title": "Procedia Computer Science",
		"page": "153-159",
		"volume": "37",
		"source": "ScienceDirect",
		"abstract": "performance is the most significant attribute that has been used in all modern system software. ROA &amp; REST are set of constraints that introduce a new concept of an architectural styles used in Distributed Systems. In DS all developers know XML files are used to transfer data services over global internet. However, these XML files have many important features, but these features are not enough to get high performance due to its huge size and complexity of processing. Then to overcome this problem, this paper introduces a new model to enhance data services transfer over internet. The proposed model state, MPI messages are advised to be used instead of XML files to send data services transfer. Also this paper provides a case study and a validation result that explains the benefit of using MPI in contrast to XML files with ROA &amp; REST.",
		"URL": "//www.sciencedirect.com/science/article/pii/S1877050914009892",
		"DOI": "10.1016/j.procs.2014.08.024",
		"ISSN": "1877-0509",
		"journalAbbreviation": "Procedia Computer Science",
		"author": [
			{
				"family": "Baua’a",
				"given": "Mustapha M."
			},
			{
				"family": "Hailan",
				"given": "Ahmed M."
			},
			{
				"family": "Srayyih",
				"given": "Mohsen N."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/5VXPRD5C",
		"type": "paper-conference",
		"title": "Developers Enjoy Hypermedia, but May Resist Browser-based OAuth Authorization",
		"container-title": "Proceedings of the First International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "4–8",
		"source": "ACM Digital Library",
		"event-place": "New York, NY, USA",
		"abstract": "Although desktop developers often have trouble consciously understanding RESTful concepts like \"hypermedia as the engine of application state\", this does not prevent them from intuitively understanding client-side tools based on these concepts. However, I encountered unexpected developer resistance after implementing a security protocol I and other web developers had thought uncontroversial: the most common mechanism for authorizing OAuth request tokens.",
		"URL": "http://doi.acm.org/10.1145/1798354.1798377",
		"DOI": "10.1145/1798354.1798377",
		"ISBN": "978-1-60558-959-6",
		"author": [
			{
				"family": "Richardson",
				"given": "Leonard"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/BNS3ZGGT",
		"type": "paper-conference",
		"title": "Integration of REST style and AJAX technologies to build Web applications; an example of framework for Location-Based-Services",
		"container-title": "2008 3rd International Conference on Information and Communication Technologies: From Theory to Applications",
		"page": "1-6",
		"source": "IEEE Xplore",
		"event": "2008 3rd International Conference on Information and Communication Technologies: From Theory to Applications",
		"abstract": "In the last years two important architectural and technological solutions have been proposed for improving Web applications design. The REST architectural style has been defined to describe the WWW architecture and to guide its future evolution preserving the fundamental characteristics of scalability. At the same time AJAX and related technologies have changed the way many Web applications are designed and implemented enhancing responsiveness and pervasiveness. The integration of this two approaches seems promising, but several issues must be tackled. For testing possible solutions, we designed and implemented a framework for building mobile Web applications using the REST architecture and AJAX technologies: the MIRAJ framework. It was used to develop a basic set of Location-Based-Services for tourist guidance in an archaeological park located in Metaponto, Italy.",
		"DOI": "10.1109/ICTTA.2008.4530218",
		"author": [
			{
				"family": "Mazzetti",
				"given": "P."
			},
			{
				"family": "Nativi",
				"given": "S."
			},
			{
				"family": "Sacco",
				"given": "A."
			},
			{
				"family": "Bigagli",
				"given": "L."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					4
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2WRJVMDP",
		"type": "article-journal",
		"title": "Model for service license in API ecosystems",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "590-597",
		"volume": "8831",
		"source": "Scopus",
		"archive": "Scopus",
		"abstract": "Rapid growth and consumption of REST APIs is generating new types of service marketplaces, which are dynamic and complex networks of providers and consumers. Existing models for software licenses and service standards, such as WDSL fall short of providing flexible frameworks for capturing the requirements that this newly created environment demands. Gaps exist in support for multi-pricing agreements across multiple providers and consumers, support for both usage and capacity events and automated generation and composition of licenses. Developers are accustomed to self-serve model, where they create and deploy new applications on the Cloud with a few mouse clicks, employing one or more available APIs. As a result, there is a need to be able to automatically assess existing licenses, compose new ones and understand their dependencies in order to shorten the time-to-value for new services. In this paper, we propose a model-driven approach for defining API service licenses, which provides capabilities to capture business and legal constraints, enable license metric calculation, QoS calculation and service pricing rules. We present API SLA analyzer system, which utilizes proposed license model to uncover SLA violations in real-time. © Springer-Verlag Berlin Heidelberg 2014.",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Vukovic",
				"given": "M."
			},
			{
				"family": "Zeng",
				"given": "L.Z."
			},
			{
				"family": "Rajagopal",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/CKNJ45QH",
		"type": "paper-conference",
		"title": "Modeling Resources in a Service-Oriented World",
		"container-title": "2009 42nd Hawaii International Conference on System Sciences",
		"page": "1-10",
		"source": "IEEE Xplore",
		"event": "2009 42nd Hawaii International Conference on System Sciences",
		"abstract": "Over the last years, the need to interconnect businesses has significantly affected the Web. The Web has moved constantly from a static source of documents to a dynamic platform for distributed applications. The communication infrastructure of the Web links together applications, e.g. by exposing functionality through Web services in different architectural styles. The current strife between SOA and REST leads one to the issue which approach to choose. Supported by a formal model, we show an integrative way to incorporate service orientation and resource orientation in federated systems as a foundation for future agreements rather than a separation of the approaches.",
		"DOI": "10.1109/HICSS.2009.311",
		"author": [
			{
				"family": "Heil",
				"given": "A."
			},
			{
				"family": "Gaedke",
				"given": "M."
			},
			{
				"family": "Meinecke",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					1
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/HWQ424JD",
		"type": "paper-conference",
		"title": "Semantic Description of the Experience API Specification",
		"container-title": "2015 IEEE 15th International Conference on Advanced Learning Technologies",
		"page": "268-269",
		"source": "IEEE Xplore",
		"event": "2015 IEEE 15th International Conference on Advanced Learning Technologies",
		"abstract": "Capturing and storing learners' data is the first step to implement a learning analytics architecture. The Experience API (xAPI) specification is a de facto standard that describes (i) a REST-based API to store and retrieve the learners' activity data, and (ii) an RDF-based data model where the restrictions among data are specified in natural language. In this paper, we present an ontology that formally represents both the data model and the restrictions of the xAPI specification, facilitating the conformance testing of the data coming from the learning management system to guarantee the compliance with the specification.",
		"DOI": "10.1109/ICALT.2015.128",
		"author": [
			{
				"family": "Vidal",
				"given": "J. C."
			},
			{
				"family": "Rabelo",
				"given": "T."
			},
			{
				"family": "Lama",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/D3GNZIMP",
		"type": "article-journal",
		"title": "Using a Cloud-centric Middleware to Enable Mobile Hosting of Web Services: MHealth Use Case",
		"container-title": "Personal Ubiquitous Comput.",
		"page": "1085–1098",
		"volume": "18",
		"issue": "5",
		"source": "ACM Digital Library",
		"abstract": "The unceasing growth and divergence of the mobile landscape have led to the use of smartphone and tablet devices in consuming Web services (WS) in enterprises. However, in heterogeneous WS, the shift from the mobile client consumer approach to the mobile service hosting approach is insufficiently studied. With the advancement of storage and processing capabilities of these devices, coupled with the high availability of the Web, this research focuses on the use of the mobile devices as hosts of WS in a mHealth domain. In this paper, a cloud-centric middleware technique is employed to enable access to the mobile hosts. The paper presents mobile hosting of medical data which are modeled as light-weight WS which is deployed in a real-world system. Further, a workflow authorization model is proposed to ensure privacy and the prevention of unauthorized modification of data on the mobile hosts. A data encryption technique is also put forward to enforce security and privacy of the mobile hosted data. Our current implemented project, called SOPHRA, supports mobile communication over HTTP in a Wi-Fi environment.",
		"URL": "http://dx.doi.org/10.1007/s00779-013-0721-8",
		"DOI": "10.1007/s00779-013-0721-8",
		"ISSN": "1617-4909",
		"shortTitle": "Using a Cloud-centric Middleware to Enable Mobile Hosting of Web Services",
		"author": [
			{
				"family": "Lomotey",
				"given": "Richard K."
			},
			{
				"family": "Deters",
				"given": "Ralph"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					6
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	
	{
		"id": "http://zotero.org/groups/121453/items/JXEEEF9Z",
		"type": "paper-conference",
		"title": "WF-interop: Adaptive and reflective REST interfaces for interoperability between workflow engines",
		"source": "Scopus",
		"archive": "Scopus",
		"event": "Proceedings of the 14th Workshop on Adaptive and Reflective Middleware, ARM 2015 - Collocated with ACM/IFIP/USENIX Middleware 2015",
		"abstract": "Software service providers are evolving towards a business process outsourcing (BPO) model to benefit from specialised services and facilities of external partners. Activation of external processes as well as having long-term and coarse- grained interaction with the outsourced processes results in remote work flow interactions between heterogeneous and federated work flow systems. WF-Interop aims at addressing the interoperability issues by defining a set of REST interfaces that enable standard- ised communication between these work flow engines. The WF-Interop interface focuses on deployment, activation and progress monitoring of work flows. It intends to be an in- terface for new as well as the existing work flow engines in order to expose their functionalities in a RESTful architec- ture. Amongst all functionalities proposed by WF-Interop, some may not be supported by some engines. As such, our standard API should be adaptive to the capabilities of each work flow engine and be reflective to the consumers by de- scribing supported capabilities on demand. As a validation of the principles and architecture of WF- interop, we created a proof-of-concept middleware and pro- totyped an accounting work flow with outsourced billing work- flow on top of it using jBPM[13] and Ruote[9] work flow en-gines. © 2015 ACM.",
		"DOI": "10.1145/2834965.2834966",
		"ISBN": "978-1-4503-3733-5",
		"shortTitle": "WF-interop",
		"language": "English",
		"author": [
			{
				"family": "Beni",
				"given": "E.H."
			},
			{
				"family": "Lagaisse",
				"given": "B."
			},
			{
				"family": "Joosen",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/C8RQ3XH8",
		"type": "article-journal",
		"title": "WSGM-SD: An Approach to RESTful Service Discovery Based on Weighted Service Goal Model",
		"container-title": "Chinese Journal of Electronics",
		"page": "256-263",
		"volume": "25",
		"issue": "2",
		"source": "digital-library.theiet.org",
		"abstract": "Faced with the rapidly increasing Web services, it becomes a challenging issue for users to effectively and accurately discover and reuse services. Existing service discovery approaches are mainly developed for services with WSDL documents, while only a few attention is being paid to services described in natural language, especially to the RESTful services. Towards this issue, we introduce a Weighted service goal model (WSGM) by measuring the weights of service goals extracted from the textual descriptions of services. Based on the WSGM, a novel service discovery approach called Service discovery based on WSGM (WSGM-SD) is proposed. Experiments on ProgrammableWeb, a public Web service repository, demonstrate the effectiveness of the proposed approach.",
		"URL": "http://digital-library.theiet.org/content/journals/10.1049/cje.2016.03.010",
		"DOI": "10.1049/cje.2016.03.010",
		"ISSN": "2075-5597",
		"shortTitle": "WSGM-SD",
		"author": [
			{
				"family": "Zhang",
				"given": "Neng"
			},
			{
				"family": "He",
				"given": "Keqing"
			},
			{
				"family": "Wang",
				"given": "Jian"
			},
			{
				"family": "Li",
				"given": "Zheng"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					3,
					1
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					26
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/UH4W9N3N",
		"type": "paper-conference",
		"title": "WSMeta: A Meta-model for Web Services to Compare Service Interfaces",
		"container-title": "Proceedings of the 17th Panhellenic Conference on Informatics",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "1–8",
		"source": "ACM Digital Library",
		"event-place": "New York, NY, USA",
		"abstract": "With the increasing adoption of the web-services stack of standards, service-oriented architecture has attracted substantial interest from the research community which has produced several languages and methods for describing and reasoning about services. These languages cover many concepts ranging from individual services and their code generation from specifications, service semantics, service compositions and networks, economics and business aspects around service ecosystems etc. However, this abundance of specification languages has also resulted in communication difficulties between stakeholders and hinders tasks such as service composition, discovery and maintenance. The presented work is a step towards the unification of the specifications and different aspects of service systems using Model-Driven Engineering. We propose a generic and abstract web service meta-model called WSMeta, which has the ability to describe both operation-centric web services (WS-*) and data-centric web services (REST) and can be used in tasks such as service evolution analysis and service systems maintenance.",
		"URL": "http://doi.acm.org/10.1145/2491845.2491860",
		"DOI": "10.1145/2491845.2491860",
		"ISBN": "978-1-4503-1969-0",
		"shortTitle": "WSMeta",
		"author": [
			{
				"family": "Fokaefs",
				"given": "Marios"
			},
			{
				"family": "Stroulia",
				"given": "Eleni"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/7GK2A7ES",
		"type": "paper-conference",
		"title": "What, not how: A generative approach to service composition",
		"container-title": "2009 3rd IEEE International Conference on Digital Ecosystems and Technologies",
		"page": "115–120",
		"abstract": "We argue that the complexity of the WS-* service stack is a barrier to the exploitation of service composition in digital ecosystems (and indeed, quite generally). As an alternative, we focus on the emerging interest in REpresentational State Transfer (REST) as an architectural style, and the Semantics of Business Vocabulary and Business Rules (SBVR) for the expression of business requirements. We describe an architecture by which declarative service requests can be dynamically generated from a pool of RESTful web services.",
		"DOI": "10.1109/DEST.2009.5276716",
		"shortTitle": "What, not how",
		"author": [
			{
				"family": "Marinos",
				"given": "A."
			},
			{
				"family": "Krause",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/6EK3G3TK",
		"type": "paper-conference",
		"title": "Research on Application of RDFa in RESTful Web Services",
		"container-title": "2012 Sixth International Conference on Internet Computing for Science and Engineering",
		"page": "266–269",
		"abstract": "Representational State Transfer (REST) is an architectural style that conforms to Web feature. Recently, people try to design simpler and more scalable Web services based on REST. This kind of Web Services is called Restful Web Services. Service representation is directly related to the quality of Restful Web Services. So Representation design is a common-concerned issue. In this paper, we proposed an innovative service representation method with RDFa. Service representations with semantics are developed. RDFa is compared with other micro format to demonstrate its technical merits and feasibility.",
		"DOI": "10.1109/ICICSE.2012.44",
		"author": [
			{
				"family": "Feng",
				"given": "X."
			},
			{
				"family": "Fan",
				"given": "Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					4
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/5EQGXRD4",
		"type": "paper-conference",
		"title": "An Ontology-Based Resource-Oriented Information Supported Framework towards RESTful Service Generation and Invocation",
		"container-title": "2010 Fifth IEEE International Symposium on Service Oriented System Engineering",
		"page": "107–112",
		"abstract": "Compare with SOAP-based service that based on interfaces access pattern, RESTful web service is HTTP-based and use resource as the operation object. On the purpose of supporting RESTful in the enterprise information application, a Resource-oriented Information Supported Framework is constructed based on ontology construction and evolution. First, the initial ontology with relational pattern is extracted from the enterprise legacy databases. Users can generate the domain ontology through the evolution of initial ontology led by enterprise elements. And then evolve domain ontology to resource model according to the virtual resource in enterprise. Finally user can describe the resources based on resource model to meet the REST Web Service. In order to support the dynamic, flexible, and scalable enterprise application, the framework also provides a semantic reference for RESTful service invocation. The prototype system has been developed now in order to implement the application, which includes a semantic uniform view in complex data environments of enterprise so as to build an information environment for RESTful services execution. Considering there are an increasing research and application tendency in the field of resource-oriented approach, the Ontology-based Resource-oriented Information Supported Framework provides a semantic-level enterprise information base not only for heterogeneous data integration but also for RESTful services application.",
		"DOI": "10.1109/SOSE.2010.59",
		"author": [
			{
				"family": "Zhang",
				"given": "W."
			},
			{
				"family": "Jiang",
				"given": "L."
			},
			{
				"family": "Cai",
				"given": "H."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/X69MWFN2",
		"type": "paper-conference",
		"title": "REST client pattern",
		"container-title": "2014 IEEE 23rd International Symposium on Industrial Electronics (ISIE)",
		"page": "231–235",
		"abstract": "Service oriented architecture (SOA) is a common architectural practice in large enterprises. There are numerous technologies to support SOA including web services. The IT industry is moving toward REST based design for its simplicity and productivity. Apache CXF, Apache Axis, JBoss RestEasy, and Jersey frameworks support REST based services and client side implementation. Based on our observation in health care, manufacturing, and retail domains a reoccurring solution can be put into practice so as to minimize code duplication. This paper presents such a solution in the form of a design pattern that promotes design re-use. The REST client pattern houses common service operations in the top of class hierarchy so that re-use is promoted by inheritance. The service specific call preparations are implemented by sub-classes. This pattern is being used by three iconic companies in above mentioned domains using three different open source frameworks-CXF, RESTEasy, and Jersey.",
		"DOI": "10.1109/ISIE.2014.6864616",
		"author": [
			{
				"family": "Upadhyaya",
				"given": "B. P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/ZBT7VUZ5",
		"type": "paper-conference",
		"title": "Enabling High Performance Mobile Web Services Provisioning",
		"container-title": "2009 IEEE 70th Vehicular Technology Conference Fall",
		"page": "1–6",
		"abstract": "The Telecommunication (TelCo) and Information Technology (IT) domains are converging at their intersection to provide vast variety of efficiently accessible services to the consumers. Specially in mobile communication domain, a vital factor that can affect the performance of any mobile application is the resource constraint nature of mobile devices with limited processing and storage capacity. On the other hand integration of heterogeneous networks and systems bring influential research challenges. In this paper, we present a concept of REST based Mobile Web Services (MobWS) provisioning and its comparison with a similar SOAP architecture in terms of HTTP payload. The requirements of REST architecture are discussed and URL structures are defined for the interaction with synchronous and asynchronous RESTful MobWS. A resource oriented approach for optimizing HTTP payload is presented and related message structures are discussed. It is shown that the REST based MobWS provisioning when compared to SOAP, offers promising results by significantly reducing the payload.",
		"DOI": "10.1109/VETECF.2009.5378949",
		"author": [
			{
				"family": "Aijaz",
				"given": "F."
			},
			{
				"family": "Ali",
				"given": "S. Z."
			},
			{
				"family": "Chaudhary",
				"given": "M. A."
			},
			{
				"family": "Walke",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/Z9BGADGE",
		"type": "paper-conference",
		"title": "A framework for flexible REST services: Decoupling authorization for reduced service dependency",
		"container-title": "2015 4th Mediterranean Conference on Embedded Computing (MECO)",
		"page": "51–55",
		"abstract": "Integrating or creating new applications (services), using existing data involves changing existing applications (services). For better usage, there is a need to export data as basic services (SOA approach). Representational State Transfer (REST) works with resources instead of operations, offering full web-scale interoperability and scalability advantages while exchanging information between applications and in this way is more adequate, also offering HTTP content negotiation, most importantly discoverability for free and HTTP concurrency control and compression. Although there are de-facto standardized solutions for such SOA architectures, essential problems remain and need to be addressed: Authentication, Authorization, and Security. In our work we are going to propose a decoupling authorization framework for reduced service dependency, providing integration of in-house service registration such as University Services in the Cloud increasing service flexibility.",
		"DOI": "10.1109/MECO.2015.7181861",
		"shortTitle": "A framework for flexible REST services",
		"author": [
			{
				"family": "Memeti",
				"given": "A."
			},
			{
				"family": "Selimi",
				"given": "B."
			},
			{
				"family": "Besimi",
				"given": "A."
			},
			{
				"family": "Çiço",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XD37WSV6",
		"type": "paper-conference",
		"title": "A REST Service Framework for Fine-Grained Resource Management in Container-Based Cloud",
		"container-title": "2015 IEEE 8th International Conference on Cloud Computing",
		"page": "645–652",
		"abstract": "Although many current Cloud computing platforms are still based on virtual machines running on hyper visors, there are two trends towards a more flexible and efficient Cloud computing paradigm. One trend is the Resource-as-a-Service (RaaS) based Cloud, where the fine-grained resources can be rented at short time intervals. The other one is the container-based Cloud, where the lightweight containers replace the virtual machines. Both trends require a more flexible and efficient resource management framework to address the increased demands for scalability, heterogeneity, flexibility, deployment density, and efficiency. To provide such a resource management framework, this paper describes a REST service framework based on the concept of Resource-Oriented Network (RON) that decouples the resource representation plane, control plane, and data plane. Created by an automated top-down development process, RON provides uniform and cohesive REST APIs to manage the fine-grained resources for processes, tasks, jobs, containers, servers, and clusters, by encapsulating the underlying Linux resource control models. In addition, we present a Role-Based Access Control (RBAC) architecture to secure the access to RON in the Cloud. A prototype system has been implemented and our experimental results show that the approach is feasible and the performance is consistent with the client and server workloads.",
		"DOI": "10.1109/CLOUD.2015.91",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Tang",
				"given": "T."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XRDSRNSS",
		"type": "paper-conference",
		"title": "Web Platform API Design Principles and Service Contract",
		"container-title": "2012 19th Asia-Pacific Software Engineering Conference",
		"page": "877–886",
		"volume": "1",
		"abstract": "The emergence of web services gives rise to service ecosystems, where core service platforms are exposed through APIs to a large number of third parties to provide new solutions. This often requires platform APIs to be able to evolve rapidly while not breaking backward compatibility in order to support a wider range of planned and unplanned use. The REST architecture style allows a service contract to be negotiated and delivered at runtime aiming to achieve higher level of evolvability. However this potential is often not fully realized due to the lack of systematic approach in architecture design to separate requirement-related contract elements from specification-related elements and integrate them into the overall API design. In this paper, we present a novel approach to designing service platform APIs in order to achieve high evolvability. We firstly apply the problem frames approach to better understand the interface coupling and the evolution of requirements. Based on the problem frame analysis, we propose a media-type centric approach to designing RESTful service API. We applied our approach to the Twitter API evolution. The result shows significant improvements in the areas of contract leaking prevention, interface consistency and adding new features.",
		"DOI": "10.1109/APSEC.2012.24",
		"author": [
			{
				"family": "Chen",
				"given": "Y."
			},
			{
				"family": "Xu",
				"given": "X."
			},
			{
				"family": "Zhu",
				"given": "L."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XHCUGE3S",
		"type": "paper-conference",
		"title": "Web services: Design choices for space ground system integration",
		"container-title": "MILCOM 2012 - 2012 IEEE Military Communications Conference",
		"page": "1–6",
		"abstract": "The primary role of a ground system in the design of a space ground network is to exchange information between the space fleet and the end users. In order to maintain secure, reliable communications and provide situational awareness, a ground system needs to choreograph services between heterogeneous interfaces of various key elements in the ground system architecture. The choice of Service Oriented Architecture and Web Services provides a cost effective and scalable solution to integrate disparate software elements of the ground system. The two major concepts in web service technology are SOAP and REST. While SOAP is a protocol to transfer information between two end points, REST principles concentrate on representing resource state information using resource identifiers. The paper discusses merits and de-merits of each approach in the integration of a space ground system's heterogeneous interfaces. The paper starts with the large grain description of a typical space ground system, followed by a discussion of SOAP and REST principles. A comparison of SOAP and REST based approaches in the design and integration of a ground system is discussed. Finally the paper concludes with a discussion of recent trends in the techniques of web services.",
		"DOI": "10.1109/MILCOM.2012.6415634",
		"shortTitle": "Web services",
		"author": [
			{
				"family": "Nath",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VB3R7CJU",
		"type": "paper-conference",
		"title": "Describing Mobile Devices as RESTful Services for the End-Users",
		"container-title": "2016 IEEE International Conference on Mobile Services (MS)",
		"page": "127–134",
		"abstract": "This paper presents an end-user oriented approach of describing mobile devices as RESTful services. The mobile services are provided to the end-users through a centralized server. To enable plugging of devices, they provide a machine-processable device description with detailed specification of their RESTful API. The device description is used to generate required user interface as well as generating the RESTful invocations. We provide general guidelines on how to design a REST API for a mobile device and a device description for machine-to-machine interactions. The approach is demonstrated by building a centralized marketplace to promote and use available mobile services. The central marketplace acts as a broker for the dynamic mobile services. In addition, we use two case study applications to demonstrate the service registration, provisioning, and usage.",
		"DOI": "10.1109/MobServ.2016.27",
		"author": [
			{
				"family": "Ruokonen",
				"given": "A."
			},
			{
				"family": "Wu",
				"given": "Z."
			},
			{
				"family": "Lu",
				"given": "R."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VGV9T4JK",
		"type": "paper-conference",
		"title": "Mitigating DoS to authenticated cloud REST APIs",
		"container-title": "The 9th International Conference for Internet Technology and Secured Transactions (ICITST-2014)",
		"page": "106–111",
		"abstract": "Systems available on the Internet are day-by-day targets of Denial of Service (DoS) attacks. These attacks can leave a system with high response time or even make it unresponsive. A DoS attack can be executed at the network level, just by exploiting communication protocols weakness, or at application level, by exploiting implementation issues. Based on this scenario, this article presents a mechanism for mitigating DoS attacks aimed at exploiting REST applications using authentication tokens. This mitigation is based on the client behaviour, where it can be classified as possible malicious client. Our results show a response time decrease of 36% during an attack scenario applied to a cloud management system.",
		"DOI": "10.1109/ICITST.2014.7038787",
		"author": [
			{
				"family": "Michelin",
				"given": "R. A."
			},
			{
				"family": "Zorzo",
				"given": "A. F."
			},
			{
				"family": "Rose",
				"given": "C. A. De"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/N9KWDPGF",
		"type": "paper-conference",
		"title": "An Ontology-Based Representation of the Twitter REST API",
		"container-title": "2012 IEEE 24th International Conference on Tools with Artificial Intelligence",
		"page": "998–1003",
		"volume": "1",
		"abstract": "Social Networking Services (SNS) provide users with functionalities for developing their on line social networks, connecting with other users, sharing and consuming content. While most of popular SNS provide open Web 2.0 APIs, they remain disconnected from each other thus fragmenting user's data, social network and content. Semantic social web technologies such as public vocabularies and ontologies can be used for bridging the semantic gap between different SNS. Ontology-based representations of SNS APIs can help developers share knowledge about SNS APIs and can be used for linking APIs with public Social Semantic Web ontologies and vocabularies and for enabling automatic ontology-based service composition. An ontology based representation has been proposed for representing the API of the popular SNS Google+. In this paper, we study the API of Twitter SNS and create an ontology based representation of its structural and functional properties. The proposed Twitter REST API ontology reuses classes of the existing Google+ API ontology and describes valuable structural and functional details of the API, in a machine process able format useful for understanding the API and appropriate for integrating into ontology based Mashups.",
		"DOI": "10.1109/ICTAI.2012.85",
		"author": [
			{
				"family": "Togias",
				"given": "K."
			},
			{
				"family": "Kameas",
				"given": "A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					11
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/29UPGTGQ",
		"type": "paper-conference",
		"title": "An asynchronous interaction pattern for web service driven by Shared Memory",
		"container-title": "2010 2nd IEEE International Conference on Information Management and Engineering",
		"page": "171–175",
		"abstract": "Establishing the pattern of asynchronous interaction among services is a key to apply Web Service into large-scale scene. But current researches have not presented any interaction models which conform to the design style of Web, i.e. REST. Combining with asynchronous communication and persistent information sharing, this paper introduces Shared Memory into the design of Web Service, and provides a persistent and asynchronous interaction pattern, which presents global information sharing. Firstly, an asynchronous interaction model of Web Service based on Shared Memory is presented. And then, a consistent protocol of Shared Memory, which guarantees reasonable asynchronous interaction among services, is established. Finally, the workflow of the model in the paper is illuminated using an instance on the service interaction. The result of analysis shows that the model in the paper provides an asynchronous interaction model according with REST style for Web Service.",
		"DOI": "10.1109/ICIME.2010.5477477",
		"author": [
			{
				"family": "Yuan",
				"given": "Y."
			},
			{
				"family": "Ling",
				"given": "H."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					4
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/BXN2NWW5",
		"type": "paper-conference",
		"title": "An XML Based Monadic Framework for REST Service Compositions",
		"container-title": "2015 IEEE International Conference on Web Services",
		"page": "487–494",
		"abstract": "This paper presents a REST service composition framework based on functional programming with monads. It is motivated by the acute needs for dynamism and compos ability in concurrent control of large number of REST resources, especially in the areas of Cloud computing, software-defined networking (SDN), and Internet-of-Things/Web-of-Things. Dynamism gives us the ability to write a REST service composition program to invoke REST services whose identifications and operations are unknown at the design time, and compos ability gives us the ability to combine existing programs for different purposes. The key idea of our approach is to treat the primitives of a composition program, including resource identifications, operations, and control structures, as unknown functions and monads that can be dynamically composed from known functions and monads. We present the algebraic operators and rules that govern the compositions and its translation to XML, to combine the modularity and flexibility of functional programming with the portability and extensibility of XML. A prototype composition engine has been implemented and used to compose REST services in the Cloud computing domain. The initial experimental results indicate that the approach is feasible and promising.",
		"DOI": "10.1109/ICWS.2015.71",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Tang",
				"given": "T."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/F7HMB8QR",
		"type": "paper-conference",
		"title": "The Research and Design of Information Sharing of GIS Based on RESTful Web Service",
		"container-title": "2009 First International Conference on Information Science and Engineering",
		"page": "2225–2228",
		"abstract": "The model of Web Service and Geographic Information Services Specification of the OGC is introduced in this paper firstly; then the difference of the RPC and ROA is analyzed, the properties of the REST and the detail of the Restlet architecture are expounded. The detail of the advantages of GIS information sharing which used the REST design principles is indicated. Finally, the design process which used the REST design principles is described.",
		"DOI": "10.1109/ICISE.2009.1260",
		"author": [
			{
				"family": "Wang",
				"given": "H."
			},
			{
				"family": "Fan",
				"given": "H."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/CEG4VCF5",
		"type": "paper-conference",
		"title": "Comparison of architectures for service management in IoT and sensor networks by means of OSGi and REST services",
		"container-title": "2014 Federated Conference on Computer Science and Information Systems",
		"page": "1207–1214",
		"abstract": "In this paper two alternative architectures for service management in IoT and sensor networks are discussed. The first one is based on Open Service Gateway (OSGi) framework and Remote Services for OSGi (R-OSGi) bundle. The second architecture extends the notion of REST (Representational State Transfer) paradigm. There were few purposes of the extension. First, efficient, dynamic searching for devices capable of fulfilling certain requests within actual context was enabled. Second, both the devices and controlling services were distributed. Next, the devices were orchestrated in order to provide complex functionality. Finally, the access to the devices' functionality was standardized. OSGi-based solution was found simpler and better suited for homogeneous sensor networks, while more complex REST-based framework appeared as better suited for heterogeneous and widely distributed IoT devices and services.",
		"DOI": "10.15439/2014F324",
		"author": [
			{
				"family": "Rykowski",
				"given": "J."
			},
			{
				"family": "Wilusz",
				"given": "D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/NB2VGPP8",
		"type": "paper-conference",
		"title": "Design and Describe REST API without Violating REST: A Petri Net Based Approach",
		"container-title": "2011 IEEE International Conference on Web Services",
		"page": "508–515",
		"abstract": "As REST architectural style gains popularity in the web service community, there is a growing concern and debate on how to design Restful web services (REST API) in a proper way. We attribute this problem to lack of a standard model and language to describe a REST API that respects all the REST constraints. As a result, many web services that claim to be REST API are not hypermedia driven as prescribed by REST. This situation may lead to REST APIs that are not as scalable, extensible, and interoperable as promised by REST. To address this issue, this paper proposes REST Chart as a model and language to design and describe REST API without violating the REST constraints. REST Chart models a REST API as a special type of Colored Petri Net whose topology defines the REST API and whose token markings define the representational state space of user agents using that API. We demonstrate REST Chart with an example REST API. We also show how REST Chart can support efficient content negotiation and reuse hybrid representations to broaden design choices. Furthermore, we argue that the REST constraints, such as hypermedia driven and statelessness, can either be enforced naturally or checked automatically in REST Chart.",
		"DOI": "10.1109/ICWS.2011.54",
		"shortTitle": "Design and Describe REST API without Violating REST",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/KAEWBAA3",
		"type": "paper-conference",
		"title": "An extended UsernameToken-based approach for REST-style Web Service Security Authentication",
		"container-title": "2009 2nd IEEE International Conference on Computer Science and Information Technology",
		"page": "582–586",
		"abstract": "Web service security is essential for SOA-based applications. Based on the analysis of the two existing authentications of REST-style Web services, Basic HTTP Authentication and HTTP Digest Authentication, we propose an extended UsernameToken-based approach for REST-style Web service. In this approach, the WS-Security UsernameToken and secondary password are added into the HTTP header. By this way, the approach allows service providers to define their own authentication which makes up for the disadvantages of the current security aspect of REST-style Web services, especially when Basic HTTP Authentication and HTTP Digest Authentication are not applicable. Analysis shows that the approach implements the REST-style Web service security effectively.",
		"DOI": "10.1109/ICCSIT.2009.5234805",
		"author": [
			{
				"family": "Peng",
				"given": "Dunlu"
			},
			{
				"family": "Li",
				"given": "Chen"
			},
			{
				"family": "Huo",
				"given": "Huan"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					8
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/U845JP4P",
		"type": "paper-conference",
		"title": "Resource-Oriented Architecture for Business Processes",
		"container-title": "2008 15th Asia-Pacific Software Engineering Conference",
		"page": "395–402",
		"abstract": "REpresentational State Transfer (REST) is the set of design principles behind the World Wide Web (WWW). REST treats all entities in the world as link-connected resources, and supports a resource-oriented architecture (ROA) for the design of applications. REST and ROA are responsible for many of the desirable quality attributes achieved in the WWW, such as loose-coupling (better adaptability) and interoperability. However, many exiting Web-based or service-oriented applications (WSDL/SOAP-based) only use WWW/HTTP as a tunneling protocol or abuse URL and POX (Plain Old XML) by encoding method semantics in them. These applications use fine-grained remote procedure calls (RPC), breaking REST/ROA principles. We observe two kinds of challenges: 1) conceptually modelling process-intensive applications using a ROA promoted by the REST principles; and 2) practically decomposing a workflow-based business process into distributed, dynamic and RESTful process fragments. In this paper, we propose a ROA for business processes following the RESTful principles. We evaluate our approach by comparing it with current SOAP/WSDL/BPEL-driven approaches in terms of feasibility, process visibility, interoperability, and adaptability.",
		"DOI": "10.1109/APSEC.2008.52",
		"author": [
			{
				"family": "Xu",
				"given": "X."
			},
			{
				"family": "Zhu",
				"given": "L."
			},
			{
				"family": "Liu",
				"given": "Y."
			},
			{
				"family": "Staples",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/KKN45XA3",
		"type": "paper-conference",
		"title": "RestThing: A Restful Web Service Infrastructure for Mash-Up Physical and Web Resources",
		"container-title": "2011 IFIP 9th International Conference on Embedded and Ubiquitous Computing",
		"page": "197–204",
		"abstract": "In the field of Cyber Physical Systems and Pervasive Computing, physical resources and web resources can be easily handled and seamlessly integrated into our life. However, due to the heterogeneity of devices and tight coupling of individual information systems, the developers cannot easily create their specific applications by combining with physical and web resources. In this paper, we proposed Rest Thing which is a restful web service infrastructure based on REST principles in order to hide the heterogeneity of devices and provide a seamless way to integrate embedded devices with existing web applications. Besides, we implemented a prototyping system, which provided the restful accessible way of the wireless sensors, and built a demo application on the smart phone to collect and merge physical and web resources. Finally, we gave the performance evaluation of the prototyping system.",
		"DOI": "10.1109/EUC.2011.59",
		"shortTitle": "RestThing",
		"author": [
			{
				"family": "Qin",
				"given": "W."
			},
			{
				"family": "Li",
				"given": "Q."
			},
			{
				"family": "Sun",
				"given": "L."
			},
			{
				"family": "Zhu",
				"given": "H."
			},
			{
				"family": "Liu",
				"given": "Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8JDNMH42",
		"type": "paper-conference",
		"title": "REST+T: Scalable Transactions over HTTP",
		"container-title": "2015 IEEE International Conference on Cloud Engineering",
		"page": "36–41",
		"abstract": "Restful APIs are widely adopted in designing components that are combined to form web information systems. The use of REST is growing with the inclusion of smart devices and the Internet of Things, within the scope of web information systems, along with large-scale distributed NoSQL data stores and other web-based and cloud-hosted services. There is an important subclass of web information systems and distributed applications which would benefit from stronger transactional support, as typically found in traditional enterprise systems. In this paper, we propose REST+T (REST with Transactions), a transactional Restful data access protocol and API that extends HTTP to provide multi-item transactional access to data and state information across heterogeneous systems. We describe a case study called Tora, where we provide access through REST+T to an existing key-value store (WiredTiger) that was intended for embedded operation.",
		"DOI": "10.1109/IC2E.2015.11",
		"shortTitle": "REST+T",
		"author": [
			{
				"family": "Dey",
				"given": "A."
			},
			{
				"family": "Fekete",
				"given": "A."
			},
			{
				"family": "Röhm",
				"given": "U."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					3
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/K4RKHJX9",
		"type": "paper-conference",
		"title": "Reengineering Legacy Systems with RESTful Web Service",
		"container-title": "2008 32nd Annual IEEE International Computer Software and Applications Conference",
		"page": "785–790",
		"abstract": "Most of the SOA (Service Oriented Architecture) applications are not brand new and usually evolved from legacy systems. Legacy systems carry out the enterprisepsilas most crucial business information together with business processes and many organizations have leveraged the value of their legacy systems by exposing parts of it as services. Most of current Web services are SOAP-RPC style services. The evolution of the Web 2.0 phenomenon has led to the increased adoption of the RESTful services paradigm and reengineering legacy system to SOA with RESTful Web services is not only for reusing but will bring other benefits due to its special features. In this paper, the key issues for reengineering legacy systems with RESTful Web services are discussed. A common process for reengineering legacy systems to REST-style is proposed. The candidate Web services are identified by legacy systems comprehension at first. Then blend services are generated based on relationships between entities and constraint rules specified. The generated URIs are refined and split carefully to represent the RESTful Web services.",
		"DOI": "10.1109/COMPSAC.2008.89",
		"author": [
			{
				"family": "Liu",
				"given": "Y."
			},
			{
				"family": "Wang",
				"given": "Q."
			},
			{
				"family": "Zhuang",
				"given": "M."
			},
			{
				"family": "Zhu",
				"given": "Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/SV52NRVK",
		"type": "article-journal",
		"title": "SA-REST: Semantically Interoperable and Easier-to-Use Services and Mashups",
		"container-title": "IEEE Internet Computing",
		"page": "91–94",
		"volume": "11",
		"issue": "6",
		"abstract": "Services based on the representational state transfer (REST) paradigm, a lightweight implementation of a service-oriented architecture, have found even greater success than their heavyweight siblings, which are based on the Web Services Description Language (WSDL.) and SOAP. By using XML-based messaging, RESTful services can bring together discrete data from different services to create meaningful data sets; mashups such as these are extremely popular today.",
		"DOI": "10.1109/MIC.2007.133",
		"ISSN": "1089-7801",
		"shortTitle": "SA-REST",
		"author": [
			{
				"family": "Sheth",
				"given": "A. P."
			},
			{
				"family": "Gomadam",
				"given": "K."
			},
			{
				"family": "Lathem",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2007",
					11
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/FC8SJUP9",
		"type": "paper-conference",
		"title": "A comparison of SOAP and REST implementations of a service based interaction independence middleware framework",
		"container-title": "Proceedings of the 2009 Winter Simulation Conference (WSC)",
		"page": "1423–1432",
		"abstract": "This paper describes the conceptual design of an interaction independence middleware framework and describes the role that web services plays within it. We investigate two pervasive service-oriented architecture paradigms, SOAP and REST, in order to gauge their potential effectiveness in meeting underlying back-end data transmission requirements; provide implementations for the service-oriented architecture and data model; and, finally, critically evaluate both implementations with an emphasis on their performance with regard to both efficiency and scalability.",
		"DOI": "10.1109/WSC.2009.5429290",
		"author": [
			{
				"family": "Mulligan",
				"given": "G."
			},
			{
				"family": "Gra¿anin",
				"given": "D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/Z8PAIJAM",
		"type": "paper-conference",
		"title": "Research on e-Commerce Application Architecture Based on the Integration of Workflow and Agile Service",
		"container-title": "2008 International Symposium on Electronic Commerce and Security",
		"page": "843–849",
		"abstract": "In the current e-commerce applications, the existence of a large number of complex issues is mainly due to the complexity of e-commerce applications' own problem domain and the complication caused by building them on Web. In addition, constant changes in business environment have increased the difficulty of software development. Many styles such as heavy SOA style, the workflow-oriented architectural style, and original rest style are created to solve these problems. Unfortunately, the previous studies did not take into account all aspects, and made a number of assumptions excluding the realistic complexity and mutability to facilitate research. This paper attempts to find out the architectural constraints contained in the architectural styles by analyzing the styles mentioned above and to design a set of architectural constraints, which can induce desirable architectural properties for e-commerce applications - e-commerce application architectural style based on the integration of workflow and agile service. In this paper, we evaluate the effectiveness of this architectural style by theoretical derivation and implementation experience.",
		"DOI": "10.1109/ISECS.2008.78",
		"author": [
			{
				"family": "Wan",
				"given": "X."
			},
			{
				"family": "Huang",
				"given": "L."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					8
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/IK2B3NQ8",
		"type": "paper-conference",
		"title": "The impact of RESTful semantics on reducing the logging overhead in SOA",
		"container-title": "IISA 2014, The 5th International Conference on Information, Intelligence, Systems and Applications",
		"page": "228–233",
		"abstract": "Nowadays, one of the major paradigms of distributed processing is service-oriented computing. Although SOA-based applications have many advantages, they are also highly error-prone. To improve the availability and reliability of SOA-based systems and applications, a Reliable Service Environment RESERVE, providing an external support of web services recovery has been proposed. In this paper we focus on RESTful web services, based on Representational State Transfer (REST) paradigm, and propose the enhancement of RESERVE service that allows to decrease the overhead introduced by RESERVE due to taking advantage of REST characteristics.",
		"DOI": "10.1109/IISA.2014.6878805",
		"author": [
			{
				"family": "Danilecki",
				"given": "A."
			},
			{
				"family": "Hołenko",
				"given": "M."
			},
			{
				"family": "Kobusińska",
				"given": "A."
			},
			{
				"family": "Zierhoffer",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/ZWU2X4FD",
		"type": "article-journal",
		"title": "Embedded web services",
		"container-title": "IEEE Wireless Communications",
		"page": "52–57",
		"volume": "17",
		"issue": "6",
		"abstract": "The Internet of Things is the next big possibility and challenge for the Internet. Extending the web architecture to this new domain of constrained wireless networks and devices will be key to achieving the flexibility and scalability needed to make it a success. Web services have proven to be indispensable in creating interoperable communications between machines on today¿s Internet, but at the same time the overhead and complexity of web service technology such as SOAP, XML, and HTTP are too high for use in the constrained environments often found in machine-to-machine applications (e.g., energy monitoring, building automation, and asset management). This article first gives an overview of the web architecture, its core REST concepts, and the current state of the art in web services. Two key activities required in order to achieve efficient embedded web services are introduced: a fresh approach to a web application transfer protocol and efficient payload encoding. The article analyzes the most promising payload encoding techniques and introduces the new IETF Constrained RESTful Environments (CoRE) standardization activity.",
		"DOI": "10.1109/MWC.2010.5675778",
		"ISSN": "1536-1284",
		"author": [
			{
				"family": "Shelby",
				"given": "Z."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/E3NHGV7D",
		"type": "paper-conference",
		"title": "How to drill down to ReST APIs: Resource harvesting with a pattern tool",
		"container-title": "2011 13th IEEE International Symposium on Web Systems Evolution (WSE)",
		"page": "135–140",
		"abstract": "REST has become a popular architectural style among service providers. It is considered as an easy way to design and consume Web services. REST can be realized as using HTTP PUT, POST, and GET operations. However, the focus on the implementation technique often leads to ignoring the original REST constraints and definitions proposed by R. Fielding. Thus, this way of thinking might result in misuse of REST. In addition, less emphasis is put on designing good REST APIs, which indeed is not a trivial task. In this paper, we propose a questionnaire-based method, motivated by speech-act theory, to harvest the essential API concepts and their relationships from the functional service requirements. We present our pattern-based implementation of the method. We define a reusable REST API pattern, which can be applied in different contexts to produce an API model according to the REST design principles. The main benefit of the questionaire-based method is on shifting the focus from an operation-based to a resource-oriented mindset. The paper includes an empirical evaluation.",
		"DOI": "10.1109/WSE.2011.6081831",
		"shortTitle": "How to drill down to ReST APIs",
		"author": [
			{
				"family": "Hartikainen",
				"given": "M."
			},
			{
				"family": "Laitkorpi",
				"given": "M."
			},
			{
				"family": "Ruokonen",
				"given": "A."
			},
			{
				"family": "Systä",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/AQET2P2I",
		"type": "paper-conference",
		"title": "RestPL: Towards a Request-Oriented Policy Language for Arbitrary RESTful APIs",
		"container-title": "2016 IEEE International Conference on Web Services (ICWS)",
		"page": "666–671",
		"abstract": "Recently an increasing number of web applications especially cloud computing systems utilize representational state transfer (REST) API to deploy their services for simplicity and clarity. Users can employ the same interface to invoke various applications from the Internet. For security purposes, service providers would control the access to the provided interface through policy enforcement. Yet the access control of REST interfaces lacks a uniform standard regarding the policy language and corresponding enforcement implementation, which brings two limitations: i) Users have to deal with totally different types of policies to accommodate certain systems. ii) Service providers have to design their own platform-specific authorization policy language and the related enforcement mechanisms. In this paper, we propose a REST Policy Language (RestPL) to express the authorization policies especially for REST APIs. RestPL is ensured to be request-oriented, based on our definition of the standard request form. This indicates that a RestPL policy can be automatically generated from an actual request, which helps mitigate a user's pressure during policy designing. Furthermore, we also provide a reference implementation for the enforcement code of RestPL based on regular expressions and deploy it on OpenStack Liberty to demonstrate its feasibility. The experimental results indicate the enforcement overhead of RestPL can be reduced to 80.6% compared with the original policy. In addition, we show that an end-user can also benefit from RestPL for reducing the learning effort by at least 41.6%.",
		"DOI": "10.1109/ICWS.2016.92",
		"shortTitle": "RestPL",
		"author": [
			{
				"family": "Luo",
				"given": "Y."
			},
			{
				"family": "Zhou",
				"given": "H."
			},
			{
				"family": "Shen",
				"given": "Q."
			},
			{
				"family": "Ruan",
				"given": "A."
			},
			{
				"family": "Wu",
				"given": "Z."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/MXW72VBD",
		"type": "paper-conference",
		"title": "RESTful Dynamic Framework for Services in Mobile Wireless Networks",
		"container-title": "2009 International Conference on E-Business and Information System Security",
		"page": "1–5",
		"abstract": "Recent advances in mobile wireless networks allow handheld devices, such as smart phones, pocket PCs, to connect to the Internet and use the distributed applications conveniently. And the model of software as a service enables the handheld devices to use the applications which previously run on PCs or servers. However, the mobile wireless environment is dynamic and resource-limited. It needs an efficient service supporting mechanism to keep continuous services for those devices. In this paper, we presented a dynamic service management framework for web services in mobile wireless networks. It adopts the architecture style of Representation State Transfer (REST) and supports the dynamic service discovery and adaptive service invocation. It is suitable for dynamic services access through the handheld devices. The case study illustrated that our framework can support the service subscribers to get sustaining and dynamic services.",
		"DOI": "10.1109/EBISS.2009.5138064",
		"author": [
			{
				"family": "Li",
				"given": "G."
			},
			{
				"family": "Sun",
				"given": "H."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/M8XRVGAK",
		"type": "paper-conference",
		"title": "Method for secure RESTful web service",
		"container-title": "2015 IEEE/ACIS 14th International Conference on Computer and Information Science (ICIS)",
		"page": "77–81",
		"abstract": "Recently, majority of environmental monitoring systems use Internet of Things devices [1]. The Nevada Solar Energy-Water-Environment Nexus project collects a large amount of environmental data from various remote sensors. In the previous research, we introduced REST API for communication and web service between senor and server [2]. However, current RESTful web service has several issues for authentication system. We developed an ID-based authentication algorithm to achieve a secure RESTful web service. ID-based authentication is based on Boneh-Franklin ID-based encryption and REST URI. Such process enabled server to handle client's request by acknowledging client's URI rather than storing client's entire status for stateless REST. Also, such process resolves current problems generated by implementing REST authentication.",
		"DOI": "10.1109/ICIS.2015.7166573",
		"author": [
			{
				"family": "Lee",
				"given": "S."
			},
			{
				"family": "Jo",
				"given": "J. Y."
			},
			{
				"family": "Kim",
				"given": "Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/EG5CVU3U",
		"type": "paper-conference",
		"title": "Test-the-REST: An Approach to Testing RESTful Web-Services",
		"container-title": "2009 Computation World: Future Computing, Service Computation, Cognitive, Adaptive, Content, Patterns",
		"page": "302–308",
		"abstract": "Representational state transfer (REST) is an architectural style that has received significant attention from software engineers for implementing web-services due to its simplicity and scalability. By definition, web-services are distributed, headless (lacking UI) and loosely coupled. This presents the implementers and testers of web-services withchallenges, which are different from those in testing of traditionalsoftware. REST has unique characteristics like uniforminterfaces, stateless communication, caching, etc. This also necessitatestaking a fresh look at web-service testing specificallyin the context of RESTful web-services. A large informaticinfrastructure being developed within our organisation islargely based on service-oriented concepts wherein many of theservices are RESTful. As a part of a research project namedTest-the-REST (TTR), we have developed an approach fortesting RESTful web-services of the above infrastructure. Theproject yielded in a number of novel technical innovations, e.g.a scalable plugin based architecture, an extensible XML basedtest specification format, a method for reusing and composingtest cases for use-case testing etc. A prototype of TTR was usedin testing a RESTful service of the above infrastructure early inthe construction phase. Many bugs were uncovered resulting insignificant value add. In this paper, we present our experienceand insights in developing and using Test-the-REST.",
		"DOI": "10.1109/ComputationWorld.2009.116",
		"shortTitle": "Test-the-REST",
		"author": [
			{
				"family": "Chakrabarti",
				"given": "S. K."
			},
			{
				"family": "Kumar",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					11
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/JMIRRWVF",
		"type": "paper-conference",
		"title": "Exploring SOAP and REST communication on the Android platform",
		"container-title": "MILCOM 2015 - 2015 IEEE Military Communications Conference",
		"page": "599–604",
		"abstract": "The usage of smart devices, such as phones and tablets, is becoming a more integral part of military information systems. The applications running on these systems need to exchange information with services running elsewhere in the information infrastructure. Many of these systems use SOAP Web services as their information exchange interface, but this technology is not natively supported on Android, the most common operating system for smart devices. Android does however have native support for REST, but this is not directly interoperable with SOAP Web services. In this paper we investigate the performance of both SOAP and REST Web services on Android, and find that while REST services consume less power, SOAP Web services give better responsiveness.",
		"DOI": "10.1109/MILCOM.2015.7357509",
		"author": [
			{
				"family": "Bloebaum",
				"given": "T. H."
			},
			{
				"family": "Johnsen",
				"given": "F. T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/NASB5IGW",
		"type": "paper-conference",
		"title": "REST-Based SOA Application in the Cloud: A Text Correction Service Case Study",
		"container-title": "2010 6th World Congress on Services",
		"page": "84–90",
		"abstract": "In this paper, we present a REST-based SOA system, Set It Right (SIR), where people can get feedback on and help with short texts. The rapid development of the SIR system, enabled by designing it as a set of services, and also leveraging commercially offered services, illustrates the strength of the SOA paradigm. Finally, we evaluate the Cloud Computing techniques and infrastructures used to deploy the system and how cloud technology can help shorten the time to market and lower the initial costs.",
		"DOI": "10.1109/SERVICES.2010.86",
		"shortTitle": "REST-Based SOA Application in the Cloud",
		"author": [
			{
				"family": "Li",
				"given": "W."
			},
			{
				"family": "Svärd",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/ZAAD4J6T",
		"type": "paper-conference",
		"title": "Improving REST Service Discovery with Unsupervised Learning Techniques",
		"container-title": "2015 Ninth International Conference on Complex, Intelligent, and Software Intensive Systems",
		"page": "97–104",
		"abstract": "Discovery and replacement are two of the main features of Service Oriented Computing. There has been much research on these topics for traditional SOAP-based Web Services, particularly on discovery. Although the original proposal for REST services lacks this feature, some researchers have studied how to perform discovery for REST services using both IR based techniques and semantic techniques. This work presents a novel IR-based discovery approach for REST services described via WADL files. Our approach takes advantage of unsupervised machine learning techniques for improving discovering results. In particular, the approach relies on clustering algorithms, such as K-means or X-means, to reduce the search space for a given query. The experimental results show that using an appropriate clustering technique, our approach achieves nearly 4 times higher F-measure than a traditional IR-based search engine, namely Apache Lucene. Additionally, the paper reports other metrics, such as Recall, Precision, Precision at-10 and Recall at-10, that also point out that the proposed approach outperforms Lucene. Finally, another important contribution is a set of queries and WADL files gathered from the Internet that can be used for evaluating future discovery proposals.",
		"DOI": "10.1109/CISIS.2015.14",
		"author": [
			{
				"family": "Rodriguez",
				"given": "J. M."
			},
			{
				"family": "Zunino",
				"given": "A."
			},
			{
				"family": "Mateos",
				"given": "C."
			},
			{
				"family": "Segura",
				"given": "F. O."
			},
			{
				"family": "Rodriguez",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/3E536NDS",
		"type": "paper-conference",
		"title": "Research of restful web services for the resource sharing platform",
		"container-title": "2010 International Conference on Advanced Intelligence and Awarenss Internet (AIAI 2010)",
		"page": "153–156",
		"abstract": "In this paper, we at first analyzed the traditional SOAP-PRC (Simple Object Access Protocol-Remote Procedure Call Protocol) web services. We then proposed a resource sharing framework based on AJAX (Asynchronous JavaScript and XML) and REST (Representational State Transfer) style. Moreover, a resource sharing platform has been implemented based on this framework. Experimental results are provided to show that the proposed method can reduce the server load and improve clients processor utilization effectively.",
		"DOI": "10.1049/cp.2010.0742",
		"author": [
			{
				"family": "Kou",
				"given": "Haijiao"
			},
			{
				"family": "Wen",
				"given": "Zhigang"
			},
			{
				"family": "Fan",
				"given": "Chunxiao"
			},
			{
				"family": "Zhang",
				"given": "Xiaoying"
			},
			{
				"family": "Wu",
				"given": "Yuexin"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/E7ENDGCF",
		"type": "article-journal",
		"title": "Demystifying RESTful Data Coupling",
		"container-title": "IEEE Internet Computing",
		"page": "87–90",
		"volume": "12",
		"issue": "2",
		"abstract": "Compared to approaches such as Web services and the Web Services Description Language (WSDL), which promote specialization for each service interface, the uniform-interface constraint reduces client-server coupling and helps minimize gratuitous differences in interface and method semantics across disparate resources. REST isn't a silver bullet, but its flexibility and relative simplicity make it highly applicable not only to Web-scale systems but also to a wide variety of enterprise integration problems. The representational state transfer (REST) architectural style, on the other hand, makes very specific and highly useful trade-offs meticulously chosen to enhance the scalability, extensibility, manageability, and maintainability of distributed systems and applications.",
		"DOI": "10.1109/MIC.2008.33",
		"ISSN": "1089-7801",
		"author": [
			{
				"family": "Vinoski",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					3
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/86Z8B8WZ",
		"type": "paper-conference",
		"title": "A semantic description language for RESTful Data Services to combat Semaphobia",
		"container-title": "5th IEEE International Conference on Digital Ecosystems and Technologies (IEEE DEST 2011)",
		"page": "47–53",
		"abstract": "RESTful Web services are an increasingly popular way for companies to expose their data on the Web. On the other hand, the Linked Open Data initiative is gaining traction recently. Since REST's principles align well with those of Linked Data, there is an increasing interest in the relationship of the two. Nevertheless, in practice they still largely remain separated, creating islands of data instead of a global graph of data forming the envisioned Semantic Web. There are different reasons for this. One is the reluctance of most Web developers to use Semantic Web technologies, a phenomenon we denote as Semaphobia. Another reason is that the Semantic Web is considered to be a disruptive technology which does not consider existing infrastructure. This makes it difficult for enterprises to update their legacy systems. To solve these and other issues, we propose a novel approach to semantically describe RESTful Data Services which in consequence leads to a mechanism to transform the data provided by such services to semantic resources. This aims to contribute to the availability of more semantic datasets. By keeping the approach as familiar and simple as possible for Web developers, we hope to lower the entry barrier and to foster the adoption of our approach.",
		"DOI": "10.1109/DEST.2011.5936597",
		"author": [
			{
				"family": "Lanthaler",
				"given": "M."
			},
			{
				"family": "Gütl",
				"given": "C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RQJP52T4",
		"type": "paper-conference",
		"title": "RESTful Web Services: A Solution for Distributed Data Integration",
		"container-title": "2009 International Conference on Computational Intelligence and Software Engineering",
		"page": "1–4",
		"abstract": "With the rapid development of the Internet, the Web is full of valuable information. Enterprises are increasingly faced with a big challenge of how to integrate the distributed data and applications effectively. The concept of SOA solves the traditional problem of tight coupling and Web services are the major technology for implementing SOA. However, in recent years, another trend is that REST has increasingly gained much attention and been widely used for Web services development. In this paper, we make an in-depth analysis about traditional Web services and RESTful Web services and design a testing scheme to test and analyze the performance of RESTful Web services to demonstrate that RESTful Web services are more suitable for Internet-scale distributed data integration.",
		"DOI": "10.1109/CISE.2009.5365234",
		"shortTitle": "RESTful Web Services",
		"author": [
			{
				"family": "Meng",
				"given": "J."
			},
			{
				"family": "Mei",
				"given": "S."
			},
			{
				"family": "Yan",
				"given": "Z."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/EIND39RF",
		"type": "paper-conference",
		"title": "MasterBroker: REST oriented service broker",
		"container-title": "IEEE 18th International Conference on Intelligent Engineering Systems INES 2014",
		"page": "227–232",
		"abstract": "Considering historical development and expansion of World Wide Web, it is obvious that there is no unique tendency in terms of supporting software technologies. Moreover, vast amount of different technologies has emerged because the system as a whole became quite complex and diverse. Heterogeneity, which is characteristic of distributed systems based on Web, is one of the main challenges which system designer may encounter. The paper presents and discusses a software solution proposal which mainly relies on widely deployed Internet stack protocols and REST (Representational State Transfer) style of Web services. Further, the paper compares standardized approach based on SOAP (Simple Object Access Protocol) to a proposed one based on REST. As a result, the implementation represents a control component with broker architecture.",
		"DOI": "10.1109/INES.2014.6909374",
		"shortTitle": "MasterBroker",
		"author": [
			{
				"family": "Kosmajac",
				"given": "D."
			},
			{
				"family": "Vujović",
				"given": "V."
			},
			{
				"family": "Maksimović",
				"given": "M."
			},
			{
				"family": "Davidović",
				"given": "N."
			},
			{
				"family": "Perišić",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/QH8VX9C3",
		"type": "paper-conference",
		"title": "Structural and behavioral modeling of RESTful web service interface using UML",
		"container-title": "2013 International Conference on Intelligent Systems and Signal Processing (ISSP)",
		"page": "28–33",
		"abstract": "World Wide Web can be viewed as a REST-based architecture and which uses a stateless, client-server, cacheable HTTP protocol for communication and resources is its basic element. RESTful web services use HTTP request to create and/or update, read and delete resources. Along with CRUD (Create, Read, Update and Delete) operations, there are many REST modeling issues addressed during our research related to describing the behavior of the Resources and how to show relation between resources including their attributes. In this paper we proposed the model using Unified Modeling Language to design structural and behavioral RESTful web services. We also developed hotel booking benchmark application based on these model.",
		"DOI": "10.1109/ISSP.2013.6526869",
		"author": [
			{
				"family": "Rathod",
				"given": "D. M."
			},
			{
				"family": "Parikh",
				"given": "S. M."
			},
			{
				"family": "Buddhadev",
				"given": "B. V."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					3
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/FFN8JVJ6",
		"type": "paper-conference",
		"title": "A Restful Approach to Service Level Agreements for Cloud Environments",
		"container-title": "2011 IEEE Ninth International Conference on Dependable, Autonomic and Secure Computing",
		"page": "650–657",
		"abstract": "Cloud Computing is becoming more and more a commodity service to all kinds of businesses. This leads to a stronger need for dependable service guarantees on the resources or applications offered to the customer by the provider via Service Level Agreements. Most offerings on the market, however, rely on non-electronic modes rather than machine-manageable means. In this paper, we propose a protocol that closes this gap for REST-based services and leverages the benefits of HTTP. We build upon the widely established WS-Agreement document format and show how our protocol integrates with the currently popular Open Cloud Computing Interface.",
		"DOI": "10.1109/DASC.2011.116",
		"author": [
			{
				"family": "Blumel",
				"given": "F."
			},
			{
				"family": "Metsch",
				"given": "T."
			},
			{
				"family": "Papaspyrou",
				"given": "A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/TNGK7UCJ",
		"type": "article-journal",
		"title": "REST Eye for the SOA Guy",
		"container-title": "IEEE Internet Computing",
		"page": "82–84",
		"volume": "11",
		"issue": "1",
		"abstract": "This paper discusses the representational state transfer (REST) and service-oriented architecture (SOA) debate. The author tries to explain REST from the viewpoint of someone steeped in SOA, with the intention of helping SOA people understand the value the REST camp so rightfully touts",
		"DOI": "10.1109/MIC.2007.22",
		"ISSN": "1089-7801",
		"author": [
			{
				"family": "Vinoski",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2007",
					1
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/QXHJVXKR",
		"type": "article-journal",
		"title": "Extending the Devices Profile for Web Services Standard Using a REST Proxy",
		"container-title": "IEEE Internet Computing",
		"page": "10–17",
		"volume": "19",
		"issue": "1",
		"abstract": "The Devices Profile for Web Services (DPWS) standard enables the use of Web services for certain Internet of Things (IoT) applications. DPWS is appropriate for implementing services on resource-constrained devices. However, little investigation has gone into how such services perform in IoT scenarios as regards features such as dynamic discovery and publish-subscribe eventing. Moreover, DPWS introduces considerable overhead due to its use of SOAP envelopes in exchange messages. To tackle these problems, the authors extend the DPWS standard using a REST proxy, creating a RESTful Web API that paves the way for developers to invest more in this technology.",
		"DOI": "10.1109/MIC.2014.44",
		"ISSN": "1089-7801",
		"author": [
			{
				"family": "Han",
				"given": "S. N."
			},
			{
				"family": "Park",
				"given": "S."
			},
			{
				"family": "Lee",
				"given": "G. M."
			},
			{
				"family": "Crespi",
				"given": "N."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					1
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/6ZAMWN3Z",
		"type": "paper-conference",
		"title": "REST based service composition: Exemplified in a care network scenario",
		"container-title": "2011 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)",
		"page": "251–252",
		"abstract": "This paper presents an ongoing work developing and testing a Service Composition framework based upon the REST architecture named SECREST. A minimalistic approach have been favored instead of a creating a complete infrastructure. One focus has been on the system's interaction model. Indeed, an aim is to allow users in different healthcare scenarios to experiment with service composition to support highly individual and changing needs.",
		"DOI": "10.1109/VLHCC.2011.6070417",
		"shortTitle": "REST based service composition",
		"author": [
			{
				"family": "Grönvall",
				"given": "E."
			},
			{
				"family": "Ingstrup",
				"given": "M."
			},
			{
				"family": "Pløger",
				"given": "M."
			},
			{
				"family": "Rasmussen",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/CHJ3M85Q",
		"type": "paper-conference",
		"title": "A proposal for REST with XMPP as base protocol for intercloud communication",
		"container-title": "2016 7th International Conference on Information, Intelligence, Systems Applications (IISA)",
		"page": "1–6",
		"abstract": "The IEEE Intercloud project aims to facilitate intercloud interoperability and portability. While topology elements and basic security and trust models had been developed during the last years, an adequate base protocol for the intercloud communication is still required. This protocol have to be extensible and should eliminate limitations of HTTP. This paper proposes a novel protocol that addresses the requirements of the P2302 standard to design a service framework that provides similar capabilities as HTTP-based SOAP or REST web services. In fact, the protocol proposed in this paper adopts the REST architectural style to XMPP. Furthermore, the protocol allows for advertising resource capabilities, discovering resources, and to perform actions on resources by its nature. This protocol has been implemented in the RWX4J framework and was evaluated regarding functionality, performance, and efficiency. The results presented in this paper show significant improvements compared to HTTP-based RESTful web services.",
		"DOI": "10.1109/IISA.2016.7785436",
		"author": [
			{
				"family": "Stanik",
				"given": "A."
			},
			{
				"family": "Kao",
				"given": "O."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/3298BKX3",
		"type": "paper-conference",
		"title": "Performance comparison of SOAP and REST based Web Services for Enterprise Application Integration",
		"container-title": "2015 International Conference on Advances in Computing, Communications and Informatics (ICACCI)",
		"page": "1656–1660",
		"abstract": "Web Services are common means to exchange data and information over the network. Web Services make themselves available over the internet, where technology and platform are independent. Once web services are built it is accessed via uniform resource locator (URL) and their functionalities can be utilized in the application domain. Web services are self-contained, modular, distributed and dynamic in nature. These web services are described and then published in Service Registry e.g., UDDI and then they are invoked over the Internet. Web Services are basic Building blocks of Services Oriented Architecture (SOA). These web services can be developed based on two interaction styles such as Simple Object Access Protocol (SOAP) and Representational State Transfer Protocol (REST). It is important to select appropriate interaction styles i.e., either SOAP or REST for building Web Sevices. Choosing service interaction style is an important architectural decision for designers and developers, as it influences the underlying requirements for implementing web service solutions. In this study, the performance of application of web services for Enterprise Application Integration (EAI) based on SOAP and REST is compared. Since web services operate over network throughput and response time are considered as a metrics parameter for evaluation.",
		"DOI": "10.1109/ICACCI.2015.7275851",
		"author": [
			{
				"family": "Kumari",
				"given": "S."
			},
			{
				"family": "Rath",
				"given": "S. K."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					8
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RKE62JNG",
		"type": "paper-conference",
		"title": "RETRO: A Consistent and Recoverable RESTful Transaction Model",
		"container-title": "2009 IEEE International Conference on Web Services",
		"page": "181–188",
		"abstract": "With REST becoming a popular paradigm for Web services, more and more use cases are applied to it, including some that require transactional guarantees. We propose a RESTful transaction model that satisfies both the constraints of transactions as well as those of the REST architectural style. We provide formal proof of consistency and recoverability in the proposed framework and show the robustness of its properties in the presence of concurrent transactions.",
		"DOI": "10.1109/ICWS.2009.99",
		"shortTitle": "RETRO",
		"author": [
			{
				"family": "Marinos",
				"given": "A."
			},
			{
				"family": "Razavi",
				"given": "A."
			},
			{
				"family": "Moschoyiannis",
				"given": "S."
			},
			{
				"family": "Krause",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RR5PAUPP",
		"type": "paper-conference",
		"title": "REST API Design Patterns for SDN Northbound API",
		"container-title": "2014 28th International Conference on Advanced Information Networking and Applications Workshops",
		"page": "358–365",
		"abstract": "REST architectural style gains increasing popularity in the networking protocol design, and it has become a prevalent choice for northbound API of Software-Defined Networking (SDN). This paper addresses many critical issues in RESTful networking protocol design, and presents a framework on how a networking protocol can be designed in a truly RESTful manner, making it towards a service oriented data networking. In particular, we introduce the HTTP content negotiation mechanism which allows clients to select different representation formats from the same resource URI. Most importantly, we present a hypertext-driven approach, so that hypertext links are defined between REST resources for the networking protocol to guide clients to identify the right resources rather than relying on fixed resource URIs. The advantages of our approach are verified in two folds. First, we show how to apply our approach to fix REST design problems in some existing northbound networking APIs, and then we show how to design a RESTful northbound API of SDN in the context of OpenStack. We implemented our proposed approach in the northbound REST API of SOX, a generalized SDN controller, and the benefits of the proposed approach are experimentally verified.",
		"DOI": "10.1109/WAINA.2014.153",
		"author": [
			{
				"family": "Zhou",
				"given": "W."
			},
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Luo",
				"given": "M."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/W48Z2TBF",
		"type": "paper-conference",
		"title": "Design Patterns for RESTful Communication Web Services",
		"container-title": "2010 IEEE International Conference on Web Services",
		"page": "512–519",
		"abstract": "In recent years, REST (Representational State Transfer) has received much attention for designing scalable web services in various domains. There is an increasing interest on its application to real-time communication web services. Based on a case study of CSTA services, we found that communication services exhibit a combination of complex message exchange and stateful behavior patterns, including multi-states, two-way interaction, event-driven, multi-resources, multi-responses and session management, that need to be modeled properly within the framework of REST. To address these challenges, we propose three REST design patterns: session, event subscription and relationship using REST composition. This approach leads to a systematic one-to-one transformation from CSTA to REST. We hope such a study on a concrete use case can contribute to a better understanding of REST and lead to a seamless convergence of communication services with the infrastructure of the Web.",
		"DOI": "10.1109/ICWS.2010.101",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/998K6PPD",
		"type": "paper-conference",
		"title": "Web Services Extension Model simulation in Hierarchical Colored Petri Net",
		"container-title": "2012 International Conference on Computer Information Science (ICCIS)",
		"page": "741–746",
		"volume": "2",
		"abstract": "This paper presents the modeling in Web Services (WS) extension (WS-E) for higher message transfer performance by Representational State Transfer (REST) architecture style and Abstract Syntax Notation One XML Encoding Rule (XER) adoption. Hierarchical Colored Petri Net (HCPN) model is constructed for the WS extension framework formalization. The validation and verification of the model is performed by analyzing the generated State Space (SS). It is the aim of this paper as a proof of concept of the larger research titled “Web Services Extension Model in Colored Petri Net to Enhanced the Message Transfer Performance”, an architectural extension proposal to the current remote laboratory remote instrument connected to the grid for facility sharing aimed at higher communication performance.",
		"DOI": "10.1109/ICCISci.2012.6297125",
		"author": [
			{
				"family": "Adhipta",
				"given": "D."
			},
			{
				"family": "Hassan",
				"given": "M. F."
			},
			{
				"family": "Mahmood",
				"given": "Ahmad Kamil"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8M7367V5",
		"type": "paper-conference",
		"title": "RESTful Web Service integration using Android platform",
		"container-title": "2013 Fourth International Conference on Computing, Communications and Networking Technologies (ICCCNT)",
		"page": "1–6",
		"abstract": "Internet is providing the platform for accessing different kinds of services in a distributed and heterogeneous environment. Software components are available on Internet in the form of Web Services. Service Oriented Architecture (SOA) possesses various characteristics by executing Web Services using Simple Object Access Protocol (SOAP). SOAP has certain limitations such as tightly coupled invocation, performance in terms of response data, non-uniform interface and no hyperlink support. These limitations can be resolved by implementing principles of Representational State Transformation (REST). REST is an architectural style implemented by resources known as RESTful Web Services. At present, light-weight RESTful services are dominating the development of services due to simplicity of RESTful architecture. Service access and invocation is simple in RESTful framework as it uses Uniform Resource Identifier (URIs) and Hyperlinks. In this paper, we explore the idea of RESTful Service Mashup by integrating individual Web Services which can satisfy end users' requirements. For this work, we propose a recursive algorithm. The implementation work is on Android 2.2 (froyo), API level 8 and above. It is supported on most of Android based mobile devices.",
		"DOI": "10.1109/ICCCNT.2013.6726550",
		"author": [
			{
				"family": "Bohara",
				"given": "M. H."
			},
			{
				"family": "Mishra",
				"given": "M."
			},
			{
				"family": "Chaudhary",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2A6D47HU",
		"type": "paper-conference",
		"title": "A Framework for Semantic Description of RESTful Web APIs",
		"container-title": "2014 IEEE International Conference on Web Services",
		"page": "630–637",
		"abstract": "Support from development tools and infrastructure frameworks is crucial to increase the development of Web APIs that follow the REST architectural principle, leaving the software developer free to focus on the implementation of the business core of the application. This paper introduces a framework for semantic description of RESTful Web APIs, which is based on annotations added to the application code that associate resources, properties and operations with terms semantically described by vocabularies and ontologies. The proposed framework enforces the adoption of design principles for modelingWeb APIs, focusing on resource representations and targeting important features for high concurrency services, such as low coupling and high flexibility among layers.",
		"DOI": "10.1109/ICWS.2014.93",
		"author": [
			{
				"family": "Salvadori",
				"given": "I. L."
			},
			{
				"family": "Siqueira",
				"given": "F."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RSJNMJRE",
		"type": "paper-conference",
		"title": "From Representational State Transfer to Accountable State Transfer Architecture",
		"container-title": "2010 IEEE International Conference on Web Services",
		"page": "299–306",
		"abstract": "Since Representational State Transfer (REST) architecture was proposed by Fielding in early 1990s for distributed hypermedia systems, it has become a popular architectural style of choice in various computing environments. However, REST was not originally designed to support enterprise requirements, in particular the accountability requirements that are crucial for the business services offered through the Software as a Service (SaaS) and Cloud Computing environments. In this paper, we propose an Accountable State Transfer (AST) architecture to bridge the accountability gap in REST. With AST, service participants can be held accountable for each representational state transfer during service consumption. A formal service contract model with a hybrid reasoning mechanism and a novel accountable state transfer protocol are designed as the mechanisms underpinning the AST architecture. Moreover, we implement a Credit Check service prototype based on AST, demonstrating the practicality of such architecture. Inheriting REST's scalability, AST architecture provides the much needed accountability capabilities for the virtual service delivery environment.",
		"DOI": "10.1109/ICWS.2010.56",
		"author": [
			{
				"family": "Zou",
				"given": "J."
			},
			{
				"family": "Mei",
				"given": "J."
			},
			{
				"family": "Wang",
				"given": "Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/ZNWJ483W",
		"type": "paper-conference",
		"title": "Overcoming Large Data Transfer Bottlenecks in RESTful Service Orchestrations",
		"container-title": "2012 IEEE 19th International Conference on Web Services",
		"page": "654–656",
		"abstract": "As REST (Representational State Transfer)-ful services are closely coupled to the HTTP (Hypertext Transfer Protocol), which eventually sits above the connection-based TCP (Transmission Control Protocol), it is common for RESTful services to experience latency and transfer inefficiencies especially in situations requiring the services to transfer large-scale data (i.e. above gigabytes of data) in RESTful workflows. Such inefficiencies are undesirable and impractical, and are compounded for RESTful service orchestrations in data-intensive industries such as Big Data analytics, cloud computing and life sciences. In this paper, we propose a non-invasive novel technique, Fast-Optimised-REST (FOREST), which enables RESTful services to overcome the traditional bottlenecks experienced during transfer of large sets of data. The initial experimental results show promise and demonstrated very significant reductions of up to 80% from original REST-ful data transfer times for extremely large data sets.",
		"DOI": "10.1109/ICWS.2012.107",
		"author": [
			{
				"family": "Ko",
				"given": "R. K. L."
			},
			{
				"family": "Kirchberg",
				"given": "M."
			},
			{
				"family": "Lee",
				"given": "B. S."
			},
			{
				"family": "Chew",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/QXDSJGPH",
		"type": "paper-conference",
		"title": "Service Composition for REST",
		"container-title": "2014 IEEE 18th International Enterprise Distributed Object Computing Conference",
		"page": "110–119",
		"abstract": "One of the key strengths of service oriented architectures, the concept of service composition to reuse and combine existing services in order to achieve new and superior functionality, promises similar advantages when applied to resources oriented architectures. The challenge in this context is how to realize service composition in compliance with the constraints defined by the REST architectural style and how to realize it in a way that it can be integrated to and benefit from existing service composition solutions. Existing approaches to REST service composition are mostly bound to the HTTP protocol and often lack a systematic methodology and a mature and standards based realization approach. In our work, we follow a comprehensible methodology by deriving the key requirements for REST service composition directly from the REST constraints and then mapping these requirements to a standard compliant extension of the BPEL composition language. We performed a general requirements analysis for REST service composition, defined a meta model for a corresponding BPEL extension, realized this extension prototypically and validated it based on a real world use case from the eScience domain. Our work provides a general methodology to enable REST service composition as well as a realization approach that enables the combined composition of WSDL and REST services in a mature and robust way.",
		"DOI": "10.1109/EDOC.2014.24",
		"author": [
			{
				"family": "Haupt",
				"given": "F."
			},
			{
				"family": "Fischer",
				"given": "M."
			},
			{
				"family": "Karastoyanova",
				"given": "D."
			},
			{
				"family": "Leymann",
				"given": "F."
			},
			{
				"family": "Vukojevic-Haupt",
				"given": "K."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/F3IAVKIB",
		"type": "paper-conference",
		"title": "Latencies of Service Invocation and Processing of the REST and SOAP Web Service Interfaces",
		"container-title": "2012 IEEE Eighth World Congress on Services",
		"page": "100–107",
		"abstract": "This paper studies the latencies experienced by the Web service client invoking a proprietary multimedia messaging service with both REST and SOAP interfaces implemented. This study has been made utilising XML, JSON, MTOM/XOP and Google Protostuff message and message content encodings where available. We study the overall round trip time from the start of the request to the response returning to the client. Furthermore, we measure and analyse the phases the request travels through to the server and the return of an associated response. The results of the overall round trip time and distribution of the delays along the service invocation path is presented to ultimately aid and justify a selection of the better performing interface implementation and associated message encoding scheme for the solution. Both interfaces implement the same functionality of registering a client, sending and receiving a message and finally unregistering. Therefore, the results are highly comparable which show differences not only between REST and SOAP but also between XML and JSON and how it can be further improved.",
		"DOI": "10.1109/SERVICES.2012.55",
		"author": [
			{
				"family": "Aihkisalo",
				"given": "T."
			},
			{
				"family": "Paaso",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/BQH6UNA9",
		"type": "paper-conference",
		"title": "Enabling Message Security for RESTful Services",
		"container-title": "2012 IEEE 19th International Conference on Web Services",
		"page": "114–121",
		"abstract": "The security and dependability of cloud applications require strong confidence in the communication protocol used to access web resources. The mainstream service providers nowadays are shifting to REST-based services in the detriment of SOAP-based ones. REST proposes a lightweight approach to consume resources with no specific encapsulation, thus lacking of meta-data descriptions for security requirements. Currently, the security of RESTful services relies on ad-hoc security mechanisms (whose implementation is error-prone) or on the transport layer security (offering poor flexibility). We introduce the REST security protocol to provide secure service communication, together with its performance analysis when compared to equivalent WS-Security configuration.",
		"DOI": "10.1109/ICWS.2012.94",
		"author": [
			{
				"family": "Serme",
				"given": "G."
			},
			{
				"family": "Oliveira",
				"given": "A. S.",
				"dropping-particle": "de"
			},
			{
				"family": "Massiera",
				"given": "J."
			},
			{
				"family": "Roudier",
				"given": "Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/BJT7DF6U",
		"type": "paper-conference",
		"title": "Recovery management in RESTful interactions",
		"container-title": "2009 3rd IEEE International Conference on Digital Ecosystems and Technologies",
		"page": "419–424",
		"abstract": "With REST becoming a dominant architectural paradigm for Web services in distributed systems, more and more use cases are applied to it, including use cases that require transactional guarantees. We believe that the loose coupling that is supported by RESTful transactions, makes this currently our preferred interaction style for digital ecosystems (DEs). To further expand its value to DEs, we propose a RESTful transaction model that satisfies both the constraints of recoverable transactions and those of the REST architectural style. We then show the correctness and applicability of the model.",
		"DOI": "10.1109/DEST.2009.5276717",
		"author": [
			{
				"family": "Razavi",
				"given": "A."
			},
			{
				"family": "Marinos",
				"given": "A."
			},
			{
				"family": "Moschoyiannis",
				"given": "S."
			},
			{
				"family": "Krause",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2V5FJPAP",
		"type": "paper-conference",
		"title": "Distributing resource intensive mobile web services",
		"container-title": "2011 International Conference on Innovations in Information Technology",
		"page": "41–46",
		"abstract": "One of the goals that can be achieved by providing adaptive web services from mobile hosts is to allow continuous service provisioning. However, there are limitations in terms of complexity and size of the services that may be executed on mobile hosts. In this paper, two steps are taken towards providing adaptive web services from resource limited mobile devices. The first step is to investigate mechanisms that facilitate distributing the execution of mobile web services; the main mechanisms are offloading and migration. The second step is to integrate these mechanisms with available web service architectures to produce an extended mobile web service framework. In this case we integrated them with both SOAP as well as REST. The paper describes the offloading and migration mechanisms as well as the implementation of a prototype that allows performance evaluation of both extended frameworks. To investigate the load and performance of the distributed services, the prototype implements resource intensive applications. The results presented show that basing distributed mobile-hosted services on REST is more suitable than using SOAP as underlying web service infrastructure.",
		"DOI": "10.1109/INNOVATIONS.2011.5893861",
		"author": [
			{
				"family": "AlShahwan",
				"given": "F."
			},
			{
				"family": "Moessner",
				"given": "K."
			},
			{
				"family": "Carrez",
				"given": "F."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					4
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/ZEGIZRWF",
		"type": "paper-conference",
		"title": "Categorial Link: REST Service Composition Based on Category Theory",
		"container-title": "2014 IEEE International Conference on Web Services",
		"page": "431–438",
		"abstract": "This paper describes a new and generic REST service composition framework that uses 6 algebraic rules to drive resource-resource compositions in different domains. The generalization is achieved by two techniques borrowed from Category Theory: 1) decomposition of a REST system into cohesive link and communication layers, and 2) uniform representation of resource interfaces and resource compositions as categorial links. Within this framework, we introduce three types of categorial links: basic, nested and concurrent, and we show that many domain tasks in hyperlink pipeline, call control and media workflows can be accomplished efficiently by these links. The preliminary experiments indicate the approach is feasible.",
		"DOI": "10.1109/ICWS.2014.68",
		"shortTitle": "Categorial Link",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/AVKW2K3F",
		"type": "paper-conference",
		"title": "A Maturity Model for Semantic RESTful Web APIs",
		"container-title": "2015 IEEE International Conference on Web Services",
		"page": "703–710",
		"abstract": "Web APIs provide interfaces for interaction among systems based on the existing infrastructure for hosting Web sites and applications. The REST architectural style is the most employed approach for building Web APIs. However, the flexibility provided by REST may result in implementations with low quality design, limited reuse and poor documentation. This paper describes a maturity model for classifying Web APIs, aimed at promoting the adherence to REST architectural principles and the adoption of semantic Web technology in order to improve the design, reuse and documentation of Web APIs.",
		"DOI": "10.1109/ICWS.2015.98",
		"author": [
			{
				"family": "Salvadori",
				"given": "I."
			},
			{
				"family": "Siqueira",
				"given": "F."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/QP2UJA7A",
		"type": "article-journal",
		"title": "RESTful Web Services Development Checklist",
		"container-title": "IEEE Internet Computing",
		"page": "96–95",
		"volume": "12",
		"issue": "6",
		"abstract": "Sometimes, Representational State Transfer (REST) architectural style proponents describe it as being easy, but this in no way implies that REST is trivial or simplistic, nor does it mean that RESTful systems lack sophistication. REST's relative simplicity comes from the fact that it not only clearly defines its trade-offs and constraints but also distinctly separates concerns, such as resource identification, resource interfaces, and definitions for interchanged data. This delineation makes it relatively easy for developers designing and building RESTful services to consider and track important issues that can profoundly impact system flexibility, scalability, and performance. REST isn't the answer to all distributed computing and integration problems by any stretch of the imagination, but it can yield highly practical solutions to a variety of such problems, not only on the Web but also within the enterprise.",
		"DOI": "10.1109/MIC.2008.130",
		"ISSN": "1089-7801",
		"author": [
			{
				"family": "Vinoski",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					11
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/DBW4JASG",
		"type": "paper-conference",
		"title": "Design and Implementation of a RESTful IMS API",
		"container-title": "2010 6th International Conference on Wireless and Mobile Communications",
		"page": "86–91",
		"abstract": "Web 2.0 has been happening on the fixed Internet side for several years already. This phenomenon has forced traditional Telco operators to consider new business models. One of the possible models is to utilize the IP Multimedia Subsystem (IMS) network architecture. Using the IMS, Telco operators have more control over the data instead of becoming just bit pipes. In addition, operators interest in providing open Application Programming Interfaces (APIs) exposing IMS and network assets has grown. In this paper, a RESTful IMS API implementation, is represented. The design and implementation of the API exposing IMS functionality is shown. In addition, the implementation of a REST application using the API is described.",
		"DOI": "10.1109/ICWMC.2010.30",
		"author": [
			{
				"family": "Rissanen",
				"given": "H. M."
			},
			{
				"family": "Mecklin",
				"given": "T."
			},
			{
				"family": "Opsenica",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/X8VBZ295",
		"type": "paper-conference",
		"title": "Representation Design for RESTful Web Services",
		"container-title": "2008 4th International Conference on Next Generation Web Services Practices",
		"page": "5–9",
		"abstract": "The evolution of the Web 2.0 phenomenon provides a possible adoption of the RESTful services in reengineering web service. REST components concern the current or intended state of that resource with further transferring among components. A resource can have multiple representations. Itpsilas impossible to predetermine all possible representation of a resource during design of a system while it is very important to label the resource properly. In this paper, the key issues for rendering representations to client are discussed. Some solutions, starting from simple to more difficult ones, are proposed step by step. The advantages and deficiencies of each solution are summarized after that. An ultimate solution ldquoCSS + dynamic configuration file + smart web IDErdquo provides various representations for resource and with a lot of benefits for both server and client.",
		"DOI": "10.1109/NWeSP.2008.33",
		"author": [
			{
				"family": "Wang",
				"given": "Q."
			},
			{
				"family": "Liu",
				"given": "Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/3DN5S38I",
		"type": "paper-conference",
		"title": "SDN Northbound REST API with Efficient Caches",
		"container-title": "2014 IEEE International Conference on Web Services",
		"page": "257–264",
		"abstract": "In this paper, we present a REST Chart based approach to design and implement RESTful northbound API in SDN. In our approach, the RESTful API is modeled with Petri Net, and REST constraints, such as hypermedia driven, are enforced naturally. The RESTful structure of the designed northbound API can be checked almost automatically based on the described REST Chart model. The proposed approach has been applied to design and implement the northbound API of SDN in data center networks with OpenStack Neutron. To improve the protocol efficiency, we developed a structured caching mechanism for data network applications with SDN, that reduces the response time overheads by more than 65%, while it fully maintains the desired flexibility and scalability of the RESTful northbound API.",
		"DOI": "10.1109/ICWS.2014.46",
		"author": [
			{
				"family": "Zhou",
				"given": "W."
			},
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/4BAAA67W",
		"type": "paper-conference",
		"title": "On Web Service Construction Based on REpresentation State Transfer",
		"container-title": "2008 IEEE International Conference on e-Business Engineering",
		"page": "665–668",
		"abstract": "A new Web Service construction method is proposed according with the principle of Representation State Transfer (REST) in this paper. Using Resource-Oriented Architecture, how to construct the application with REST characteristics is described step by step. The performance of new Web Service construction method is evaluated and is compared with that of Service-Oriented Architecture (SOA). Analytical results show that the proposed Web Service construction method has more advantages.",
		"DOI": "10.1109/ICEBE.2008.32",
		"author": [
			{
				"family": "Zhang",
				"given": "J."
			},
			{
				"family": "Li",
				"given": "F.",
				"dropping-particle": "l"
			},
			{
				"family": "Chi",
				"given": "C. H."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/ECUGM86D",
		"type": "article-journal",
		"title": "RESTful Industrial Communication With OPC UA",
		"container-title": "IEEE Transactions on Industrial Informatics",
		"page": "1832–1841",
		"volume": "12",
		"issue": "5",
		"abstract": "Representational state transfer (REST) is a wide-spread architecture style for decentralized applications. REST proposes the use of a fixed set of service interfaces to transfer heterogeneous resource representations instead of defining custom interfaces for individual applications. This paper explores the advantages of RESTful architectures, i.e., service-oriented software architectures comprised RESTful services, in industrial settings. These include communication advantages such as reduced communication overhead and the possibility to introduce caching layers, and system design advantages including stable service interfaces across applications and the use of resource-oriented information models in cyber-physical systems. Additionally, a RESTful extension to the open platform communications (OPC) unified architecture (OPC UA) binary protocol is proposed in order to leverage these advantages. It requires only minimal modifications to the existing OPC UA stacks and is fully backward compatible with the standard protocol. Performance benchmarks on industrial hardware show a throughput increase up to a factor of eight for short-lived interactions. This reduction of overhead is especially relevant for the use of OPC UA in the emerging Industrial Internet of Things.",
		"DOI": "10.1109/TII.2016.2530404",
		"ISSN": "1551-3203",
		"author": [
			{
				"family": "Grüner",
				"given": "S."
			},
			{
				"family": "Pfrommer",
				"given": "J."
			},
			{
				"family": "Palm",
				"given": "F."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2BTGANSC",
		"type": "paper-conference",
		"title": "Reusable and Extensible Fault Tolerance for RESTful Applications",
		"container-title": "2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications",
		"page": "737–744",
		"abstract": "Despite the simplicity and scalability benefits of REST, rendering RESTful web applications fault-tolerant requires that the programmer write vast amounts of non-trivial, ad-hoc code. Network volatility, HTTP server errors, service outages-all require custom fault handling code, whose effective implementation requires considerable programming expertise and effort. To provide a systematic and principled approach to handling faults in RESTful applications, we present FT-REST-an architectural framework for specifying fault tolerance functionality declaratively and then translating these specifications into platform-specific code. FT-REST encapsulates fault tolerance strategies in XML-based specifications and compiles them to modules that reify the requisite fault tolerance. To validate our approach, we have applied FT-REST to enhance several realistic RESTful applications to withstand the faults described in their FT-REST specifications. As REST is said to apply verbs (HTTP commands) to nouns (URIs), FT-REST enhances this conceptual model with adverbs that render REST reliable via reusable and extensible fault tolerance.",
		"DOI": "10.1109/TrustCom.2012.244",
		"author": [
			{
				"family": "Edstrom",
				"given": "J."
			},
			{
				"family": "Tilevich",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GKJASPD2",
		"type": "paper-conference",
		"title": "A Model-Driven Approach for REST Compliant Services",
		"container-title": "2014 IEEE International Conference on Web Services",
		"page": "129–136",
		"abstract": "The design of applications that comply to the REST architectural style requires observing a given set of architectural constraints. Following these constraints and therefore designing REST compliant applications is a non-trivial task often not fulfilled properly. There exist several approaches for the modeling and formal description of REST applications, but most of them do not pay any attention to how these approaches can support or even force REST compliance. In this paper we propose a model-driven approach for modeling REST services. We introduce a multi layered model which enables (partially) enforcing REST compliance by separating different concerns through separate models. We contribute a multi layered meta-model for REST applications, discuss the connection to REST compliance and show an implementation of our approach based on the proposed meta-model and method. As a result our approach provides a holistic method for the design and realization of REST applications exhibiting the desired level of compliance to the constraints of the REST architectural style.",
		"DOI": "10.1109/ICWS.2014.30",
		"author": [
			{
				"family": "Haupt",
				"given": "F."
			},
			{
				"family": "Karastoyanova",
				"given": "D."
			},
			{
				"family": "Leymann",
				"given": "F."
			},
			{
				"family": "Schroth",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/4VPI9ND7",
		"type": "paper-conference",
		"title": "On the Origin of Services Using RIDDL for Description, Evolution and Composition of RESTful Services",
		"container-title": "2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing",
		"page": "505–508",
		"abstract": "WSDL as a description language serves as the foundation for a host of technologies ranging from semantic annotation to composition and evolution. Although WSDL is well understood and in widespread use, it has its shortcomings which are partly imposed by the way how the SOAP protocol works and is used. Cloud computing fostered the rise of Representational State Transfer (REST), a return to arguably simpler but more flexible ways to expose services solely through the HTTP protocol. For RESTful services many achievements that have been acquired have to be rethought and reapplied. We perceive that one of the biggest hurdles is the lack of a dedicated and simple yet powerful language to describe RESTful services. In this paper we want to introduce RIDDL, a flexible and extensible XML based language that not only allows to describe services but also covers the basic requirements of service composition and evolution to provide a clean foundation for further developments.",
		"DOI": "10.1109/CCGRID.2010.126",
		"author": [
			{
				"family": "Mangler",
				"given": "J."
			},
			{
				"family": "Beran",
				"given": "P. P."
			},
			{
				"family": "Schikuta",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/UUFXP6ZA",
		"type": "paper-conference",
		"title": "Semantic Web Services Discovery Adopting SERIN",
		"container-title": "2015 IEEE International Conference on Computer and Information Technology; Ubiquitous Computing and Communications; Dependable, Autonomic and Secure Computing; Pervasive Intelligence and Computing",
		"page": "387–394",
		"abstract": "Service-based architecture (SOA) are extensively adopted in web applications. In this scenario, REST-based web services has become a large adopted standard. The addition of semantics enhances the web services description, which enables automatic agents to discover them and to make calls. However, the existence of many different languages to semantically describe services makes it difficult to discover and to select the service that best attends a requirement. Furthermore, most of these languages does not attend to describe RESTful services, making the discover process even more difficult. This work proposes a RESTful semantic web service discovery architecture based on semantic interfaces (SERIN). SERIN intends to semantically described RESTful web services through an annotated ontology. We present a study showing that is possible to adopt the proposed architecture to implement a semantic service-based application, with minimum development effort, that enables software agents to automatically discover and to make service calls in order to execute a determined task.",
		"DOI": "10.1109/CIT/IUCC/DASC/PICOM.2015.55",
		"author": [
			{
				"family": "Dantas",
				"given": "J. R. V."
			},
			{
				"family": "Lira",
				"given": "H. A."
			},
			{
				"family": "Muniz",
				"given": "B. d A."
			},
			{
				"family": "Nunes",
				"given": "T. M."
			},
			{
				"family": "Farias",
				"given": "P. P. M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/9K5JDINH",
		"type": "paper-conference",
		"title": "Design of a security mechanism for RESTful Web Service communication through mobile clients",
		"container-title": "2014 IEEE Network Operations and Management Symposium (NOMS)",
		"page": "1–6",
		"abstract": "Security is not taken into account by default in the Representational State Transfer (REST) architecture, but its layered architecture provides many opportunities for implementing it. In this paper, a security mechanism for Web Service communication through mobile clients devices is proposed, that conforms to the REST architecture as much as possible. This approach has been inspired by some known security mechanisms, but implemented in such a way that it focusses on statelessness and aims to be lightweight. Results indicate that the custom security mechanism outperforms the Transport Layered Security (TLS) based system. Because of the genericness of REST, the proposed security mechanism can be adopted by a wide variety of other RESTful Web Services.",
		"DOI": "10.1109/NOMS.2014.6838308",
		"author": [
			{
				"family": "Backere",
				"given": "F. D."
			},
			{
				"family": "Hanssens",
				"given": "B."
			},
			{
				"family": "Heynssens",
				"given": "R."
			},
			{
				"family": "Houthooft",
				"given": "R."
			},
			{
				"family": "Zuliani",
				"given": "A."
			},
			{
				"family": "Verstichel",
				"given": "S."
			},
			{
				"family": "Dhoedt",
				"given": "B."
			},
			{
				"family": "Turck",
				"given": "F. D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8HH9S6F5",
		"type": "paper-conference",
		"title": "REST2SOAP: A framework to integrate SOAP services and RESTful services",
		"container-title": "2009 IEEE International Conference on Service-Oriented Computing and Applications (SOCA)",
		"page": "1–4",
		"abstract": "Nowadays, the mainstream of Web 2.0 Website services is in the REST style called RESTful Web service. RESTful services have been widely accepted by the public because of the usability and simplicity. Meanwhile, Web service technologies realize service-oriented architecture (SOA) successfully and are exploited in both industry and academia. Notably, service composition that can aggregate existing services into a new one delivers the most benefits of SOA through BPEL standard. However, BPEL cannot support RESTful services and integrate both Web 2.0 and SOA-based resources in a composite service directly. It means that it is costly or time-consuming to utilize RESTful services in an SOA-based application. Therefore, this paper presents a framework, namely REST2SOAP, to integrate SOAP services and RESTful services. REST2SOAP leverages WADL specification, and can wrap RESTful services into SOAP services semi-automatically. Using REST2SOAP, developers can create a BPEL service that combines SOAP, RESTful services and user interfaces simultaneously.",
		"DOI": "10.1109/SOCA.2009.5410458",
		"shortTitle": "REST2SOAP",
		"author": [
			{
				"family": "Peng",
				"given": "Y. Y."
			},
			{
				"family": "Ma",
				"given": "S. P."
			},
			{
				"family": "Lee",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					1
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/UHJGDFXN",
		"type": "paper-conference",
		"title": "HTML5 visual composition of REST-like web services",
		"container-title": "2013 IEEE 4th International Conference on Software Engineering and Service Science",
		"page": "49–55",
		"abstract": "In this paper we discuss a visual programming environment for the composition of services based on dataflow paradigm. This approach, strongly oriented towards web technologies, aims to offer the corporate application designer an integrated set of very high-level tools to design and test new services via functional composition of already available ones. The user experience is a mixture of (a) graphical actions and choices, for example the drag and drop of graphical widgets and the connection of input-output links, and of (b) interface coding, via the textual specification of the translation logic of data object types flowing through the input/output interfaces of the composed services. The new environment, named VisProSL (Visual Programming Service-Link), capitalizes on a standardized JSON syntax of exchanged data objects, is oriented to REST services, and makes use of a basic layer that provides the visual generation of interfaces towards location services.",
		"DOI": "10.1109/ICSESS.2013.6615253",
		"author": [
			{
				"family": "Marino",
				"given": "E."
			},
			{
				"family": "Spini",
				"given": "F."
			},
			{
				"family": "Paoluzzi",
				"given": "A."
			},
			{
				"family": "Minuti",
				"given": "F."
			},
			{
				"family": "Rosina",
				"given": "M."
			},
			{
				"family": "Bottaro",
				"given": "A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/9CXP6UE9",
		"type": "paper-conference",
		"title": "Providing Interoperability for Resource Access Using Web Services",
		"container-title": "2010 8th Annual Communication Networks and Services Research Conference",
		"page": "236–243",
		"abstract": "This paper focuses on resource virtualization and interoperability required in the context of large distributed environments such as clouds and grids in which shared resources located on multiple sites are accessed by multiple users. A resource is exposed as a Web service. Techniques for handling two types of resources, a computing resource and a database resource are described. Two different Web service technologies, one based on SOAP and the other on REST are experimented with. A comparison of the two technologies including a performance comparison of two implementations (one using SOAP-based Web services and the other using RESTful Web services) of a computing system exposed as a Web service is presented.",
		"DOI": "10.1109/CNSR.2010.23",
		"author": [
			{
				"family": "Lim",
				"given": "N."
			},
			{
				"family": "Majumdar",
				"given": "S."
			},
			{
				"family": "Nandy",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/EJ8CWFEA",
		"type": "paper-conference",
		"title": "Realizing an Open Ubiquitous Environment in a RESTful Way",
		"container-title": "2008 IEEE International Conference on Web Services",
		"page": "96–103",
		"abstract": "Web services have been widely used to support context-aware applications for context information retrieval in a ubiquitous environment. However, most of the existing research efforts in this field only focus on using SOAP web service as an enabling technology. In this paper, we compare REST and SOAP web services for supporting ubiquitous environments. We describe our approaches to deploy an open ubiquitous computing environment using REST style services along with semantic web and mobile technologies. We also discuss an example context-aware application developed for the environment and show how REST style services can contribute in moving ubiquitous computing technologies into the real world.",
		"DOI": "10.1109/ICWS.2008.64",
		"author": [
			{
				"family": "Liu",
				"given": "Y."
			},
			{
				"family": "Connelly",
				"given": "K."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/MB54FC3D",
		"type": "paper-conference",
		"title": "Designing Large Scale REST APIs Based on REST Chart",
		"container-title": "2015 IEEE International Conference on Web Services",
		"page": "631–638",
		"abstract": "REST Chart is a Petri-Net based XML modeling framework for REST API. This paper presents two important enhancements and extensions to REST Chart modeling - Hyperlink Decoration and Hierarchical REST Chart. In particular, the proposed Hyperlink Decoration decomposes resource connections from resource representation, such that hyperlinks can be defined independently of schemas. This allows a Navigation-First Design by which the important global connections of a REST API can be designed first and reused before the local resource representations are implemented and specified. Hierarchical REST Chart is a powerful mechanism to rapidly decompose and extend a REST API in several dimensions based on Hyperlink Decoration. These new mechanisms can be used to manage the complexities in large scale REST APIs that undergo frequent changes as in some large scale open source development projects. This paper shows that these new capabilities can fit nicely in the REST Chart XML with very minor syntax changes. These enhancements to REST Chart are applied successfully in designing and verifying REST APIs for software-defined-networking (SDN) and Cloud computing.",
		"DOI": "10.1109/ICWS.2015.89",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					6
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/Z44TMH2G",
		"type": "article-journal",
		"title": "Sharing service semantics using SOAP-based and REST Web services",
		"container-title": "IT Professional",
		"page": "18–24",
		"volume": "8",
		"issue": "2",
		"abstract": "This paper describes a method that combines the attributes from both SOAP-based and REST Web services in the same semantic service description framework and create a bridge between Web services and the Semantic Web under the same Internet Protocol (HTTP) without using any extra framework such as WSDL or SOAP. This method allows users to access the functional components of any software located in a remote machine while using distributed computing's power through an easy and understandable process",
		"DOI": "10.1109/MITP.2006.48",
		"ISSN": "1520-9202",
		"author": [
			{
				"family": "Shi",
				"given": "Xuan"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2006",
					3
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/A8SWHSH7",
		"type": "paper-conference",
		"title": "Evaluating a Representational State Transfer (REST) Architecture: What is the Impact of REST in My Architecture?",
		"container-title": "2014 IEEE/IFIP Conference on Software Architecture",
		"page": "105–114",
		"abstract": "The use of Representational State Transfer (REST) as an architectural style for integrating services and applications brings several benefits, but also poses new challenges and risks. Particularly important among those risks are failures to effectively address quality attribute requirements such as security, reliability, and performance. An architecture evaluation early in the software life cycle can identify and help mitigate those risks. In this paper we present guidelines to assist architecture evaluation activities in REST-based systems. These guidelines can be systematically used in conjunction with scenario-based evaluation methods to reason about design considerations and trade-offs. This paper also presents a proof of concept to describe how to use the guidelines in the context of an Architecture Trade-off Analysis Method (ATAM) evaluation.",
		"DOI": "10.1109/WICSA.2014.29",
		"shortTitle": "Evaluating a Representational State Transfer (REST) Architecture",
		"author": [
			{
				"family": "Costa",
				"given": "B."
			},
			{
				"family": "Pires",
				"given": "P. F."
			},
			{
				"family": "Delicato",
				"given": "F. C."
			},
			{
				"family": "Merson",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					4
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XFE5ZBPX",
		"type": "paper-conference",
		"title": "EXPRESS: EXPressing REstful Semantic Services",
		"container-title": "2009 IEEE/WIC/ACM International Joint Conference on Web Intelligence and Intelligent Agent Technology",
		"page": "453–456",
		"volume": "3",
		"abstract": "We introduce a new approach for RESTful Semantic Web Services called EXPRESS. It aims to exploit the similarities between REST and the Semantic Web, such as realization of resources, self describing representations, and uniform interfaces. EXPRESS is straightforward and systematic. It works by identifying resources in ontologies and provides them with a uniform interface. We also discuss other RESTful and non-RESTful approaches to Semantic Web Services and show how they relate.",
		"DOI": "10.1109/WI-IAT.2009.324",
		"shortTitle": "EXPRESS",
		"author": [
			{
				"family": "Alowisheq",
				"given": "A."
			},
			{
				"family": "Millard",
				"given": "D. E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/AIPRT46I",
		"type": "paper-conference",
		"title": "Creating Web Services Using a Rule-Based Language",
		"container-title": "2010 Fifth International Conference on Systems and Networks Communications",
		"page": "272–277",
		"abstract": "In spite of the fact that systems are ever growing in size, the demand for a short development cycle and high system reliability remains unchanged. Web services are drawing attention as a solution to such a demand. Another approach to developing a program in a short time is STAR (SofTware Architecture using Rule-based language). STAR uses a rule-based language called ESTR (Enhanced State Transition Rule) as a service program description language. ESTR is based on state transitions, and its specification is simple. In this paper, with the aim of applying STAR to the creation of Web services, we propose a platform for creating Web services using ESTR. Using ESTR, we have developed a new merged service made up of multiple services that use REST, and evaluated the proposed platform using this service.",
		"DOI": "10.1109/ICSNC.2010.50",
		"author": [
			{
				"family": "Yamashita",
				"given": "T."
			},
			{
				"family": "Ohta",
				"given": "T."
			},
			{
				"family": "Takami",
				"given": "K."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					8
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/QTDK629W",
		"type": "paper-conference",
		"title": "Migration of SOAP-based services to RESTful services",
		"container-title": "2011 13th IEEE International Symposium on Web Systems Evolution (WSE)",
		"page": "105–114",
		"abstract": "Web services are designed to provide rich functionality for organizations and support interoperable interactions over a network. Web services are mainly realized in two ways: 1) SOAP-based services and 2) RESTful services. For the service providers, RESTful services can improve system flexibility, scalability, and performance as compared to the SOAP-based Web services. It is equally attractive to end users as it is consume less resources (i.e., battery, processor speed, and memory). Additionally, REST-based services do not include complex standards and heterogeneous operations; and hence are easier to consume and compose as compared to SOAP-based Web services. We provide an approach to migrate SOAP-based services to RESTful services. We identify resources from a SOAP-based Web service by analyzing its service description and mapping the contained operations to resources and HTTP methods. To demonstrate the effectiveness of our approach, we conduct a case study on a set of publicly available SOAP-based Web services. The results of our case study show that our approach can achieve high accuracy of identifying RESTful services from the interfaces of SOAP-based services. Our approach can improve the performance for invoking Web services after SOAP-based services are migrated to RESTful services.",
		"DOI": "10.1109/WSE.2011.6081828",
		"author": [
			{
				"family": "Upadhyaya",
				"given": "B."
			},
			{
				"family": "Zou",
				"given": "Y."
			},
			{
				"family": "Xiao",
				"given": "H."
			},
			{
				"family": "Ng",
				"given": "J."
			},
			{
				"family": "Lau",
				"given": "A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/I8CMWZK8",
		"type": "paper-conference",
		"title": "A RESTful Approach to the OGSA Basic Execution Service Specification",
		"container-title": "2009 Fourth International Conference on Internet and Web Applications and Services",
		"page": "131–136",
		"abstract": "The OGSA-basic execution service (BES) specification has recently been proposed by the Open Grid Forum (OGF) as the standard job submission and management interface across different Grid middlewares. This specification defines a Web Service interface in terms of a Web Services Description Language (WSDL) document for creating, monitoring and managing computational jobs (called activities), and for querying the capabilities of the BES service itself. In this paper, we propose an alternate incarnation of the BES functionalities according to the representational state transfer (REST) architectural style. We describe the mapping of the BES operations in terms of HTTP actions on resources. We compare the REST formulation of BES with the standard WS-based one. We show that all BES operations can be expressed in a very natural way using the standard HTTP protocol and following the REST approach; moreover, we present useful extensions that are expected to appear in the near future.",
		"DOI": "10.1109/ICIW.2009.26",
		"author": [
			{
				"family": "Andreozzi",
				"given": "S."
			},
			{
				"family": "Marzolla",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RDM4JH9T",
		"type": "paper-conference",
		"title": "RAPTOR: A REST API translaTOR for OpenFlow controllers",
		"container-title": "2016 IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)",
		"page": "328–333",
		"abstract": "Many Software-Defined Networking (SDN) controllers support a “northbound interface” by which applications can interact with the SDN controller and (indirectly) control the underlying SDN network. The absence of a standard for the northbound interface of these controllers makes it difficult for application developers to create interoperable/portable code (i.e., code that works with any SDN controller). Developers are forced to re-write almost all of their code every time they want to support a new controller. This tedious and time consuming process is typically a start-over software development cycle that involves learning new APIs, data models, and controller-specific conventions. In this paper, we present RAPTOR, a REST-based API translaTOR service for SDN networks that allows users to develop their network control software independent of any particular SDN controller. RAPTOR exposes its own REST-based API functions and data models to user applications and translates application requests into controller-specific northbound interface calls. To demonstrate the viability of RAPTOR, we implemented and deployed RAPTOR in GENI and used it in conjunction with different types of controllers. We also developed GENI Desktop modules that interacted with RAPTOR to install, list, delete and monitor end-to-end flows regardless of the controller used for controlling the underlying switches.",
		"DOI": "10.1109/INFCOMW.2016.7562096",
		"shortTitle": "RAPTOR",
		"author": [
			{
				"family": "Rivera",
				"given": "S."
			},
			{
				"family": "Fei",
				"given": "Z."
			},
			{
				"family": "Griffioen",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					4
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/R2WMIZIA",
		"type": "paper-conference",
		"title": "Mashup service release based on SOAP and REST",
		"container-title": "Proceedings of 2011 International Conference on Computer Science and Network Technology",
		"page": "1091–1095",
		"volume": "2",
		"abstract": "In recent years,with more and more Mashup services appering, this paper proposed the solution to Mashup service release based on SOAP and REST. This paper introduces the Mashup service architecture of three layer system, discusses the function of each layer, and supports the rapid generation of Mashup services and service management. At the same time, in this architecture the paper introducts the details of the SOAP and the REST Web service design and implementation, completes the registration, operation, updation and delete of the Mashup service in a variety of ways, and enhances the compatibility.",
		"DOI": "10.1109/ICCSNT.2011.6182150",
		"author": [
			{
				"family": "Su",
				"given": "Huijie"
			},
			{
				"family": "Cheng",
				"given": "Bo"
			},
			{
				"family": "Wu",
				"given": "Tong"
			},
			{
				"family": "Li",
				"given": "Xiaofeng"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/576WFNRA",
		"type": "article-journal",
		"title": "ReST-Based Web Access to Learning Design Services",
		"container-title": "IEEE Transactions on Learning Technologies",
		"page": "190–195",
		"volume": "1",
		"issue": "3",
		"abstract": "The IMS learning design model defines how users are engaged in learning activities to use learning objects and learning services. Although these are similarly accessible from URLs in a learning design, they are essentially different in the form of accessing their features and operations from a learning activity user interface. This paper proposes a representational state transfer (ReST) architectural style of accessing a learning service and its constituent resources from a web-based environment. A methodology to guide the design of learning service access is also described. The method is applied to integrating operations of a generic wiki service in the client interface of a learning activity, and validated on actual wiki services providing ReST-based programming interfaces.",
		"DOI": "10.1109/TLT.2008.21",
		"ISSN": "1939-1382",
		"author": [
			{
				"family": "Dodero",
				"given": "J. M."
			},
			{
				"family": "Ghiglione",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/HBWV7MM5",
		"type": "paper-conference",
		"title": "Towards a RESTful service ecosystem",
		"container-title": "4th IEEE International Conference on Digital Ecosystems and Technologies",
		"page": "209–214",
		"abstract": "Average information workers spend most of their time for searching, analyzing, reformatting and consolidating information. The recent advent of service-oriented architectures (SOA) built on Web services is a first attempt to streamline respectively automate those tasks in order to increase productivity. SOAP-based services work well within a company and are thus mainly used to for the integration of legacy systems which have not been built to be Web-friendly or to make new systems more flexible for changing requirements in business ecosystems. Nevertheless, the utopian promise of uniform service interface standards, metadata and universal service registries, in the form of the SOAP, WSDL and UDDI standards have proven elusive. Instead, for Internet-scale applications, lightweight REST-based architectures which gained a lot of momentum recently provide a number of important advantages such as better scalability, reliability and visibility and are thus the preferred choice for Internet-scale applications. Despite the foreseeable potential, the increasing interest on and growing acceptance of lightweight services, there are still problems on formal describing, finding and orchestrating services as well as a lack of a holistic framework covering the entire service lifecycle. This paper focuses on an extensive survey comparing the traditional SOAP-based architecture to the emergent lightweight REST-based architectural style as a first step towards a framework proposal.",
		"DOI": "10.1109/DEST.2010.5610644",
		"author": [
			{
				"family": "Lanthaler",
				"given": "M."
			},
			{
				"family": "Gütl",
				"given": "C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					4
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/K94GWB9P",
		"type": "paper-conference",
		"title": "Towards a Model-Driven Process for Designing ReSTful Web Services",
		"container-title": "2009 IEEE International Conference on Web Services",
		"page": "173–180",
		"abstract": "Representational State Transfer (ReST) architecture provides a set of constraints that drive design decisions towards architectural properties such as interoperability, evolvability and scalability. Designing a ReSTful service API involves finding resources and their relationships, selecting uniform operations for each resource, and defining data formats for them. It is often a non-trivial exercise to refine a functional specification, expressed in terms of arbitrary actions, to a resource-oriented, descriptive state information content. We argue that this process can be described as a series of model transformations, starting from service functionality and gradually refining the phase products until a ReSTful service API is reached. This paper outlines the process phases, transformations and intermediate models based on our experiences in developing ReSTful services and service APIs at Nokia Research Center. The process captures our understanding on how to systematically transform functional specifications into ReSTful Web service interfaces.",
		"DOI": "10.1109/ICWS.2009.63",
		"author": [
			{
				"family": "Laitkorpi",
				"given": "M."
			},
			{
				"family": "Selonen",
				"given": "P."
			},
			{
				"family": "Systa",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/I27CTZ9W",
		"type": "paper-conference",
		"title": "Connection Minimization in REST API with Random Walks",
		"container-title": "2016 IEEE/WIC/ACM International Conference on Web Intelligence (WI)",
		"page": "375–382",
		"abstract": "A key constraint of REST API is that all the resources must be reachable by some hyperlink paths from an entry point. However, to apply this constraint without prudence can result in excessive hyperlinks that do not provide new services but increase the dependence between the resources. Excessive hyperlinks are difficult to identify because: 1) a REST API can have dynamic and unbounded paths, and 2) the hyperlinks used to navigate a path are not observable and can be ambiguous. To tackle the first challenge, we propose a REST API model and a random walk algorithm to reduce the paths of a REST API to a small set. To address the second challenge, we develop a client model and a connection minimization algorithm to identify excessive hyperlinks based on given paths. By combining the random walk and the connection minimization algorithms, our method can minimize the connections of a REST API in polynomial time without involving the actual clients. A prototype system has been implemented and the tests show that the method is correct and can converge 90.6% to 99.9% faster than the baseline approach.",
		"DOI": "10.1109/WI.2016.0059",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Luo",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8D3QVJB7",
		"type": "article-journal",
		"title": "Welcome to the Real World: A Notation for Modeling REST Services",
		"container-title": "IEEE Internet Computing",
		"page": "36–44",
		"volume": "16",
		"issue": "4",
		"abstract": "Documentation of REST and REST-style services often uses prose only, making it hard for client developers to understand the ties between the service's parts. We developed a notation for REST-style services that's based on UML state charts. It can be used with existing tools and is simple enough for use on whiteboards. The notation visualizes relationships between application states, thereby improving the understanding of hypermedia use in services. This benefits both service designers and client developers. Because the notation makes REST-related design problems more obvious, it might even improve service design.",
		"DOI": "10.1109/MIC.2012.59",
		"ISSN": "1089-7801",
		"shortTitle": "Welcome to the Real World",
		"author": [
			{
				"family": "Liskin",
				"given": "O."
			},
			{
				"family": "Singer",
				"given": "L."
			},
			{
				"family": "Schneider",
				"given": "K."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/WVEI73DI",
		"type": "paper-conference",
		"title": "Role-Centric RESTful Services Description and Composition for E-Business Applications",
		"container-title": "2009 IEEE International Conference on e-Business Engineering",
		"page": "103–110",
		"abstract": "Currently there are increasing interests in using REST architecture style to implement business process. However, the importance of role is not emphasized. In fact role is critical to determine the RESTful services description and to control the services composition. This paper presents a role-centric RESTful services description and composition mechanism to implement business process. Firstly a resource meta-model is proposed, and then process and role are formally defined, RESTful services description is then generated based on role and BPEL is extended by introducing the concept of role to control the access to resources. A case study is also given to illustrate the approach and the desirable features of the approach are discussed.",
		"DOI": "10.1109/ICEBE.2009.23",
		"author": [
			{
				"family": "Yu",
				"given": "H."
			},
			{
				"family": "Zhu",
				"given": "C."
			},
			{
				"family": "Cai",
				"given": "H."
			},
			{
				"family": "Xu",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					10
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/7CJXFRSA",
		"type": "paper-conference",
		"title": "Web service matching for RESTful web services",
		"container-title": "2011 13th IEEE International Symposium on Web Systems Evolution (WSE)",
		"page": "115–124",
		"abstract": "There is a growing number of web services available on the Internet, providing a wide range of functionalities. This diversity introduces a variety of new challenges in the field of software engineering - service discovery, integration, and composition, all of which require, to some extent, “service matching”. Web-service matching (or alignment) is the task of mapping the functionalities of two web services, assuming that these functionalities overlap somewhat. In this paper we propose a novel graph-theoretic approach, called Semantic Flow Matching (SFM), for matching REST web services, specified in WADL (Web Application Description Language). The method builds a heterogeneous network of WADL elements and semantically related terms, and uses this network to match similar functionalities of different web services. The method is implemented in a prototype tool that consists of two modules: a converter and a mapper; where the converter wraps the REST web services in WADL format and the mapper module matches web services based on their semantics extracted from the WADL interface build by the converter. We demonstrate the potential of the approach with a small case study.",
		"DOI": "10.1109/WSE.2011.6081829",
		"author": [
			{
				"family": "Khorasgani",
				"given": "R. R."
			},
			{
				"family": "Stroulia",
				"given": "E."
			},
			{
				"family": "Zaïane",
				"given": "O. R."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/Z6PDTTBB",
		"type": "paper-conference",
		"title": "A Specification and Tool for the Configuration of #x0A0; #x0A0;REST Applications",
		"container-title": "2009 International Conference on Advanced Information Networking and Applications Workshops",
		"page": "500–505",
		"abstract": "Service-enabled applications have become a need in todaypsilas environment of mashups and Web 2.0. Traditional SOAP-based Web services and Representational State Transfer (REST) are alternatives as the popularity of these applications grows. REST has recently gained visibility and its lower entry barrier seems adequate for many applications. This paper proposes the configuration of an applicationpsilas REST services using XML files. A remote administration service is also described in order to support fine grained run-time changes to the configuration of an applicationpsilas REST services. A GUI tool is presented for the creation and editing of these files as well as for providing an interface for the administration service. Finally, a default implementation of a server that supports the administration service is presented.",
		"DOI": "10.1109/WAINA.2009.185",
		"author": [
			{
				"family": "Gomes",
				"given": "G. G. R."
			},
			{
				"family": "Sampaio",
				"given": "P. N. M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GIWCGR2A",
		"type": "paper-conference",
		"title": "Performance Testing Framework for REST-Based Web Applications",
		"container-title": "2013 13th International Conference on Quality Software",
		"page": "349–354",
		"abstract": "Recently, enterprises, organizations, and software companies are building more and more web applications to provide their services over the Internet. In order to fulfill various requirements, the complexity of web applications nowadays is increasing dramatically. As a result, the performance characteristics of web applications, including response time, throughput, etc, become more critical than before and should be taken into careful consideration. If the response time of a web application is poor, users may lose their interests even the function of the web application is correct. Therefore, how to execute performance testing on a complex web application systematically and efficiently will be an important issue. In this paper, a performance testing framework for REST-based web applications is introduced. The performance testing framework aims to provide software testers with an integrated process from test cases design, test scripts generation, to test execution. Based on the test cases designed by software testers and the appropriate software artifacts preserved by the framework (e.g., API document), the framework generates the corresponding performance test scripts, which can be executed by specific performance test tools. This helps software testers to focus more in the design of performance test cases. In addition, effort needed to understand the design and implementation of the application and to learn the operation of testing tools decrease. Thus, the efficiency of performance testing can be highly facilitated.",
		"DOI": "10.1109/QSIC.2013.32",
		"author": [
			{
				"family": "Kao",
				"given": "C. H."
			},
			{
				"family": "Lin",
				"given": "C. C."
			},
			{
				"family": "Chen",
				"given": "J. N."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					7
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/6W7EXAEJ",
		"type": "paper-conference",
		"title": "Resource-oriented design towards the convergence of Web-centric and Telecom-centric services",
		"container-title": "Second International Conference on Future Generation Communication Technologies (FGCT 2013)",
		"page": "120–125",
		"abstract": "Several approaches are currently being discussed for the convergence of Web-centric and Telecom-centric services. They can resort to a resource-oriented design methodology for defining a set of REST APIs in order to allow communication services on the Web. Our work aims at investigating how Telecom capabilities could be exposed on the web and be accessed through web browsers. The contribution of this work is threefold. Firstly, a resource-oriented service design methodology is adopted to specify a set of REST APIs for communication services (e.g. a voice call service). Secondly, we model the call resource behavior through a finite-state machine notation which accounts for the SIP signaling specifications. Thirdly, we design and develop a web application prototype that implements the REST APIs to provide a communication service which is accessible to web browsers and also interworks with SIP User Agents. This prototype supports also a mechanism based on the WebSocket protocol for handling asynchronous notifications.",
		"DOI": "10.1109/FGCT.2013.6767203",
		"author": [
			{
				"family": "Ambra",
				"given": "T."
			},
			{
				"family": "Paganelli",
				"given": "F."
			},
			{
				"family": "Fantechi",
				"given": "A."
			},
			{
				"family": "Giuli",
				"given": "D."
			},
			{
				"family": "Mazzi",
				"given": "L."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					11
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/WMS47HHF",
		"type": "paper-conference",
		"title": "Modularizing RESTful web service management with aspect oriented programming",
		"container-title": "2015 3rd International Conference on Information and Communication Technology (ICoICT)",
		"page": "358–363",
		"abstract": "REST is a style of web services that uses standardized HTTP or similar protocols by constraining the interface to a set of well-known, standard operations (e.g., GET, POST, PUT, DELETE) [1]. In web application, functionalities spread in tiers or layers. Using Object Oriented Programming (OOP), functionalities supporting operations, e.g. authentication, caching, and logging, are not centralized, and spread over main codes. This is called crosscutting concerns. The impact of crosscutting concerns makes the software less reusable which will influence the flexibility and modifiability of the codes. It also makes the codes difficult to read and to understand. To handle this problem, there is a need to centralize the crosscutting concerns into an aspect using Aspect Oriented Programming (AOP). In this research, we identified, managed and analyzed the crosscutting concerns. We used PHP programming language. The measurement result with reusability metric on REST showed an evidence that REST-OOP+AOP is indicated more reusable than REST-OOP. Our contribution in this study is that we have collected crosscutting concerns into aspects in REST web service, especially in code level using OOP+AOP.",
		"DOI": "10.1109/ICoICT.2015.7231451",
		"author": [
			{
				"family": "Bramantya",
				"given": "W."
			},
			{
				"family": "Kusumo",
				"given": "D. S."
			},
			{
				"family": "Munajat",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					5
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/MT2P8AEI",
		"type": "article-journal",
		"title": "A Web of Things Framework for RESTful Applications and Its Experimentation in a Smart City",
		"container-title": "IEEE Systems Journal",
		"page": "1412–1423",
		"volume": "10",
		"issue": "4",
		"abstract": "The Web of Things is an active research field which aims at promoting the easy access and handling of smart things' digital representations through the adoption of Web standards and technologies. While huge research and development efforts have been spent on lower level networks and software technologies, it has been recognized that little experience exists instead in modeling and building applications for the Web of Things. Although several works have proposed Representational State Transfer (REST) inspired approaches for the Web of Things, a main limitation is that poor support is provided to web developers for speeding up the development of Web of Things applications while taking full advantage of REST benefits. In this paper, we propose a framework which supports developers in modeling smart things as web resources, exposing them through RESTful Application Programming Interfaces (APIs) and developing applications on top of them. The framework consists of a Web Resource information model, a middleware, and tools for developing and publishing smart things' digital representations on the Web. We discuss the framework compliance with REST guidelines and its major implementation choices. Finally, we report on our test activities carried out within the SmartSantander European Project to evaluate the use and proficiency of our framework in a smart city scenario.",
		"DOI": "10.1109/JSYST.2014.2354835",
		"ISSN": "1932-8184",
		"author": [
			{
				"family": "Paganelli",
				"given": "F."
			},
			{
				"family": "Turchi",
				"given": "S."
			},
			{
				"family": "Giuli",
				"given": "D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/MEGK3Q8X",
		"type": "paper-conference",
		"title": "WIMS 2.0: Converging IMS and Web 2.0. Designing REST APIs for the Exposure of Session-Based IMS Capabilities",
		"container-title": "2008 The Second International Conference on Next Generation Mobile Applications, Services, and Technologies",
		"page": "18–24",
		"abstract": "This paper presents the WIMS 2.0 initiative, a study on the strategies, technologies and service platforms to be used by telecom operators to achieve the convergence with innovative Web 2.0 services in All-IP networks. After analysing the current situation in the world of IP services, a business model change is recommended through the adoption of a user-centric and open-garden philosophy. IMS is identified as the base platform to construct the convergence and the business model change. The study follows a two-sided approach to achieve the convergence: the open exposure of IMS capabilities towards Web 2.0 services and the use of Web 2.0 services to enrich operators' services. Following this approach, a reference model for the new service architecture, the WIMS 2.0 Services Platform, is also proposed. Focusing on the exposure of IMS capabilities as the main topic, the study recommends that IMS capabilities should be exposed through open Web APIs following a RESTful approach. In this regard, and in contrast to other existing RPC approaches, this paper proposes a design for the exposition of session-based IMS capabilities through REST APIs, more concretely, based on the AtomPub protocol.",
		"DOI": "10.1109/NGMAST.2008.97",
		"shortTitle": "WIMS 2.0",
		"author": [
			{
				"family": "Lozano",
				"given": "D."
			},
			{
				"family": "Galindo",
				"given": "L. A."
			},
			{
				"family": "García",
				"given": "L."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					9
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/6TKWTRFR",
		"type": "article-journal",
		"title": "Design Patterns and Extensibility of REST API for Networking Applications",
		"container-title": "IEEE Transactions on Network and Service Management",
		"page": "154–167",
		"volume": "13",
		"issue": "1",
		"abstract": "REST architectural style has become a prevalent choice for distributed resources, such as the northbound API of software-defined networking (SDN). As services often undergo frequent changes and updates, the corresponding REST APIs need to change and update accordingly. To allow REST APIs to change and evolve without breaking its clients, a REST API can be designed to facilitate hypertext-driven navigation and its related mechanisms to deal with structure changes in the API. This paper addresses the issues in hypertext-driven navigation in REST APIs from three aspects. First, we present REST Chart, a Petri-Net-based REST service description framework and language to design extensible REST APIs, and it is applied to cope with the rapid evolution of SDN northbound APIs. Second, we describe some important design patterns, such as backtracking and generator, within the REST Chart framework to navigate through large scale APIs in the RESTful architecture. Third, we present a client side differential cache mechanism to reduce the overhead of hypertext-driven navigation, addressing a major issue that affects the application of REST API. The proposed approach is applied to applications in SDN, which is integrated with a generalized SDN controller, SOX. The benefits of the proposed approach are verified in different conditions. Experimental results on SDN applications show that on average, the proposed cache mechanism reduces the overhead of using the hypertext-driven REST API by 66%, while fully maintaining the desired flexibility and extensibility of the REST API.",
		"DOI": "10.1109/TNSM.2016.2516946",
		"ISSN": "1932-4537",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			},
			{
				"family": "Zhou",
				"given": "W."
			},
			{
				"family": "Luo",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					3
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GB9UISRD",
		"type": "paper-conference",
		"title": "Enabling resource-oriented Mobile Web Server for short-lived services",
		"container-title": "2009 IEEE 9th Malaysia International Conference on Communications (MICC)",
		"page": "392–396",
		"abstract": "Mobile Web Services (MobWS) are a promising technology for the integration of Information Technology (IT) and Telecommunication (TelCo) domains. The advancements in mobile communication and device technology, in terms of software and hardware, have revolutionized the focus of research and industry to investigate mobile service provisioning platforms and architectures. In this paper, we present a concept and architecture of a REST-Interfaced Mobile Web Server as a service delivery platform. Here, we discuss about the interaction strategy and URL-based access techniques for short-lived synchronousMobWS. The paper focuses on in-depth explanation of software architecture and its components of server and compares the payload requirements with the state-or-the-art SOAP based MobWS. The REST architecture has significantly reduced payload demands that shows promising signs of optimized processing performance of the mobile server when compared to SOAP.",
		"DOI": "10.1109/MICC.2009.5431538",
		"author": [
			{
				"family": "Aijaz",
				"given": "F."
			},
			{
				"family": "Ali",
				"given": "S. Z."
			},
			{
				"family": "Chaudhary",
				"given": "M. A."
			},
			{
				"family": "Walke",
				"given": "B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009",
					12
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RVQW2TNM",
		"type": "paper-conference",
		"title": "XML Technologies for RESTful Services Development",
		"container-title": "Proceedings of the Second International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "26–32",
		"event-place": "New York, NY, USA",
		"abstract": "For the last several decades the predominant architectural style for the implementation of data-centric applications has had a relational database at the core, procedural code implementing the application services and an object-oriented API. More recently the API has transitioned, via a slight detour through SOAP-based web services, to a RESTful style, however what lies beneath that interface has been slower to take a new approach. In this paper we argue that upgrading that which is under the covers to an XML-centric technology stack will result in a system that is easier to build, test and maintain. Further, these technologies are a step toward making construction of such systems available to non-programmers. We present an XML RESTful Services framework that provides mechanisms to address all of the key aspects of systems built in the RESTful architectural style.",
		"URL": "http://doi.acm.org/10.1145/1967428.1967437",
		"DOI": "10.1145/1967428.1967437",
		"ISBN": "978-1-4503-0623-2",
		"author": [
			{
				"family": "Davis",
				"given": "Cornelia"
			},
			{
				"family": "Maguire",
				"given": "Tom"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/7NK2GSB5",
		"type": "paper-conference",
		"title": "Functional Descriptions As the Bridge Between Hypermedia APIs and the Semantic Web",
		"container-title": "Proceedings of the Third International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "33–40",
		"event-place": "New York, NY, USA",
		"abstract": "The early visions for the Semantic Web, from the famous 2001 Scientific American article by Berners-Lee et al., feature intelligent agents that can autonomously perform tasks like discovering information, scheduling events, finding execution plans for complex operations, and in general, use reasoning techniques to come up with sense-making and traceable decisions. While todaymore than ten years laterthe building blocks (1) resource-oriented rest infrastructure, (2) Web APIs, and (3) Linked Data are in place, the envisioned intelligent agents have not landed yet. In this paper, we explain why capturing functionality is the connection between those three building blocks, and introduce the functional API description format RESTdesc that creates this bridge between hypermedia APIs and the Semantic Web. Rather than adding yet another component to the Semantic Web stack, RESTdesc offers instead concise descriptions that reuse existing vocabularies to guide hypermedia-driven agents. Its versatile capabilities are illustrated by a real-life agent use case for Web browsers wherein we demonstrate that RESTdesc functional descriptions are capable of fulfilling the promise of autonomous agents on the Web.",
		"URL": "http://doi.acm.org/10.1145/2307819.2307828",
		"DOI": "10.1145/2307819.2307828",
		"ISBN": "978-1-4503-1190-8",
		"author": [
			{
				"family": "Verborgh",
				"given": "Ruben"
			},
			{
				"family": "Steiner",
				"given": "Thomas"
			},
			{
				"family": "Van Deursen",
				"given": "Davy"
			},
			{
				"family": "Coppens",
				"given": "Sam"
			},
			{
				"family": "Vallés",
				"given": "Joaquim Gabarró"
			},
			{
				"family": "Van de Walle",
				"given": "Rik"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8VRTIJPJ",
		"type": "paper-conference",
		"title": "Creating 3rd Generation Web APIs with Hydra",
		"container-title": "Proceedings of the 22Nd International Conference on World Wide Web",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "35–38",
		"event-place": "New York, NY, USA",
		"abstract": "In this paper we describe a novel approach to build hypermedia-driven Web APIs based on Linked Data technologies such as JSON-LD. We also present the result of implementing a first prototype featuring both a RESTful Web API and a generic API client. To the best of our knowledge, no comparable integrated system to develop Linked Data-based APIs exists.",
		"URL": "http://doi.acm.org/10.1145/2487788.2487799",
		"DOI": "10.1145/2487788.2487799",
		"ISBN": "978-1-4503-2038-2",
		"author": [
			{
				"family": "Lanthaler",
				"given": "Markus"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/HDEP2ENE",
		"type": "paper-conference",
		"title": "Transmission Reduction Between Mobile Phone Applications and RESTful APIs",
		"container-title": "Proceedings of the 2011 ACM Symposium on Applied Computing",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "445–450",
		"event-place": "New York, NY, USA",
		"abstract": "Recently, the popularity of mobile smart phones has fostered the development of a variety of mobile Mashup applications. A mobile Mashup application retrieves and glues together resources on the Web to create a new service. Compared with mobile Web browsers, mobile Mashup applications provide users with fancy GUIs and specialized services. Thus, mobile Mashup applications have become a significant role on mobile phones. Due to low-bandwidth wireless links and limited battery capacity, a large number of transmissions of mobile applications is prohibitive. However, because mobile clients mainly use mobile Web browsers to access the Web, prior work only focused on reducing the data sent to mobile Web browsers. In this paper, we present a proxy system as well as several techniques to reduce the volume of transmissions sent from and received by mobile Mashup applications based on the observations on characteristics of RESTful APIs. We propose an API query language (AQL), which enables mobile applications to batch multiple RESTful API method calls into one single query, thereby reducing the number of HTTP requests and responses. In addition, we employ an image multi-get module and Gzip compression module for image and text transmission reduction, respectively. The experimental results show that the proposed system and techniques effectively reduces the number of HTTP requests and responses and sizes of packets.",
		"URL": "http://doi.acm.org/10.1145/1982185.1982280",
		"DOI": "10.1145/1982185.1982280",
		"ISBN": "978-1-4503-0113-8",
		"author": [
			{
				"family": "Tsai",
				"given": "Chin-Liang"
			},
			{
				"family": "Chen",
				"given": "Hsiao-Wen"
			},
			{
				"family": "Huang",
				"given": "Jiun-Long"
			},
			{
				"family": "Hu",
				"given": "Chih-Lin"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/NWXF8NVE",
		"type": "paper-conference",
		"title": "Model-driven Testing of RESTful APIs",
		"container-title": "Proceedings of the 24th International Conference on World Wide Web",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "1497–1502",
		"event-place": "New York, NY, USA",
		"abstract": "In contrast to the increasing popularity of REpresentational State Transfer (REST), systematic testing of RESTful Application Programming Interfaces (API) has not attracted much attention so far. This paper describes different aspects of automated testing of RESTful APIs. Later, we focus on functional and security tests, for which we apply a technique called model-based software development. Based on an abstract model of the RESTful API that comprises resources, states and transitions a software generator not only creates the source code of the RESTful API but also creates a large number of test cases that can be immediately used to test the implementation. This paper describes the process of developing a software generator for test cases using state-of-the-art tools and provides an example to show the feasibility of our approach.",
		"URL": "http://doi.acm.org/10.1145/2740908.2743045",
		"DOI": "10.1145/2740908.2743045",
		"ISBN": "978-1-4503-3473-0",
		"author": [
			{
				"family": "Fertig",
				"given": "Tobias"
			},
			{
				"family": "Braun",
				"given": "Peter"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/43EJMN4X",
		"type": "paper-conference",
		"title": "A Formal Definition of RESTful Semantic Web Services",
		"container-title": "Proceedings of the First International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "39–45",
		"event-place": "New York, NY, USA",
		"abstract": "In this article a formal model applying REST architectural principles to the description of semantic web services is introduced, including the discussion of its syntax and operational semantics. RESTful semantic resources are described using the concept of tuple spaces being manipulated by HTTP methods that are related to classical tuple space operations. On the other hand, RESTful resources creation, destruction and other dynamic aspects of distributed HTTP computations involving coordination between HTTP agents and services are modeled using process calculus style named channels and message passing mechanisms. The resulting model allows for a complete and rigorous description of resource based web systems, where agents taking part in a computation publish data encoded according to semantic standards through public triple repositories identified by well known URIs. The model can be used to describe complex interaction scenarios where coordination and composition of resources are required. One of such scenarios taken from the literature about web services choreography is analyzed from the point of view of the proposed model. Finally, possible extensions to the formalism, such as the inclusion of a description logics based type system associated to the semantic resources or possible extensions to HTTP operations are briefly explored.",
		"URL": "http://doi.acm.org/10.1145/1798354.1798384",
		"DOI": "10.1145/1798354.1798384",
		"ISBN": "978-1-60558-959-6",
		"author": [
			{
				"family": "Hernández",
				"given": "Antonio Garrote"
			},
			{
				"family": "García",
				"given": "María N. Moreno"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/TPFRQDWH",
		"type": "paper-conference",
		"title": "A Framework for Obligation Fulfillment in REST Services",
		"container-title": "Proceedings of the Second International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "59–66",
		"event-place": "New York, NY, USA",
		"abstract": "An Obligation is an expression of non-functional or cross-cutting requirements, the scope of which transcends any specific service, but for which the service bears an enforcement responsibility. Example use cases include regulations imposed on handling of Electronic Health Records. We describe the concept of an Obligation, provide example use cases, and then define a general design pattern for when a REST developer should consider their use. We then describe a proof-of-concept implementation that extends the Spring Security framework to support the assertion of Obligations within a RESTful service deployment. This extension may be used to inject a range of Obligation behaviors into a REST service during the design, deployment, and post deployment phases. Our prototype is compatible with the XACML 3.0 core standard.",
		"URL": "http://doi.acm.org/10.1145/1967428.1967443",
		"DOI": "10.1145/1967428.1967443",
		"ISBN": "978-1-4503-0623-2",
		"author": [
			{
				"family": "Field",
				"given": "John P."
			},
			{
				"family": "Graham",
				"given": "Stephen G."
			},
			{
				"family": "Maguire",
				"given": "Tom"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/6N4BV8W4",
		"type": "paper-conference",
		"title": "Hecate, Managing Authorization with RESTful XML",
		"container-title": "Proceedings of the Second International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "51–58",
		"event-place": "New York, NY, USA",
		"abstract": "The potentials of REST offers new ways for communications between louse coupled entities featured through the Web of Things [12]. The binding of the disjunct components of this architecture creates security issues, such as the centralized authorization techniques respecting the independence of the underlying entities. This results in the question how authorization is performed respecting the flexibility of REST without any knowledge about the underlying resources. Nevertheless, possible knowledge about these resources should enable the authorization workflow to offer finer-granular permissions on substructures of the resources. With our new approach - we named Hecate- we offer a framework to assure simplified handling while keeping the potentials and flexibility of REST. We have designed an architecture based on XML with a flexible authorization mechanism on the one hand and optional resource-awareness on the other hand. The flexibility within the authorization work-flow bases on permission sets respecting the HTTP-verbs. Additional in-depth knowledge of the entity optionally extends these permissions with resource-aware filters. Hecate offers not only great benefits because of its flexibility, but also because of the optional extensibility proved within the two reference implementations. With Hecate, we show that a centralized authorization mechanism combining independence and optional resource-based filtering extends the flexibility of REST rather than restricting it.",
		"URL": "http://doi.acm.org/10.1145/1967428.1967442",
		"DOI": "10.1145/1967428.1967442",
		"ISBN": "978-1-4503-0623-2",
		"author": [
			{
				"family": "Graf",
				"given": "Sebastian"
			},
			{
				"family": "Zholudev",
				"given": "Vyacheslav"
			},
			{
				"family": "Lewandowski",
				"given": "Lukas"
			},
			{
				"family": "Waldvogel",
				"given": "Marcel"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XMERGURW",
		"type": "paper-conference",
		"title": "S: A Scripting Language for High-performance RESTful Web Services",
		"container-title": "Proceedings of the 17th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "97–106",
		"event-place": "New York, NY, USA",
		"abstract": "There is an urgent need for novel programming abstractions to leverage the parallelism in modern multicore machines. We introduce S, a new domain-specific language targeting the server-side scripting of high-performance RESTful Web services. S promotes an innovative programming model based on explicit (control-flow) and implicit (process-level) parallelism control, allowing the service developer to specify which portions of the control-flow should be executed in parallel. For each service, the choice of the best level of parallelism is left to the runtime system. We assess performance and scalability by implementing two non-trivial composite Web services in S. Experiments show that S-based Web services can handle thousands of concurrent client requests on a modern multicore machine.",
		"URL": "http://doi.acm.org/10.1145/2145816.2145829",
		"DOI": "10.1145/2145816.2145829",
		"ISBN": "978-1-4503-1160-1",
		"shortTitle": "S",
		"author": [
			{
				"family": "Bonetta",
				"given": "Daniele"
			},
			{
				"family": "Peternier",
				"given": "Achille"
			},
			{
				"family": "Pautasso",
				"given": "Cesare"
			},
			{
				"family": "Binder",
				"given": "Walter"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/7E62M6QK",
		"type": "paper-conference",
		"title": "Towards a Practical Model to Facilitate Reasoning About REST Extensions and Reuse",
		"container-title": "Proceedings of the First International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "31–38",
		"event-place": "New York, NY, USA",
		"abstract": "We believe that there is a need for a practical model to visualize the structure and design rationale of REST, so researchers can study more easily the reutilization of this architectural style or parts of it, to the design of software solutions with different requirements than those of the early WWW. In this work we propose the utilization of extended influence diagrams to represent the structure and design rationale of an architectural style. The model is evaluated qualitatively by showing how a diagram of REST, populated with information extracted from the doctoral dissertation that introduced the term, is helpful to gain a better understanding of the properties and limitations of this style, and to reason about potential modifications for applications with different goals than those of the early WWW.",
		"URL": "http://doi.acm.org/10.1145/1798354.1798383",
		"DOI": "10.1145/1798354.1798383",
		"ISBN": "978-1-60558-959-6",
		"author": [
			{
				"family": "Fernandez",
				"given": "Federico"
			},
			{
				"family": "Navón",
				"given": "Jaime"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/5IT8N5J9",
		"type": "paper-conference",
		"title": "The Role of Hypermedia in Distributed System Development",
		"container-title": "Proceedings of the First International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "16–22",
		"event-place": "New York, NY, USA",
		"abstract": "This paper discusses the role of the REpresentational State Transfer (REST) architectural style in the development of distributed applications. It also gives an overview of how RESTful implementations of distributed business processes and structures can be supported by a framework such as Restfulie.",
		"URL": "http://doi.acm.org/10.1145/1798354.1798379",
		"DOI": "10.1145/1798354.1798379",
		"ISBN": "978-1-60558-959-6",
		"author": [
			{
				"family": "Parastatidis",
				"given": "Savas"
			},
			{
				"family": "Webber",
				"given": "Jim"
			},
			{
				"family": "Silveira",
				"given": "Guilherme"
			},
			{
				"family": "Robinson",
				"given": "Ian S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/54V2FVRV",
		"type": "paper-conference",
		"title": "REST and Linked Data: A Match Made for Domain Driven Development?",
		"container-title": "Proceedings of the Second International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "22–25",
		"event-place": "New York, NY, USA",
		"abstract": "At a first glance there might appear to be an obvious alignment and overlap between the approaches prescribed by REST and Linked Data. On more detailed inspection divergences in scope and applicability present themselves, and for some aspects, incompatibility. In this paper we investigate these similarities and differences and suggest the coupling is worthy of a third look: in combination as a flexible environment in which the developer can focus on domain driven applications.",
		"URL": "http://doi.acm.org/10.1145/1967428.1967435",
		"DOI": "10.1145/1967428.1967435",
		"ISBN": "978-1-4503-0623-2",
		"shortTitle": "REST and Linked Data",
		"author": [
			{
				"family": "Page",
				"given": "Kevin R."
			},
			{
				"family": "De Roure",
				"given": "David C."
			},
			{
				"family": "Martinez",
				"given": "Kirk"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GUZ3X22J",
		"type": "paper-conference",
		"title": "RestACL: An Access Control Language for RESTful Services",
		"container-title": "Proceedings of the 2016 ACM International Workshop on Attribute Based Access Control",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "58–67",
		"event-place": "New York, NY, USA",
		"abstract": "This work describes an efficient Access Control Language for RESTful Services. The language follows the ideas of Attribute Based Access Control and utilizes the concepts of REST to enable a quick identification of policies that have to be evaluated to find an access decision. An implementation of the language uses hash tables to identify resources and their corresponding access policies in a short time, what is required to speed up a priority based decision making for access requests. This work introduces the Access Control Language and the evaluation algorithms that enable fast decision making. A detailed description of the language, the mechanisms and the used algorithms is given.",
		"URL": "http://doi.acm.org/10.1145/2875491.2875494",
		"DOI": "10.1145/2875491.2875494",
		"ISBN": "978-1-4503-4079-3",
		"shortTitle": "RestACL",
		"author": [
			{
				"family": "Hüffmeyer",
				"given": "Marc"
			},
			{
				"family": "Schreier",
				"given": "Ulf"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/JUURA96T",
		"type": "paper-conference",
		"title": "RESTful Open Workflows for Data Provenance and Reuse",
		"container-title": "Proceedings of the 23rd International Conference on World Wide Web",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "259–260",
		"event-place": "New York, NY, USA",
		"abstract": "In this paper, we present a workflow model together with an implementation following the Linked Data principles and the principles for RESTful web services. By means of RDF-based specifications of web services, workflows, and runtime information, we establish a full provenance chain for all resources created within these workflows.",
		"URL": "http://doi.acm.org/10.1145/2567948.2577347",
		"DOI": "10.1145/2567948.2577347",
		"ISBN": "978-1-4503-2745-9",
		"author": [
			{
				"family": "Eckert",
				"given": "Kai"
			},
			{
				"family": "Ritze",
				"given": "Dominique"
			},
			{
				"family": "Baierer",
				"given": "Konstantin"
			},
			{
				"family": "Bizer",
				"given": "Christian"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/T3TXDUM6",
		"type": "paper-conference",
		"title": "Connectedness Testing of RESTful Web-services",
		"container-title": "Proceedings of the 3rd India Software Engineering Conference",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "143–152",
		"event-place": "New York, NY, USA",
		"abstract": "In the context of RESTful web-services, connectedness refers to the property wherein every resource in the web-service is reachable from the base resource by successive HTTP GET requests. Presence (or absence) of connectedness has practical implications and hence is an important property of RESTful web-services. In this article, we present an algorithm for testing the connectedness of RESTful webservices. Using a formal specification of the web-service, our algorithm tests the connectedness of a web-service automatically. We also discuss a formal notation we have developed to specify RESTful web-services. Using our notation, we wrote the formal specification for a prototype RESTful web-service which has been developed for internal use in our organisation. Using this specification we employed our method to conduct automated testing of the above webservice. Many functional defects apart from those related to connectedness were detected early during development. This demonstrated that both our specification notation and our testing method are promising innovations in the direction of specification and testing of RESTful web-services.",
		"URL": "http://doi.acm.org/10.1145/1730874.1730902",
		"DOI": "10.1145/1730874.1730902",
		"ISBN": "978-1-60558-922-0",
		"author": [
			{
				"family": "Chakrabarti",
				"given": "Sujit Kumar"
			},
			{
				"family": "Rodriquez",
				"given": "Reswin"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/S7F57GEF",
		"type": "paper-conference",
		"title": "VCoRE: A Web Resource Oriented Architecture for Efficient Data Exchange",
		"container-title": "Proceedings of the 18th International Conference on 3D Web Technology",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "71–78",
		"event-place": "New York, NY, USA",
		"abstract": "In this paper, we present a specification of a RESTful based networking interface for the efficient exchange and manipulation of visual computing resources. It is designed to include web applications by using modern web-technology such as Typed Arrays and WebSockets. The specification maps internal structures and data containers to two types, Elements and Attributes, which can be queried for a description or their content. Two modes of communication are defined, one through HTTP requests, where we use HTTP operations to manipulate Elements and Attributes or request their data in a stateless fashion, the other through WebSockets to enable a push-based communication. A key idea to this interface is that we use MIME types to specify the way data is to be exchanged in. When requesting data, the user may supply a hint or type in which the data is expected to be delivered in, which enables us to write web-applications which can process already converted data that would not have been web-friendly before. To have such a mode of operation, we also present a table of extracted basic data types usable for requesting data conversion, which are derived from the Typed Array specification and shared across shader languages.",
		"URL": "http://doi.acm.org/10.1145/2466533.2466545",
		"DOI": "10.1145/2466533.2466545",
		"ISBN": "978-1-4503-2133-4",
		"shortTitle": "VCoRE",
		"author": [
			{
				"family": "Franke",
				"given": "Tobias"
			},
			{
				"family": "Settgast",
				"given": "Volker"
			},
			{
				"family": "Behr",
				"given": "Johannes"
			},
			{
				"family": "Raffin",
				"given": "Bruno"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/DGSICPZP",
		"type": "paper-conference",
		"title": "Composition of Engineering Web Services with Universal Distributed Data-flows Framework Based on ROA",
		"container-title": "Proceedings of the Third International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "41–48",
		"event-place": "New York, NY, USA",
		"abstract": "The problem of staging data in workflows has received much attention over the last decade, with a variety of user-directed and automatic solutions. The latter are the focus of the first contribution in this paper, where we propose a simple peer-to-peer solution adapted to the needs of RESTful services. The second contribution, is the combination of the data staging mechanism with a simple service deployment mechanism, that is designed to allow applications developed for the command-line to function as (RESTful) services without modification or (in some cases) recompilation. Thus, the aim of this paper is to describe the design and implementation of: (i) a peer-to-peer data-staging mechanism, that is itself RESTful, and (ii) a service deployment mechanism, also following REST design principles, which together form the Universal Distributed Data-flows framework, for the support of data-intensive (RESTful) workflows. We evaluate the framework by means of an engineering workflow developed for multi-disciplinary design optimization. The workflow itself is specified in Taverna, which is a conventional centralized data-staging enactment system. However, by virtue of the underlying services and staging mechanisms described here, the resulting enactment is peer-to-peer (for data), which furthermore permits asynchronous staging, with potential benefits for network utilization and end-to-end execution time.",
		"URL": "http://doi.acm.org/10.1145/2307819.2307830",
		"DOI": "10.1145/2307819.2307830",
		"ISBN": "978-1-4503-1190-8",
		"author": [
			{
				"family": "Duan",
				"given": "Kewei"
			},
			{
				"family": "Padget",
				"given": "Julian"
			},
			{
				"family": "Kim",
				"given": "H. Alicia"
			},
			{
				"family": "Hosobe",
				"given": "Hiroshi"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/99XWAHTR",
		"type": "paper-conference",
		"title": "Fulfilling the Hypermedia Constraint via HTTP OPTIONS, the HTTP Vocabulary in RDF, and Link Headers",
		"container-title": "Proceedings of the Second International Workshop on RESTful Design",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "11–14",
		"event-place": "New York, NY, USA",
		"abstract": "One of the main REST design principles is the focus on media types as the core of contracts on the Web. However, not always is the service designer free to select the most appropriate media type for a task, sometimes a generic media type like application/rdf+xml (or in the worst case a binary format like image/png) with no defined or possible hypermedia controls at all has to be chosen. With this position paper we present a way how the hypermedia constraint of REST can still be fulfilled using a combination of Link headers, the OPTIONS method, and the HTTP Vocabulary in RDF.",
		"URL": "http://doi.acm.org/10.1145/1967428.1967433",
		"DOI": "10.1145/1967428.1967433",
		"ISBN": "978-1-4503-0623-2",
		"author": [
			{
				"family": "Steiner",
				"given": "Thomas"
			},
			{
				"family": "Algermissen",
				"given": "Jan"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VDAG87AU",
		"type": "paper-conference",
		"title": "Engineering RESTful Semantic Services on the Fly",
		"container-title": "Proceedings of the South African Institute of Computer Scientists and Information Technologists Conference on Knowledge, Innovation and Leadership in a Diverse, Multidisciplinary Environment",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "322–325",
		"event-place": "New York, NY, USA",
		"abstract": "Real-world implementations of semantic services that could enable seamless integration of heterogeneous systems on the fly are deficient. This could be attributed to the complexity of heavy-weight semantic technologies, which mostly have a steep learning curve. As a consequence, the evolvement of modern approaches that purport to simplify the engineering of such services is a necessity. In this short paper, we present a work-in-progress model-driven approach that seeks to simplify and speed up the process of engineering RESTful semantic services. The suggested approach promotes automatic transformation of platform independent service models to partial service implementation and semantic descriptions to realize functional RESTful semantic services. The proposed solution is demonstrated and evaluated through a simple use-case scenario.",
		"URL": "http://doi.acm.org/10.1145/2072221.2072268",
		"DOI": "10.1145/2072221.2072268",
		"ISBN": "978-1-4503-0878-6",
		"author": [
			{
				"family": "Mtsweni",
				"given": "Jabu"
			},
			{
				"family": "Biermann",
				"given": "Elmarie"
			},
			{
				"family": "Pretorius",
				"given": "Laurette"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/BNC5TE9I",
		"type": "paper-conference",
		"title": "A Framework for the Description, Discovery and Composition of RESTful Semantic Web Services",
		"container-title": "Proceedings of the Second International Conference on Computational Science, Engineering and Information Technology",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "88–93",
		"event-place": "New York, NY, USA",
		"abstract": "Development of a semantic web is gaining a lot of traction recently. At the same time, another change is also getting a lot popular on the web - a move from complex SOAP based web services to the simpler RESTful services that work over the existing HTTP infrastructure. Various techniques had been proposed to add semantics to RESTful services. But most of these solutions suffer from the fact that they are either extensions of solutions applicable for SOAP based services or they require external description files which leaves developers with one more artifact to develop and maintain. One of the the objectives of this paper is to define a standard Microformats like syntax that helps to annotate semantics into the already existing documentation of these services doubling them as a machine-readable description. Further, the paper extends these basic annotations to link between related services and enable automatic discovery and composition. Syntax for discovering resources as users browse a website is also proposed and a proof-of-concept extension is developed for the Google Chrome browser.",
		"URL": "http://doi.acm.org/10.1145/2393216.2393232",
		"DOI": "10.1145/2393216.2393232",
		"ISBN": "978-1-4503-1310-0",
		"author": [
			{
				"family": "John",
				"given": "Davis"
			},
			{
				"family": "Rajasree",
				"given": "M. S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/MIUJ9NJM",
		"type": "paper-conference",
		"title": "Adding Rules on Existing Hypermedia APIs",
		"container-title": "Proceedings of the 24th International Conference on World Wide Web",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "1515–1517",
		"event-place": "New York, NY, USA",
		"abstract": "During the past years, the data deluge that prevails in the World Wide Web has been accompanied by a number of APIs that expose business logic. In this paper, we discuss a novel approach to enrich existing API standards definitions with business rules. Taking advantage of the REST principles, we aim at enabling the creation of generic clients that can dynamically navigate through semantically enriched web affordances with the help of Hydra-based Hypermedia API descriptions, which encapsulate the finite state machine of possible actions into SWRL rules.",
		"URL": "http://doi.acm.org/10.1145/2740908.2743041",
		"DOI": "10.1145/2740908.2743041",
		"ISBN": "978-1-4503-3473-0",
		"author": [
			{
				"family": "Petychakis",
				"given": "Michael"
			},
			{
				"family": "Lampathaki",
				"given": "Fenareti"
			},
			{
				"family": "Askounis",
				"given": "Dimitrios"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GN8398FC",
		"type": "paper-conference",
		"title": "Modeling Behavioral RESTful Web Service Interfaces in UML",
		"container-title": "Proceedings of the 2011 ACM Symposium on Applied Computing",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "1598–1605",
		"event-place": "New York, NY, USA",
		"abstract": "A web service interface contains information about the names of the operations that can be invoked on the service and the input and output parameters of these operations. The Web Application Description Language (WADL) is a language to describe the interface of a web service that follows the Representation State Transfer (REST) architectural style. Currently, WADL descriptions do not describe the behavioral semantics of the operations neither ensure that the published interfaces follow the REST style, that is they are RESTful. In this paper, we present an approach to model the structural and behavioral interface of a RESTful web service using UML class and UML protocol diagrams. These models lead to RESTful interfaces that describe the behavior of operations in terms of preconditions and postconditions. The contracts can then be published in an extended version of the WADL language and used for documentation, stub generation, testing and monitoring purposes.",
		"URL": "http://doi.acm.org/10.1145/1982185.1982521",
		"DOI": "10.1145/1982185.1982521",
		"ISBN": "978-1-4503-0113-8",
		"author": [
			{
				"family": "Porres",
				"given": "Ivan"
			},
			{
				"family": "Rauf",
				"given": "Irum"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/UNTKPFJQ",
		"type": "paper-conference",
		"title": "Using REST Web-Services Architecture for Distributed Simulation",
		"container-title": "Proceedings of the 2009 ACM/IEEE/SCS 23rd Workshop on Principles of Advanced and Distributed Simulation",
		"publisher": "IEEE Computer Society",
		"publisher-place": "Washington, DC, USA",
		"page": "114–121",
		"event-place": "Washington, DC, USA",
		"abstract": "In recent years, Web Services technologies have been successfully used for simplifying interoperability while providing scalability and flexibility in multiple applications, including distributed simulation software. The RESTful-CD++ simulation Server provides Web Services according to the REST principles by exposing services as URIs and consumed via HTTP messages. Therefore, the server becomes a service part of the Web that can be easily mashed-up with other applications and simulation software. In contrast, RPC-style SOAP-based Web Services use the Web as a transmission medium by exposing few URIs and many RPCs. RESTful-CD++ is (to our best knowledge) the only existing RESTful system in this area. Further, this distributed simulation package provides pioneering distributed simulation services using the Web architectural style. We present an overview of the principles, design and implementation of the RESTful-CD++ HTTP server and DCD++ simulation. We show that REST fulfills WS objectives with a much better and easier style than the SOAP-based systems.",
		"URL": "http://dx.doi.org/10.1109/PADS.2009.16",
		"DOI": "10.1109/PADS.2009.16",
		"ISBN": "978-0-7695-3713-9",
		"author": [
			{
				"family": "Al-Zoubi",
				"given": "Khaldoon"
			},
			{
				"family": "Wainer",
				"given": "Gabriel"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/SWB55GZD",
		"type": "paper-conference",
		"title": "A Concept for Generating Simplified RESTful Interfaces",
		"container-title": "Proceedings of the 22Nd International Conference on World Wide Web",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "1391–1398",
		"event-place": "New York, NY, USA",
		"abstract": "Today, innovative companies are forced to evolve their software systems faster and faster, either for providing customer services and products or for supporting internal processes. At the same time, already existing, maybe even legacy systems are crucial for different reasons and by that cannot be abolished easily. While integrating legacy software into new systems in general is considered by well-known approaches like SOA (service-oriented architecture), at the best of our knowledge, it lacks of ways to make legacy systems available for remote clients like smart phones or embedded devices. In this paper, we propose an approach to leverage heterogeneous (legacy) applications by adding RESTful web-based interfaces in a model-driven way. We introduce an additional application layer, which encapsulates services of one or several existing applications, and provides a unified, web-based, and seamless interface. This interface is modelled in our own DSL (domain-specific language), the belonging code generator produces productive Java code. Finally, we report on an case study proving our concept by means of an e-bike sharing service.",
		"URL": "http://doi.acm.org/10.1145/2487788.2488181",
		"DOI": "10.1145/2487788.2488181",
		"ISBN": "978-1-4503-2038-2",
		"author": [
			{
				"family": "Gulden",
				"given": "Markus"
			},
			{
				"family": "Kugele",
				"given": "Stefan"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XFX8WRRX",
		"type": "article-journal",
		"title": "Designing Level 3 Behavioral RESTful Web Service Interfaces",
		"container-title": "SIGAPP Appl. Comput. Rev.",
		"page": "19–31",
		"volume": "11",
		"issue": "3",
		"abstract": "A web service interface contains information about the names of the operations that can be invoked on the service and the input and output parameters of these operations. This information is not enough to facilitate service developer and consumer in understanding the behavior of the service. In the context of RESTful web services, the requirements of RESTful interface should also be met that are not fulfilled by just advertising the allowed operations on the resources. In addition, RESTful services take hypermedia as an engine of application states. Such services are defined to be at level 3 of Richardson Maturity Model(RMM). In this paper, we present an approach to model the structural and behavioral interface of a RESTful web service using UML class and UML protocol diagrams. These models lead to RESTful interfaces that conform to level 3 of RMM and describe the behavior of operations in terms of preconditions and post-conditions. These models facilitate the authentication mechanism and provide clear mapping to HTTP requests and responses. The generated contracts of methods can be published in an extended version of the WADL language and also used for documentation, stub generation, testing and monitoring purposes.",
		"URL": "http://doi.acm.org/10.1145/2034594.2034596",
		"DOI": "10.1145/2034594.2034596",
		"ISSN": "1559-6915",
		"author": [
			{
				"family": "Rauf",
				"given": "Irum"
			},
			{
				"family": "Porres",
				"given": "Ivan"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					8
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/9KQAP4QT",
		"type": "paper-conference",
		"title": "Towards Property-based Testing of RESTful Web Services",
		"container-title": "Proceedings of the Twelfth ACM SIGPLAN Workshop on Erlang",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "77–78",
		"event-place": "New York, NY, USA",
		"URL": "http://doi.acm.org/10.1145/2505305.2505317",
		"DOI": "10.1145/2505305.2505317",
		"ISBN": "978-1-4503-2385-7",
		"author": [
			{
				"family": "Lamela Seijas",
				"given": "Pablo"
			},
			{
				"family": "Li",
				"given": "Huiqing"
			},
			{
				"family": "Thompson",
				"given": "Simon"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/K4BPW4JQ",
		"type": "paper-conference",
		"title": "An Approach to Support Data Integrity for Web Services Using Semantic RESTful Interfaces",
		"container-title": "Proceedings of the 24th International Conference on World Wide Web",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "1485–1490",
		"event-place": "New York, NY, USA",
		"abstract": "In the Web, linked data is growing rapidly due to its potential to facilitate data retrieval and data integration. At the same time, relational database systems store a vast amount of data published on the Web. Current linked data in the Web is mainly read only. It allows for integration, navigation, and consultations in large structured datasets, but it still lacks a general concept for reading and writing. This paper proposes a specification, entitled Semantic Data Services (SDS), for RESTful Web services that provide data access. To provide linked data read-write capacity, SDS proposes a mechanism for integrity checking that is analogous to that used in relational databases. SDS implements the Semantic Restful Interface (SERIN) specification. SERIN uses annotations on classes in an ontology, describing the semantic web services that are available to manipulate data. This work extends SERIN specification adding annotations to allow the adoption of data access integrity constraints.",
		"URL": "http://doi.acm.org/10.1145/2740908.2743042",
		"DOI": "10.1145/2740908.2743042",
		"ISBN": "978-1-4503-3473-0",
		"author": [
			{
				"family": "Lira",
				"given": "Hermano Albuquerque"
			},
			{
				"family": "Dantas",
				"given": "Jose Renato Villela"
			},
			{
				"family": "Muniz",
				"given": "Bruno de Azevedo"
			},
			{
				"family": "Nunes",
				"given": "Tadeu Matos"
			},
			{
				"family": "Farias",
				"given": "Pedro Porfirio Muniz"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/HDM6K7T9",
		"type": "paper-conference",
		"title": "RISE: REST-ing Heterogeneous Simulations Interoperability",
		"container-title": "Proceedings of the Winter Simulation Conference",
		"publisher": "Winter Simulation Conference",
		"publisher-place": "Baltimore, Maryland",
		"page": "2968–2980",
		"event-place": "Baltimore, Maryland",
		"abstract": "Interoperating heterogeneous simulation models and tools is becoming a necessity in today's cross-enterprise collaboration market. Nevertheless, simulation models and engines have evolved apart in many directions, making their interoperability extremely complex. We present the RESTful Interoperability Simulation Environment (RISE), which provides the means for interoperating simulation heterogeneous assets. RISE uses Service-Oriented RESTful web-services, and it is based on three aspects: the framework architecture, the modeling level and the simulation synchronization level. RISE is independent of any simulation engine, theory or an algorithm. However, it provides different rules for simulation domains with conservative or optimistic synchronization algorithms. Further, RISE does not require any implementation changes related to domain modeling or simulation methods. Furthermore, it hides domain internal specifics, giving freedom to define different internal implementation and algorithms. The presented work here is part of the on-going effort in the DEVS community to interoperate different DEVS-based simulation assets.",
		"URL": "http://dl.acm.org/citation.cfm?id=2433508.2433877",
		"ISBN": "978-1-4244-9864-2",
		"shortTitle": "RISE",
		"author": [
			{
				"family": "Al-Zoubi",
				"given": "Khaldoon"
			},
			{
				"family": "Wainer",
				"given": "Gabriel"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/AMMHKMS8",
		"type": "paper-conference",
		"title": "Formal Comparison of an Attribute Based Access Control Language for RESTful Services with XACML",
		"container-title": "Proceedings of the 21st ACM on Symposium on Access Control Models and Technologies",
		"publisher": "ACM",
		"publisher-place": "New York, NY, USA",
		"page": "171–178",
		"event-place": "New York, NY, USA",
		"abstract": "This work introduces RestACL - an access control language for RESTful Services - and compares it with XACML using formal methods. XACML is a generic approach that targets Attribute Based Access Control (ABAC) in general. RestACL is founded on the ideas of the ABAC model, too, but utilizes the concepts of REST enabling a quicker evaluation of access requests. This work gives a brief introduction over the main ideas of RestACL and proves its evidence by giving transformation rules to translate security policies from RestACL to XACML and vice versa. The formalized transformation descriptions show the expressive strength of RestACL, because they demonstrate that any generic ABAC policy written in XACML can be expressed with RestACL, too. The correctness and completeness of RestACL can be proved with the transformation rules, too.",
		"URL": "http://doi.acm.org/10.1145/2914642.2914663",
		"DOI": "10.1145/2914642.2914663",
		"ISBN": "978-1-4503-3802-8",
		"author": [
			{
				"family": "Hüffmeyer",
				"given": "Marc"
			},
			{
				"family": "Schreier",
				"given": "Ulf"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/JJSMKSWG",
		"type": "article-journal",
		"title": "Developing Social Networks Mashups: An Overview of REST-Based APIs",
		"container-title": "Procedia Technology",
		"page": "205–213",
		"volume": "3",
		"abstract": "The social networks have become in a powerful diffusion media in several fields such as communication, e-commerce and entertainment. However, the development of new applications that combine the functionality of different social networks with the purpose of providing added-value to users is not very common. In this context, a new kind of applications called mashups has emerged. A mashup is a web application that integrates data from multiple web sources in order to provide a unique service. Internal data sources, RSS/Atom feeds, Screen-Scraping and Web Services are some resources used by mashups. Nowadays, most of Web Services provided by social networks use the REST-based architectural style because it offers significant advantages in comparison with other technologies. The contribution of this paper is a review of REST-based APIs for the development of mashups that integrate well known social networks such as Youtube©, Picasa©, and Flickr©, among others. In addition, a set of 4 mashups were developed combining the APIs discussed. Also, this work provides a development guide to perform tasks such as extraction and combination from different data sources, as well as leads to the emergence of new ideas for developing web applications.",
		"URL": "//www.sciencedirect.com/science/article/pii/S2212017312002514",
		"DOI": "10.1016/j.protcy.2012.03.022",
		"ISSN": "2212-0173",
		"shortTitle": "Developing Social Networks Mashups",
		"author": [
			{
				"family": "Paredes-Valverde",
				"given": "Mario Andrés"
			},
			{
				"family": "Alor-Hernández",
				"given": "Giner"
			},
			{
				"family": "Rodr’guez-González",
				"given": "Alejandro"
			},
			{
				"family": "Hernández-Chan",
				"given": "Gandhi"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/QSAQAM4U",
		"type": "article-journal",
		"title": "Evaluating REST architectures—Approach, tooling and guidelines",
		"container-title": "Journal of Systems and Software",
		"page": "156–180",
		"volume": "112",
		"abstract": "Architectural decisions determine the ability of the implemented system to satisfy functional and quality attribute requirements. The Representational State Transfer (REST) architectural style has been extensively used recently for integrating services and applications. Its adoption to build SOA-based distributed systems brings several benefits, but also poses new challenges and risks. Particularly important among those risks are failures to effectively address quality attribute requirements such as security, reliability, and performance. A proved efficient technique to identify and help mitigate those risks is the architecture evaluation. In this paper we propose an approach, tooling, and guidelines to aid architecture evaluation activities in REST-based systems. These guidelines can be systematically used along with evaluation methods to reason about design considerations and tradeoffs. To demonstrate how the guidelines can help architecture evaluators, we present a proof of concept describing how to use the guidelines in an ATAM (Architecture Tradeoff Analysis Method) evaluation. We also present the results of a survey conducted with industry specialists who have performed architecture evaluations in real world REST-based systems in order to gauge the suitability and utility of the proposed guidelines. Finally, the paper describes a Web tool developed to facilitate the use of the evaluation guidelines.",
		"URL": "//www.sciencedirect.com/science/article/pii/S0164121215002150",
		"DOI": "10.1016/j.jss.2015.09.039",
		"ISSN": "0164-1212",
		"author": [
			{
				"family": "Costa",
				"given": "Bruno"
			},
			{
				"family": "Pires",
				"given": "Paulo F."
			},
			{
				"family": "Delicato",
				"given": "Flávia C."
			},
			{
				"family": "Merson",
				"given": "Paulo"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					2
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/NUP3IQHG",
		"type": "article-journal",
		"title": "Defining a call control interface for browser-based integrations using representational state transfer",
		"container-title": "Computer Communications",
		"page": "140–149",
		"volume": "34",
		"issue": "2",
		"abstract": "While integrating telephony call control signaling into a desktop application is not a new concept, the emergence of web browser-based applications drives the need for feature parity between desktop and browser-based telephony call control applications. Desktop call control applications typically have the advantage of being able to use local protocol stacks or API libraries. A browser-based application does not have the same capabilities by default, especially when running on a constrained device. Traditional telephony call control APIs and architectures do not currently lend themselves for use with web browser-based applications without requiring some form of download which is not desirable. Is it possible to design a call control interface that can be consumed in browser-based applications natively without requiring additional downloads? Representational State Transfer (REST) is a resource oriented architectural style which, when used with HTTP as a uniform interface offers the possibility to use an existing defined set of interfaces to manipulate state transitions for resources. We propose that the REST architectural style can be used with an identified interface design methodology to define an interface for telephony call control capable of being consumed by browser-based applications. Furthermore by utilizing existing industry standards as an example, we suggest that existing standards can be extended to support browser-based integrations using REST.",
		"URL": "//www.sciencedirect.com/science/article/pii/S0140366410001520",
		"DOI": "10.1016/j.comcom.2010.03.029",
		"ISSN": "0140-3664",
		"author": [
			{
				"family": "Griffin",
				"given": "Keith"
			},
			{
				"family": "Flanagan",
				"given": "Colin"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					2
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					25
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XNZ98PEU",
		"type": "article-journal",
		"title": "Fault-tolerant timestamp-based two-phase commit protocol for RESTful services",
		"container-title": "Softw. Pract. Exper.",
		"page": "1459–1488",
		"volume": "43",
		"issue": "12",
		"abstract": "Service-oriented architecture provides interoperability and weak coupling features for software development. Representational state transfer (REST) is an architectural style that has attracted attention in the SOA domain as it allows the development of Web services based on original principles of the World Wide Web. Unlike Web service specifications, which are based on Simple Object Access Protocol and Web Services Description Language, REST does not provide ‘official’ standards to address non-functional requirements of services, such as security, reliability, and transaction control. The timestamp-based two-phase commit protocol for RESTful service (TS2PC4RS) algorithm specifies concurrency control of RESTful services during a transaction. An extension of the TS2PC4RS specifies the concurrency control of the Web services considering the update operation to meet some business rules. However, neither algorithm addresses transaction control when failures occur. In long-term transactions, failures can occur and compromise the success of Web service applications. Two common failures traditionally considered in the analysis of protocols are host and connection failures. The aim of this paper is to address fault tolerance for TS2PC4RS and its extension. A fault-tolerant protocol based on timeout and log records is proposed. The fault-tolerant protocol provides support for the host and connection failures that may occur during a transaction execution. The fault-tolerant mechanisms are used to meet the application domain business rules that guide the behavior of RESTful services. We describe the protocol using scenarios when failures occur. Copyright © 2012 John Wiley & Sons, Ltd.",
		"URL": "http://onlinelibrary.wiley.com/doi/10.1002/spe.2151/abstract",
		"DOI": "10.1002/spe.2151",
		"ISSN": "1097-024X",
		"language": "en",
		"author": [
			{
				"family": "Maciel",
				"given": "Luiz Alexandre Hiane da Silva"
			},
			{
				"family": "Hirata",
				"given": "Celso Massaki"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					12
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					26
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/X6MIP7IE",
		"type": "article-journal",
		"title": "Improving the survivability of RESTful Web applications via declarative fault tolerance",
		"container-title": "Concurrency Computat.: Pract. Exper.",
		"page": "3108–3125",
		"volume": "27",
		"issue": "12",
		"abstract": "The popular Representational State Transfer (REST) architectural style for constructing web applications offers simplicity and scalability advantages. However, to improve the survivability of a RESTful application, programmers commonly find themselves writing vast amounts of nontrivial, ad hoc fault tolerance code. Network volatility, HTTP server errors, service outages—all require custom fault handling code, whose effective implementation requires considerable programming expertise and effort. These implementation impediments hinder the survivability of RESTful applications—without proper fault tolerance functionality, these applications are likely to crash when experiencing faults. To provide a systematic and principled approach to handling faults in RESTful applications, this article presents FT-REST—an architectural framework for specifying fault tolerance functionality declaratively and then translating these specifications into platform-specific code. FT-REST encapsulates fault tolerance strategies in XML-based specifications and compiles them to modules that reify the requisite fault tolerance. To validate our approach, we have applied FT-REST to enhance several realistic RESTful applications to withstand the faults described in their FT-REST specifications. As REST is said to apply verbs (HTTP commands) to nouns (URIs), FT-REST enhances this conceptual model with adverbs that render REST reliable via reusable and extensible fault tolerance. Copyright © 2014 John Wiley & Sons, Ltd.",
		"URL": "http://onlinelibrary.wiley.com/doi/10.1002/cpe.3197/abstract",
		"DOI": "10.1002/cpe.3197",
		"ISSN": "1532-0634",
		"language": "en",
		"author": [
			{
				"family": "Edstrom",
				"given": "John"
			},
			{
				"family": "Tilevich",
				"given": "Eli"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015",
					8
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					26
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/HPGMSKBK",
		"type": "article-journal",
		"title": "A performance analysis of RESTful Open API information system",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "59–64",
		"volume": "7709 LNCS",
		"abstract": "RESTful web services easily deploy their web service without physical server through HTTP protocol. This research is to provide a service evaluation, especially in the point of system performance for the Open APIs. Future information systems will be working on smart devices such as smartphones or smart devices. So, this research focuses onto the scalability of RESTful Open API web services by performance evaluation of the RESTful Open APIs. This is because we need to check whether the REST Open API has enough performance as a future mobile cloud platform. © 2012 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-35585-1_8",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Choi",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8N93GGU2",
		"type": "article-journal",
		"title": "RESTful conversation with RESTalk: The use case of doodle",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "583–587",
		"volume": "9671",
		"abstract": "With the availability of multiple Web services, offering identical or similar utilities, their ease of use has become a valuable success factor, highly influenced by API’s documentation quality. Tools are available for documenting the various technical details pertaining to the static structure of RESTful services. Additionally, we have identified interest in and usefulness of also depicting API’s behaviour, i.e., the viable RESTful conversations defined as multiple client-server interactions necessary to utilize certain service functionality. RESTalk, the REST domain specific language we have designed for modeling RESTful conversations, facilitates the conceptual modeling and visualisation of API’s behaviour. In this poster paper, we extend RESTalk with new language constructs and apply it on a real RESTful API, the Doodle API, which refers to RESTful conversations between multiple clients and one server. © Springer International Publishing Switzerland 2016.",
		"DOI": "10.1007/978-3-319-38791-8_53",
		"ISSN": "0302-9743",
		"shortTitle": "RESTful conversation with RESTalk",
		"language": "English",
		"author": [
			{
				"family": "Ivanchikj",
				"given": "A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RUD9S6IX",
		"type": "paper-conference",
		"title": "A RESTful implementation of the WS-Agreement specification",
		"page": "67–72",
		"abstract": "Representational State Transfer (REST) is an architectural style for distributed systems. RESTful web services have been gaining popularity in the last years. The Java API for RESTful Web Services (JAX-RS) has been specified as Java Specification Request 311 and is therefore an official part of Java; with the Jersey framework, a robust reference implementation of the specification exists. We examine in how far RESTful web services can fulfill tasks that have been defined as WS-* specifications. In particular, we investigate how a RESTful design and implementation of the WS-Agreement specification can be realized, presenting a light-weight approach to the creation and management of service level agreements. Copyright 2011 ACM.",
		"DOI": "10.1145/1967428.1967444",
		"ISBN": "978-1-60558-959-6",
		"language": "English",
		"author": [
			{
				"family": "Kübert",
				"given": "R."
			},
			{
				"family": "Katsaros",
				"given": "G."
			},
			{
				"family": "Wang",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/N4UCMII5",
		"type": "paper-conference",
		"title": "Towards a scalable and unified REST API for cloud data stores",
		"page": "723–734",
		"volume": "P-232",
		"abstract": "In the last years, many database-as-a-service (DBaaS) systems have started to offer their functionalities through REST APIs. Examples are record stores like DynamoDB and Azure Tables, object stores such as Amazon S3 as well as many NoSQL database systems, for instance Riak, CouchDB and ElasticSearch. Yet today, there has been no systematic effort on deriving a unified REST interface which takes into account the different data models, schemas, consistency concepts, transactions, access-control mechanisms and query languages to expose cloud data stores through a common interface without restricting their functionality. This work motivates the design of such a REST API as well as the challenges of providing it in an extensible, scalable and highly-available fashion. To this end, we propose the REST middleware ORESTES that consists of an independently scalable tier of HTTP servers that map the unified REST API to aggregate-oriented (NoSQL) data stores. It extracts a wide range of DBaaS concerns (e.g. schema management and access control) and provides them in a modular, database-independent fashion at the middleware-level. To tackle the latency problem of cloud-based web applications we introduce the Bloom filter-bounded staleness cache consistency algorithm. It leverages the global web caching infrastructure for geo-replication to allow consistent low latency reads. We furthermore show the first steps towards a Polyglot Persistence Mediator that exploits the decoupling of the REST API from the data store to route data and operations based on SLAs.",
		"ISBN": "978-3-88579-626-8",
		"language": "English",
		"author": [
			{
				"family": "Gessert",
				"given": "F."
			},
			{
				"family": "Friedrich",
				"given": "S."
			},
			{
				"family": "Wingerath",
				"given": "W."
			},
			{
				"family": "Schaarschmidt",
				"given": "M."
			},
			{
				"family": "Ritter",
				"given": "N."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/4N88J9RK",
		"type": "paper-conference",
		"title": "Towards an interpretation framework for assessing interface uniformity in REST",
		"page": "47–50",
		"abstract": "Interface uniformity is regarded as one of the most distinctive features of the REST architectural style among other networkbased styles, because of the specific set of restrictions it imposes on the behavior paradigms of interacting components. However, in practice conforming to the REST's uniform interface constraint in Web-based services most often proves to be a difficult task, as identified by a number of researchers and practitioners. This implementation and conformance difficulty can be partly attributed to the lack of a systematic conceptual framework that could be used to interpret abstract architectural restrictions of interface uniformity to practical design decisions and strategies being generalized as interface design criteria. These criteria could be then mapped to domain-specific techniques that provide the context for guiding and/or examining the level of uniformity of a REST-based API. In this paper, we discuss such a conceptual framework and a collection of criteria that can be used to assess in a practical way as to whether a specific REST-based API conforms to the uniform interface constraint. As a proof of concept, we evaluated the proposed framework and its associated methodology by applying it to a collection of indicative public Web service APIs. Copyright 2011 ACM.",
		"DOI": "10.1145/1967428.1967440",
		"ISBN": "978-1-60558-959-6",
		"language": "English",
		"author": [
			{
				"family": "Athanasopoulos",
				"given": "M."
			},
			{
				"family": "Kontogiannis",
				"given": "K."
			},
			{
				"family": "Brealey",
				"given": "C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/9S5SMEB6",
		"type": "article-journal",
		"title": "Extracting REST resource models from procedure-oriented service interfaces",
		"container-title": "Journal of Systems and Software",
		"page": "149–166",
		"volume": "100",
		"abstract": "During the past decade a number of procedure-oriented protocols and standards have emerged for making service-offering systems available on the Web. The WS-∗ stack of protocols is the most prevalent example. However, this procedure and message-oriented approach has not aligned with the true potential of the Web's own architectural principles, such as the uniform identification and manipulation of resources, caching, hypermedia, and layering. In this respect, Resource Oriented Architectures based on the REST architectural style, have been proposed as a possible alternative to the operation-based view of service offerings. To date, compiling a REST API for back-end procedure-oriented services is considered as a manual process that requires as input specialized models, such as, service requirements and behavioral models. In this paper, we propose a resource extraction method in which service descriptions are analyzed, using natural language processing techniques and graph transformations, in order to yield a collection of hierarchically organized elements forming REST resources that semantically correspond to the functionality offered by the service. The proposed approach has been applied as a proof of concept with positive results, for the extraction of resource models from a sizable number of procedure-oriented Web Service interfaces that have been obtained from an open service directory. © 2014 Elsevier Inc. All rights reserved.",
		"DOI": "10.1016/j.jss.2014.10.038",
		"author": [
			{
				"family": "Athanasopoulos",
				"given": "M."
			},
			{
				"family": "Kontogiannis",
				"given": "K."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/4EQP89XH",
		"type": "article-journal",
		"title": "Compatibility checking of REST API based on coloured petri net",
		"container-title": "Lecture Notes in Business Information Processing",
		"page": "25–43",
		"volume": "246",
		"abstract": "One of the underutilized advantages of REST API is extensibility. Extensibility allows a REST API to make certain changes to its resource representation, identification, interaction, and connection without breaking its clients. A client can cope with these changes in the REST API through hypertext-driven interactions - an iterative process in which the client can determine the resource identification based on its representation, utilize its identification to determine the interactions, and follow the interactions to determine its connections. However, our analysis reveals that there are limitations to the flexibility of the hypertext-driven navigation due to the dependency between these interaction layers in the REST API, and there is a critical need to determine if two REST APIs are compatible for the client. To address this issue, we describe a structured approach to REST client modelling that decomposes a REST client into two functional components: client oracle and client agent. From this client model, we derive a formal definition of compatibility based on the REST Chart representation of the REST API, and an efficient algorithm is developed to verify the compatibility between two REST Charts. A prototype system has been implemented, and the preliminary experimental results show that the approach is feasible and promising. © Springer International Publishing Switzerland 2016.",
		"DOI": "10.1007/978-3-319-30996-5_2",
		"ISSN": "1865-1348",
		"language": "English",
		"author": [
			{
				"family": "Li",
				"given": "L."
			},
			{
				"family": "Chou",
				"given": "W."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/KDR2HXKK",
		"type": "paper-conference",
		"title": "Towards conformance testing of REST-based Web Services",
		"page": "217–227",
		"abstract": "Despite the lack of standardisation for building REST-ful HTTP applications, the deployment of REST-based Web Services has attracted an increased interest. This gap causes, however, an ambiguous interpretation of REST and induces the design and implementation of REST-based systems following proprietary approaches instead of clear and agreed upon definitions. Issues arising from these shortcomings have an influence on service properties such as the loose coupling of REST-based services via a unitary service contract and the automatic generation of code. To overcome such limitations, at least two prerequisites are required: the availability of specifications for implementing REST-based services and auxiliaries for auditing the compliance of those services with such specifications. This paper introduces an approach for conformance testing of REST-based Web Services. This appears conflicting at the first glance, since there are no specifications available for implementing REST by, e.g., the prevalent technology set HTTP/URI to test against. Still, by providing a conformance test tool and leaning it on the current practice, the exploration of service properties is enabled. Moreover, the real demand for standardisation gets explorable by such an approach. First investigations conducted with the developed conformance test system targeting major Cloud-based storage services expose inconsistencies in many respects which emphasizes the necessity for further research and standardisation.",
		"ISBN": "978-989-758-106-9",
		"language": "English",
		"author": [
			{
				"family": "Iacono",
				"given": "L.L."
			},
			{
				"family": "Nguyen",
				"given": "H.V."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/DPBURQPK",
		"type": "paper-conference",
		"title": "Handling consistent web service recovery in a RESTful way",
		"abstract": "Over the past decade, REST has become the desired standard used for the design and development of highly scable web services. Reliability requirements of such service are more and more stringent. This paper represents our initial efforts towards the problem of increasing fault tolerance of RESTful services. We propose RESTful recovery consistency model ensuring that recovered processing state respects REST constrains. Next, we propose the recovery protocol that meet the proposed recovery consistency model requirements, and apply it in the existing ReServE service.",
		"DOI": "10.1145/2742854.2742893",
		"ISBN": "978-1-4503-3358-0",
		"language": "English",
		"author": [
			{
				"family": "Kobusińska",
				"given": "A."
			},
			{
				"family": "Hołenko",
				"given": "M."
			},
			{
				"family": "Zierhoffer",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2745HFJE",
		"type": "article-journal",
		"title": "On actors and the REST",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "144–157",
		"volume": "6189 LNCS",
		"abstract": "The prevalence of RESTful services requires that we pay closer attention to how the principles that underlay REST are realized in actual services being implemented. This is especially crucial as REST is being applied to problem domains that require complex operations such as transactions. In this paper we investigate the relationship between RESTful web services and the actor model of computation. We suggest that by formulating RESTful services as a network of actors we can achieve deeper understanding what it means for a service to be RESTful. © 2010 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-13911-6_10",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Kuuskeri",
				"given": "J."
			},
			{
				"family": "Turto",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/6SW2JEA3",
		"type": "paper-conference",
		"title": "An optimistic technique for transactions control using REST architectural style",
		"page": "664–669",
		"abstract": "SOA is a service oriented architecture that allows development of software with interoperability and weak coupling. Nowadays WS-* is the most used SOAP-based specification set for constructing web services. REST is an architectural style that permits the development of services in a simpler way and obeys the SOA's paradigm, however, it does not provide standardized support to address some nonfunctional requirements of services, for instance, security, reliability, transaction control. This article proposes a technique, based on REST, to support the web services transactional control implementation. The technique uses the optimistic method to control distributed systems transactions. An example of application was implemented to show its feasibility. Copyright 2009 ACM.",
		"DOI": "10.1145/1529282.1529419",
		"ISBN": "978-1-60558-166-8",
		"language": "English",
		"author": [
			{
				"family": "Da",
				"given": "Silva Maciel"
			},
			{
				"family": "Hirata",
				"given": "C.M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/655E927D",
		"type": "article-journal",
		"title": "Semantic cloud: Building dynamic mashup in cloud environment",
		"container-title": "International Journal of Information Technology and Web Engineering",
		"page": "20–35",
		"volume": "8",
		"issue": "4",
		"abstract": "Mashups allowed a significant advance in the automation of interactions between applications and Web resources. In particular, the combination of web Application Programming Interfaces (APIs) is seen as a strength, which can meet the complex needs by combining the functionality and data from multiple services within a single Mashup application. Automating the process of building Mashup based mainly on the Semantics Web APIs which facilitate to the developer their selection and matching. In this paper, we introduce reference architecture with six layers representing the main functional blocks for annotating, combining and deploying Web APIs in Cloud environment. We introduce Semantic Annotation for Web Application Description Language (SAWADL), an extension of the Web Application Description Language (WADL) that allows the semantization of the REST Web Service. The proposed architecture uses the Cloud Computing technology as a promising solution to increase the number of public API and therefore making the engineering process of Mashup applications more agile and more flexible. Copyright © 2013, IGI Global.",
		"DOI": "10.4018/ijitwe.2013100102",
		"ISSN": "1554-1045",
		"shortTitle": "Semantic cloud",
		"language": "English",
		"author": [
			{
				"family": "Malki",
				"given": "A."
			},
			{
				"family": "Benslimane",
				"given": "S.M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/EB9MTITF",
		"type": "paper-conference",
		"title": "Replacing legacy web services with RESTful services",
		"page": "27–30",
		"abstract": "In this paper, we describe issues encountered in designing and implementing a set of RESTful services to extend and replace web services that have been in commercial use since 1998. Applicability of REST to the service requirements, suitability of available tools, and interoperability between multiple clients and servers are discussed. © 2010 ACM.",
		"DOI": "10.1145/1798354.1798381",
		"ISBN": "978-1-60558-959-6",
		"language": "English",
		"author": [
			{
				"family": "Engelke",
				"given": "C."
			},
			{
				"family": "Fitzgerald",
				"given": "C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/KEFAV2EK",
		"type": "article-journal",
		"title": "Workflow engine supporting restful web services",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "377–385",
		"volume": "6591 LNAI",
		"issue": "PART 1",
		"abstract": "An efficient business process execution and management are crucial for using a Service Oriented Architectures (SOA). Despite there are many applications offering such a functionality for Big Web Services, there is a lack of easy-to-use and well defined tools supporting the alternative approach, called ROA and RESTful Web-Services. In this paper the business process engine implementing a declarative business process language supporting web services compatible with REST paradigm is discussed. © 2011 Springer Berlin Heidelberg.",
		"DOI": "10.1007/978-3-642-20039-7-38",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Brzeziński",
				"given": "J."
			},
			{
				"family": "Danilecki",
				"given": "A."
			},
			{
				"family": "Flotyński",
				"given": "J."
			},
			{
				"family": "Kobusińska",
				"given": "A."
			},
			{
				"family": "Stroiński",
				"given": "A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/28KBR783",
		"type": "paper-conference",
		"title": "REST-based metaweb services in mobile application frameworks",
		"page": "170–175",
		"abstract": "This paper describes how a multimodal dialogue application framework can be used to implement specific mobile applications and dynamic HTTP-based REST services. REST services are already publicly available and provide useful location-based information for the user on the go. We use a distributed, ontology-based dialogue system architecture where every major component can be run on a different host, thereby increasing the scalability of the overall system with a mobile user interface. The dialogue system provides customised access to the Google Maps Local Search and two REST services provided by GeoNames (i.e., the findNearbyWikipedia search and the findNearbyWeather search).© (2010) by International Academy, Research, and Industry Association (IARIA).",
		"ISBN": "978-1-61208-100-7",
		"language": "English",
		"author": [
			{
				"family": "Sonntag",
				"given": "D."
			},
			{
				"family": "Porta",
				"given": "D."
			},
			{
				"family": "Setz",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/I4V6BVJF",
		"type": "article-journal",
		"title": "Hypermedia-driven RESTful service composition",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "111–120",
		"volume": "6568 LNCS",
		"abstract": "Representational State Transfer (REST) services are gaining momentum as a lightweight approach for the provision of services on the Web. Unlike WSDL-based services, in REST the set of operations is reduced, standardized, with well known semantics, and changes the resource's state. Few attempts have been proposed to support composition models for REST, they are mainly operation-centric and fail to acknowledge the hypermedia nature of REST, that is, clients must inspect the served resource state and choose the link to follow from there. We explore RESTful service composition as it is driven by the hypermedia net that is dynamically created while a client interacts with a server resulting in a light-weight approach. We based our proposal on a hypermedia-centric REST service description, the Resource Linking Language (ReLL) and Petri Nets as a mechanism for describing the machine-client navigation. © 2011 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-19394-1_12",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Alarcon",
				"given": "R."
			},
			{
				"family": "Wilde",
				"given": "E."
			},
			{
				"family": "Bellido",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8DTJMKN3",
		"type": "article-journal",
		"title": "REST Web service description for graph-based service discovery",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "461–478",
		"volume": "9114",
		"abstract": "Unlike WSDL/SOAP based services, REST services lack a widely accepted service description since it increases the coupling between clients and servers, hampering service evolution. In practice, REST services are described through informal, ad-hoc and semistructured documents, often written in natural language, which worsens the level of coupling. Most of the few REST service descriptions currently proposed follow an operation-centric approach with unclear additional benefits for developers and consumers. We propose a service description model focused on hypermedia allowing the generation of a graph that captures state transitions in an activity layer; we also capture resource, transition, and response semantics in a semantic layer. Using graph queries we traverse the graph and facilitate service discovery and composition. The service model was implemented as Microdata-based annotations, and a JSON description. A prototype was developed using Neo4J, and a set of real Web APIs was chosen to illustrate our approach. © Springer International Publishing Switzerland 2015.",
		"DOI": "10.1007/978-3-319-19890-3_30",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Alarcon",
				"given": "R."
			},
			{
				"family": "Saffie",
				"given": "R."
			},
			{
				"family": "Bravo",
				"given": "N."
			},
			{
				"family": "Cabello",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/98E57DET",
		"type": "paper-conference",
		"title": "Microservices lightweight service descriptions for REST architectural style",
		"page": "576–579",
		"volume": "1",
		"abstract": "Current web has a vast number of applications available that offer users a wide domain of services. Most services, however, cannot be machine processed, which limits service composition for application and mashup development. Research on Semantic Web Services contributes to the improvement of interoperability and composition of applications and services. Many approaches cover service description by following paradigms such as Web Services and REST architectural style, allowing describing any kind of service for its use by an automatic agent, but sometimes using these solutions can be a time-consuming task. This paper introduces Microservices, a lightweight service classification framework for REST architectural style. Microservices do not attempt to describe every possible service, but to provide a way to describe a set of services in a simple way. Microservice descriptions consist of a set of terms that represent service features. After describing features semantically, microservices framework allows generating detailed service descriptions, which allows reusing common feature descriptions across different services. A use case that adapts heterogeneous search services to produce a standard interface using microservices is described.",
		"ISBN": "978-989-674-022-1",
		"language": "English",
		"author": [
			{
				"family": "Fernández-Villamor",
				"given": "J.I."
			},
			{
				"family": "Iglesias",
				"given": "C.Á."
			},
			{
				"family": "Garijo",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/ZH56RZDI",
		"type": "paper-conference",
		"title": "Towards a view-based process for designing and documenting RESTful service architectures",
		"volume": "07-11-September-2015",
		"abstract": "Representational State Transfer (REST) is an architectural style for service-based design. Regarded to be used in massively distributed and loosely coupled hypermedia systems, REST has been the de facto architecture style for REST-based web services (called RESTful services). Besides business functionality, RESTful services should address quality attribute requirements, which are commonly described in scenarios (textual descriptions of how to achieve such attribute in the system's context). However, to properly mapping scenarios into architectural elements is a non-Trivial task. Furthermore, architects often fail to document adequately the design decisions taken during such mapping. These issues can result in low-quality RESTful services. In this paper, we present a view-based process that provides mechanisms to represent quality attribute scenarios as concrete design decisions that can be later used in the design of RESTful service architectures. © 2015 ACM.",
		"DOI": "10.1145/2797433.2797485",
		"ISBN": "978-1-4503-3393-1",
		"language": "English",
		"author": [
			{
				"family": "Costa",
				"given": "B."
			},
			{
				"family": "Pires",
				"given": "P.F."
			},
			{
				"family": "Delicato",
				"given": "F.C."
			},
			{
				"family": "Oquendo",
				"given": "F."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VCV9QHAB",
		"type": "article-journal",
		"title": "Composition of linked data-based RESTful services",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "461–464",
		"volume": "7650 LNCS",
		"issue": "PART 2",
		"abstract": "We address the problem of developing a scaleable composition framework for Linked Data-based services, that retains the advantages of the loose coupling fostered by REST. © 2012 Springer-Verlag Berlin Heidelberg.",
		"DOI": "10.1007/978-3-642-35173-0-40",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Stadtmüller",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/MPGWDKM2",
		"type": "chapter",
		"title": "WSDARWIN: Studying the evolution of web service systems",
		"container-title": "Advanced Web Services",
		"page": "199–223",
		"abstract": "The service-oriented architecture paradigm prescribes the development of systems through the composition of services, i.e., network-accessible components, specified by (and invoked through) their interface descriptions. Systems thus developed need to be aware of changes in, and evolve with, their constituent services. Therefore, the accurate recognition of changes in the specification of a service is an essential functionality in supporting the software lifecycle of service-oriented systems. In this chapter, we extend our previous empirical study on the evolution of web-service interfaces and we classify the identified changes according to their impact on client applications. To better understand the evolution of web services, and, more importantly, to facilitate the systematic and automatic maintenance of web-service systems, we introduce WSDARWIN, a specialized differencing method for web services. Finally, we discuss the application of such a comparison method on operation- (WSDL) and resource-centric (REST) web services. © Springer Science+Business Media New York 2014. All rights are reserved.",
		"ISBN": "978-1-4614-7535-4",
		"shortTitle": "WSDARWIN",
		"language": "English",
		"author": [
			{
				"family": "Fokaefs",
				"given": "M."
			},
			{
				"family": "Stroulia",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/NPZFFWBN",
		"type": "manuscript",
		"title": "Visual modeling of RESTful conversations with RESTalk",
		"genre": "Article in Press",
		"abstract": "The cost savings introduced by Web services through code reuse and integration opportunities have motivated many businesses to develop Web APIs, with ever increasing numbers opting for the REST architectural style. RESTful Web APIs are decomposed in multiple resources, which the client can manipulate through HTTP interactions with well-defined semantics. Getting the resource in the desired state might require multiple client–server interactions, what we define as a RESTful conversation. RESTful conversations are dynamically guided by hypermedia controls, such as links. Thus, when deciding whether and how to use a given RESTful service, the client might not be aware of all the interactions which are necessary to achieve its goal. This is because existing documentation of RESTful APIs describes the static structure of the interface, exposing low-level HTTP details, while little attention has been paid to conceptual, high-level, modeling of the dynamics of RESTful conversations. Low-level HTTP details can be abstracted from during the design phase of the API, or when deciding which API to use. We argue that, in these situations, visual models of the required client–server interactions might increase developers’ efficiency and facilitate their understanding. Thus, to capture all possible interaction sequences in a given RESTful conversation, we propose RESTalk, an extension to the BPMN Choreography diagrams to render them more concise and yet sufficiently expressive in the specific REST domain. We also report on the results obtained from an exploratory survey we have conducted to assess the maturity of the field for a domain-specific language and to obtain feedback for future improvements of RESTalk. © 2016 Springer-Verlag Berlin Heidelberg",
		"language": "English",
		"author": [
			{
				"family": "Ivanchikj",
				"given": "A."
			},
			{
				"family": "Pautasso",
				"given": "C."
			},
			{
				"family": "Schreier",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2GD5PWPR",
		"type": "paper-conference",
		"title": "Towards restful web service composition for healthcare domain",
		"page": "845–848",
		"abstract": "Service Oriented Architecture (SOA) has been widely adopted by industries due to its ability to provide increased inter operability among heterogeneous systems. SOA is realized through web services which can be either based on the style of Remote Procedure call(RPC) and SOAP protocol or on the Representational State Transfer(REST) style and HTTP. RESTful web services are increasingly becoming popular in the industry because of their simplicity, uniform interface, statelessness and cacheability benefits. The ability to efficiently select and integrate appropriate heterogeneous services available on the web dynamically at runtime is essential in the development of the applications based on web services. Whenever a single web service cannot satisfy the functionality required by the user, there should be a possibility to combine several existing services together in order to fulfill the request. This need has triggered a considerable number of research efforts on the composition of web services. Although several works have focused on the composition of SOAP based web services, there has not been adequate effort towards the composition of RESTful services. However, due to the above- mentioned advantages offered by the RESTful web services, it will be beneficial to design an application as a composition of such RESTful services. Towards this objective, this paper investigates two different approaches for composing the REStful web services specifically designed for health care domain, one using the J opera tool and another using hyper media. © 2015 IEEE.",
		"DOI": "10.1109/ICCICCT.2015.7475397",
		"ISBN": "978-1-4673-9825-1",
		"language": "English",
		"author": [
			{
				"family": "Sumithra",
				"given": "R.P."
			},
			{
				"family": "Sarath",
				"given": "R."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/Q4JP47JK",
		"type": "article-journal",
		"title": "A novel way of invoking web services and RESTful web services using aspect oriented programming",
		"container-title": "Communications in Computer and Information Science",
		"page": "665–674",
		"volume": "197 CCIS",
		"abstract": "The need for adaptability in software is growing, driven in part by the emergence of autonomic computing. In many cases, it is desirable to enhance existing programs with adaptive behavior, enabling them to execute effectively in dynamic environments. Existing web service invocation and adaptation mechanisms are limited only to the scope of web service choreography in terms of web service selection. Such a scope hardly leaves ground for a participating service in a choreographed flow to re-adjust itself in terms of changed non functional expectations. In this paper we used Aspect oriented programming (AOP) to invoke Web Services (WS) and Representational State Transfer (REST) web services and to enable dynamic adaptation in existing programs. We propose an approach to implement dynamic adaptability especially in Aspect weaving at the time invoking web services and REST web service. We have used AspectJ; Java based language to create aspects in Eclipse supported framework. © 2011 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-22543-7_68",
		"ISSN": "1865-0929",
		"language": "English",
		"author": [
			{
				"family": "Mannava",
				"given": "V."
			},
			{
				"family": "Ramesh",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/JSTUG86E",
		"type": "article-journal",
		"title": "EXPRESS: Expressing restful Semantic Services using domain ontologies",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "941–948",
		"volume": "5823 LNCS",
		"abstract": "Existing approaches to Semantic Web Services (SWS) require a domain ontology and a semantic description of the service. In the case of light-weight SWS approaches, such as SAWSDL, service description is achieved by semantically annotating existing web service interfaces. Other approaches such as OWL-S and WSMO describe services in a separate ontology. So, existing approaches separate service description from domain description, therefore increasing design efforts. We propose EXPRESS a lightweight approach to SWS that requires the domain ontology definition only. Its simplicity stems from the similarities between REST and the Semantic Web such as resource realization, self describing representations, and uniform interfaces. The semantics of a service is elicited from a resource's semantic description in the domain ontology and the semantics of the uniform interface, hence eliminating the need for ontologically describing services. We provide an example that illustrates EXPRESS and then discuss how it compares to SA-REST and WSMO. © Springer-Verlag Berlin Heidelberg 2009.",
		"DOI": "10.1007/978-3-642-04930-9_59",
		"ISSN": "0302-9743",
		"shortTitle": "EXPRESS",
		"language": "English",
		"author": [
			{
				"family": "Alowisheq",
				"given": "A."
			},
			{
				"family": "Millard",
				"given": "D.E."
			},
			{
				"family": "Tiropanis",
				"given": "T."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/X8FZ2QQH",
		"type": "paper-conference",
		"title": "Modeling RESTful applications",
		"page": "15–21",
		"abstract": "Today, Representational State Transfer (REST) is becoming more and more important. RESTful web services are an alternative to Remote Procedure Call technologies like SOAP and WS-* services. There are many frameworks for implementing RESTful applications, but there is still a lack of support for the early phases of the development process, particularly analysis and design. For building formal models of RESTful applications an appropriate metamodel is needed. After analyzing existing approaches and techniques a first version of such a REST metamodel is presented and used to model an example application. Beside enabling modeling, such a metamodel offers a vocabulary for REST in practice and the basis for model driven development. Copyright 2011 ACM.",
		"DOI": "10.1145/1967428.1967434",
		"ISBN": "978-1-60558-959-6",
		"language": "English",
		"author": [
			{
				"family": "Schreier",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8RVF4CSZ",
		"type": "paper-conference",
		"title": "Adaptive matchmaking for RESTful services based on hRESTS and MicroWSMO",
		"page": "10–17",
		"abstract": "Matchmaking - i.e., the task of finding functionally suitable service offers based on a service request - has only been addressed in the context of WS-*Web services. However, RESTful services are gaining increasing attraction and have been adopted by major companies, thus increasing the need for suitable matchmaking solutions. This paper introduces XAM4SWS, an adaptive matchmaker for semantic Web services that supports multiple service description formats, including hRESTS and MicroWSMO for RESTful services. XAM4SWS adapts existing methodologies from WS-*matchmaking and extends them through the inclusion of REST-specific service features. A prototypical implementation of the matchmaker is evaluated with respect to multiple information retrieval metrics using an adapted semantic Web service test collection. © 2010 ACM.",
		"DOI": "10.1145/1883133.1883136",
		"ISBN": "978-1-4503-0238-8",
		"language": "English",
		"author": [
			{
				"family": "Lampe",
				"given": "U."
			},
			{
				"family": "Schulte",
				"given": "S."
			},
			{
				"family": "Siebenhaar",
				"given": "M."
			},
			{
				"family": "Schuller",
				"given": "D."
			},
			{
				"family": "Steinmetz",
				"given": "R."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/49RU2444",
		"type": "article-journal",
		"title": "Scalable and mashable location-oriented web services",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "307–321",
		"volume": "6189 LNCS",
		"abstract": "Web-based access to services increasingly moves to location-oriented scenarios, with either the client being mobile and requesting relevant information for the current location, or with a mobile or stationary client accessing a service which provides access to location-based information. The Web currently has no specific support for this kind of service pattern, and many scenarios use proprietary solutions which result in vertical designs with little possibility to share and mix information across various services. This paper describes an architecture for providing access to location-oriented services which is based on the principles of Representational State Transfer (REST) and uses a tiling scheme to allow clients to uniformly access location-oriented services. Based on these Tiled Feeds, lightweight access to location-oriented services can be implemented in a uniform and scalable way, and by using feeds, established patterns of information aggregation, filtering, and republishing can be easily applied. © 2010 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-13911-6_21",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Liu",
				"given": "Y."
			},
			{
				"family": "Wilde",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/INV28XNE",
		"type": "paper-conference",
		"title": "SWS editor: A service-based tool for the semantic annotation of restful web services",
		"page": "87–94",
		"abstract": "Research conducted in the web services area has enabled organizations to integrate their applications, which has enabled the automation of business processes in several areas. However, it is necessary to provide solutions that favor the selection and integration of these web services at runtime effectively and efficiently. In the current web architecture many of these web services are designed according to the REST architectural style, but such solutions are insufficient and inefficient. This paper presents a service-based tool which makes use of ontologies to perform the semantic annotation of restful web services syntactically described in WSDL documents, enabling the invocation, discovery and composition tasks of these web services to occur automatically. An example of use is discussed, illustrating the use of semantic annotation of a restful web service and a SPARQL query, exemplifying its recovery in a semantic repository. © 2015.",
		"shortTitle": "SWS editor",
		"author": [
			{
				"family": "De",
				"given": "Santana"
			},
			{
				"family": "Da",
				"given": "Silva"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/QVPBNDEP",
		"type": "paper-conference",
		"title": "A model driven approach for the development of semantic RESTful Web services",
		"page": "290–299",
		"abstract": "Nowadays, Web services and others SOA-based applications have attracted more attention in the software industry. The RESTful Web Service becomes an important service architectural style due to its simplicity, heterogeneity and web-based format. One of the principal advantages of the REST architecture is the interoperability. However, different implementation languages and representation data formats can break interoperability, especially on semantic description of these services. In this paper, we propose the use of a model driven approach for the development of semantic RESTful Web services. Raising the development abstraction level, providing language-independent metamodels of services and semantic resources and by model transformations it is possible to develop interoperable complex services. © 2013 ACM.",
		"DOI": "10.1145/2539150.2539193",
		"ISBN": "978-1-4503-2113-6",
		"language": "English",
		"author": [
			{
				"family": "Tavares",
				"given": "N.A.C."
			},
			{
				"family": "Vale",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/27URBFKS",
		"type": "article-journal",
		"title": "SOA, web services, and RESTful systems",
		"container-title": "Dr. Dobb's Journal",
		"page": "32–37",
		"volume": "32",
		"issue": "7",
		"abstract": "The functionality of representational state transfer (REST) architecture is discussed. The REST architecture is a platform-independent architecture in which loosely coupled components communicate via interfaces over standard web protocols such as HTTP. Software architecture, hardware, and data-centric designs maximize system efficiency, scalability, and network throughput. The REST architecture is comprised of the REST server and the REST Worker. The architecture's REST server, the JAVA Servlet, maps HTTP URL queries to application code. The Rest Worker generates a response for different request of the REST framework. Clients contain optional server caches for efficiency. The RESTWorker interface defines onRequest for arrival of HTTP request for the worker object and cacheReference to determine it the reference to this worker object should be cached. The REST reduce the problem of restrictions on maximum clients or maximum services per client.",
		"ISSN": "1044-789X",
		"language": "English",
		"issued": {
			"date-parts": [
				[
					"2007"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/V8PP96WB",
		"type": "article-journal",
		"title": "A timestamp-based two phase commit protocol for web services using rest architectural style",
		"container-title": "Journal of Web Engineering",
		"page": "266–282",
		"volume": "9",
		"issue": "3",
		"abstract": "Service Oriented Architecture allows development of software with requirements of interoperability and weak coupling. Nowadays WS-* is the most used SOAP-based specification set for constructing web services. REST is an architectural style that permits the development of services in a simpler way than WS-* and obeys the SOA's paradigm, however, it does not provide standardized support to address some non-functional requirements of services, such as, security, reliability, and transaction control. This article proposes a REST-based technique to support the web services transactional control implementation. The technique uses the timestamp method and two phase commit protocol to control distributed systems transactions. An example of application using the technique is implemented to show its feasibility. © Rinton Press.",
		"ISSN": "1540-9589",
		"language": "English",
		"author": [
			{
				"family": "Maciel",
				"given": "L.A.H.S."
			},
			{
				"family": "Hirata",
				"given": "C.M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/M4TQWHAZ",
		"type": "paper-conference",
		"title": "A framework for self-descriptive RESTful services",
		"page": "1407–1414",
		"abstract": "REST principles define services as resources that can be manipulated by a set of well-known methods. The same approach is suitable to define service descriptions as resources. In this paper, we try to unify the two concepts (services and their descriptions) by proposing a set of best practices to build self-descriptive RESTful services accessible by both humans and machines. Moreover, to make those practices usable with little manual effort, we provide a software framework that extracts compliant descriptions from documents published on the Web, and makes them available to clients as resources.",
		"ISBN": "978-1-4503-2038-2",
		"language": "English",
		"author": [
			{
				"family": "Panziera",
				"given": "L."
			},
			{
				"family": "De",
				"given": "Paoli"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/3JWMPWUJ",
		"type": "paper-conference",
		"title": "Modeling a composite RESTful web service with UML",
		"page": "253–260",
		"abstract": "The process of web service composition involves different partner web services that are published over the internet. The Representational-State Transfer (REST) web services adopt different architectural style compared to Remote Procedure Call (RPC) web services. In this paper, we address these differences in the context of web service compositions and motivate the need for new designing techniques that lead to RESTful interfaces. We provide a UML based modeling approach for the composition of RESTful web services that models the composition for its static and behavioral features. These models provide RESTful compositions by construction, serve as a part of specification document, have mapping to several web implementation languages and can also be used to validate a RESTful composition. We illustrate the applicability of the approach with a sample Hotel and Flight booking RESTful composite web service. © 2010 ACM.",
		"DOI": "10.1145/1842752.1842801",
		"ISBN": "978-1-4503-0179-4",
		"language": "English",
		"author": [
			{
				"family": "Rauf",
				"given": "I."
			},
			{
				"family": "Ruokonen",
				"given": "A."
			},
			{
				"family": "Systa",
				"given": "T."
			},
			{
				"family": "Porres",
				"given": "I."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/U5RGI5TD",
		"type": "paper-conference",
		"title": "Extending timestamp-based two phase commit protocol for RESTful services to meet business rules",
		"page": "778–785",
		"abstract": "Service Oriented Architecture allows development of software with requirements of interoperability and weak coupling. Nowadays, REST is an architectural style that has been gaining attention in the SOA domain. REST allows the development of web services based on concepts simpler than WS-*, however, REST, as an architectural style, does not provide \"official\" standards to address some nonfunctional requirements of services, such as, security, reliability, and transaction control. The Timestamp-based Two Phase Commit Protocol for RESTful Services (TS2PC4RS) algorithm proposes a REST-based technique to support the web services transactional control implementation. This paper proposes to extend the TS2PC4RS algorithm to improve the satisfaction of business rules. The goal is met in the way the clients can update their prewrites on the ongoing transactions, so that the clients do not need to start a new transaction in order to implement the desired updates. The update of prewrites takes into account the application domain business rules which guide the RESTful services behavior. Thus the business rules are also considered in the algorithm extension. An example was used to describe the TS2PC4RS extension for updates. © 2011 ACM.",
		"DOI": "10.1145/1982185.1982354",
		"ISBN": "978-1-4503-0113-8",
		"language": "English",
		"author": [
			{
				"family": "Da",
				"given": "Silva Maciel"
			},
			{
				"family": "Hirata",
				"given": "C.M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/3QWPXRZE",
		"type": "article-journal",
		"title": "Towards a Process Calculus for Rest: Current State of the Art",
		"container-title": "Foundations of Computing and Decision Sciences",
		"page": "237–265",
		"volume": "40",
		"issue": "4",
		"abstract": "SOA is a popular paradigm for building distributed systems that has gained a great recognition over past years. There are two main approaches to implementing SOA: SOAP-based and RESTful Web services. In order to address problems of modeling and verification of Web services, several process calculi have been proposed for SOAP-based Web services but none for the RESTful Web services based systems. This article is a comparative survey on existing process calculi for SOA systems, also the existing attempts to formalize REST systems are discussed. The aim of the article is to see how process calculi for SOAP-based systems deal with different aspects of their modeling domain, and whether their approaches can be used to model RESTful and ROA systems. Finally, basing on the survey, requirements for a new process calculus specific for REST are defined. © by Jerzy Brzeziński 2015.",
		"DOI": "10.1515/fcds-2015-0015",
		"ISSN": "0867-6356",
		"shortTitle": "Towards a Process Calculus for Rest",
		"language": "English",
		"author": [
			{
				"family": "Dwornikowski",
				"given": "D."
			},
			{
				"family": "Stroiński",
				"given": "A."
			},
			{
				"family": "Brzeziński",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/KWS6B3FG",
		"type": "paper-conference",
		"title": "SAPS: Semantic AtomPub-based services",
		"page": "382–387",
		"abstract": "The utopian promise of a uniform service landscape in the form of SOAP, WSDL, and UDDI made by service-oriented architectures (SOA) built on Web services has proven elusive. Instead more and more prominent Web service providers opted to expose their services based on the REST architectural style. Nevertheless there are still problems on formal describing, finding, and orchestrating Restful services. While there are already a number of different approaches, none so far has managed to break out of its academic confines. Thus, we propose a novel approach to build Semantic Restful Services based on proven technologies. The combination of those proven technologies leads to scalable and loosely coupled systems and has the additional advantage, that developers are already familiar with its functioning. © 2011 IEEE.",
		"DOI": "10.1109/SAINT.2011.73",
		"ISBN": "978-0-7695-4423-6",
		"shortTitle": "SAPS",
		"language": "English",
		"author": [
			{
				"family": "Lanthaler",
				"given": "M."
			},
			{
				"family": "Gütl",
				"given": "C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/E9PCAIQD",
		"type": "article-journal",
		"title": "Bridging the semantic Web and Web 2.0 with Representational State Transfer (REST)",
		"container-title": "Web Semantics",
		"page": "61–69",
		"volume": "6",
		"issue": "1",
		"abstract": "Semantic Web technologies must integrate with Web 2.0 services for both to leverage each others strengths. We argue that the REST-based design methodologies [R.T. Fielding, R.N. Taylor, Principled design of the modern web architecture, ACM Trans. Internet Technol. (TOIT) 2 (2) (2002) 115-150] of the web present the ideal mechanism through which to align the publication of semantic data with the existing web architecture. We present the design and implementation of two solutions that combine REST-based design and RDF [D. Beckett (Ed.), RDF/XML Syntax Specification (Revised), W3C Recommendation, February 10, 2004] data access: one solution for integrating existing web services and one server-side solution for creating RDF REST services. Both of these solutions enable SPARQL [E. Prud'hommeaux, A. Seaborne (Eds.), SPARQL Query Language for RDF, W3C Working Draft, March 26, 2007] to be a unifying data access layer for aligning the Semantic Web and Web 2.0. © 2007 Elsevier B.V. All rights reserved.",
		"DOI": "10.1016/j.websem.2007.11.002",
		"ISSN": "1570-8268",
		"language": "English",
		"author": [
			{
				"family": "Battle",
				"given": "R."
			},
			{
				"family": "Benson",
				"given": "E."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/UQR62GEI",
		"type": "article-journal",
		"title": "Replication infrastructure for RESTful web services",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "28–37",
		"volume": "7135 LNCS",
		"abstract": "This paper describes a proposal for replication of RESTful web services. It focuses on the exploitation of specific features of RESTful web services in the context of replication. The features imposed by the REST architectural style that are crucial to replication include: resource orientation, explicit resource identification, and fixed interface with well understood semantics of operations. We propose a replication infrastructure for RESTful web services in the form of interceptors between consumers and providers. Interceptors in the case of HTTP protocol take the form of proxy servers. The concept has been materialized in a prototype implementation. © 2012 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-29280-4_4",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Bazydło",
				"given": "M."
			},
			{
				"family": "Francuzik",
				"given": "S."
			},
			{
				"family": "Sobaniec",
				"given": "C."
			},
			{
				"family": "Wawrzyniak",
				"given": "D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/BRWKXBJK",
		"type": "article-journal",
		"title": "SOA-readiness of REST",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "81–92",
		"volume": "8745 LNCS",
		"abstract": "SOA is a core concept for designing distributed applications based on the abstraction of software services. The main strength lies in the ability to discover services and loosely-couple them with service consumers across platform-boundaries. The evolved service protocol SOAP and its accompanying standards provide a stable, rich and wide-spread technology stack for implementing SOA-based systems. As an alternative approach to design and implement distributed systems based on services, the architectural style REST gains traction, due to its more light-weight and data format independent nature. Whether REST is also suited for acting as a basis for implementing SOA-based systems is still an open issue, however. This paper focuses on this question and provides an analysis on the SOA-readiness of REST. Both, a theoretical analysis and an empirical study of REST frameworks have been conducted in order to obtain a comprehensive understanding on this matter. The results show a lack of core SOA principles mainly related to the discoverability and the loose coupling of services. © 2014 International Federation for Information Processing.",
		"DOI": "10.1007/978-3-662-44879-3_6",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Gorski",
				"given": "P.L."
			},
			{
				"family": "Lo",
				"given": "Iacono"
			},
			{
				"family": "Nguyen",
				"given": "H.V."
			},
			{
				"family": "Torkian",
				"given": "D.B."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/T2NTPW2W",
		"type": "article-journal",
		"title": "RESTful transactions supported by the isolation theorems",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "394–409",
		"volume": "5648 LNCS",
		"abstract": "With REST becoming the dominant architectural paradigm for web services in distributed systems, more and more use cases are applied to it, including use cases that require transactional guarantees. We propose a RESTful transaction model that satisfies both the constraints of transactions and those of the REST architectural style. We then apply the isolation theorems to prove the robustness of its properties on a formal level. © 2009 Springer Berlin Heidelberg.",
		"DOI": "10.1007/978-3-642-02818-2_32",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Razavi",
				"given": "A."
			},
			{
				"family": "Marinos",
				"given": "A."
			},
			{
				"family": "Moschoyiannis",
				"given": "S."
			},
			{
				"family": "Krause",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VTPFCRGP",
		"type": "article-journal",
		"title": "A linear logic approach to the composition of RESTful web services",
		"container-title": "International Journal of Web Engineering and Technology",
		"page": "245–271",
		"volume": "10",
		"issue": "3",
		"abstract": "RESTful web services, which are declarative, lightweight and easy to access, are already widely used for exposing services on the internet and have attracted increasing interest from industry. The rising number of services being implemented and made available on the web is creating a demand for modelling techniques that can abstract REST design from the implementation in order to better specify, analyse and implement large-scale RESTful web systems. It can also help by providing suitable RESTful web service composition methods which can reduce costs by efficiently re-using the large number of services that are already available and by exploiting existing services for complex business purposes. This paper introduces a formal model of RESTful web services in linear logic and proposes a formal method approach for RESTful web service composition based on planning using linear logic via theorem proving. This is a two-stage planning method that finds resources for the composition at both the abstract resource and the service operation levels. It greatly improves the searching efficiency and guarantees the correctness and completeness of the service composition process. The paper demonstrates a further validation of the planning method through its implementation in the interactive Coq logic proof assistant. Copyright © 2015 Inderscience Enterprises Ltd.",
		"DOI": "10.1504/IJWET.2015.072348",
		"ISSN": "1476-1289",
		"language": "English",
		"author": [
			{
				"family": "Zhao",
				"given": "X."
			},
			{
				"family": "Liu",
				"given": "E."
			},
			{
				"family": "Yu",
				"given": "H.Q."
			},
			{
				"family": "Clapworthy",
				"given": "G.J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/85V8I7FZ",
		"type": "article-journal",
		"title": "Semi-automatic derivation of RESTful interactions from choreography diagrams",
		"container-title": "Lecture Notes in Business Information Processing",
		"page": "141–156",
		"volume": "248",
		"abstract": "Enterprises reach out for collaborations with other organizations in order to offer complex products and services to the market. Such collaboration and coordination between different organizations, for a good share, is facilitated by information technology. The BPMN choreography diagram is a modeling language for specifying the exchange of information and services between different organizations at the business level. Recently, there is a surging use of the REST architectural style for the provisioning of services on the Web, but no systematic engineering approach to design their collaboration. In this paper, we address this gap by defining a semi-automatic method for the derivation of RESTful interactions from choreography diagrams. The method is based on natural language analysis techniques to derive interactions from the textual information in choreography diagrams. The proposed method is evaluated in terms of effectiveness and considered to be useful by REST developers. © Springer International Publishing Switzerland 2016.",
		"DOI": "10.1007/978-3-319-39429-9_10",
		"ISSN": "1865-1348",
		"language": "English",
		"author": [
			{
				"family": "Nikaj",
				"given": "A."
			},
			{
				"family": "Pittke",
				"given": "F."
			},
			{
				"family": "Weske",
				"given": "M."
			},
			{
				"family": "Mendling",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/SUAQ838Q",
		"type": "article-journal",
		"title": "Personal-hosting RESTful web services for social network based recommendation",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "661–668",
		"volume": "7084 LNCS",
		"abstract": "Recommender systems have been widely used in information filtering. However the existing recommendation methods do not work effectively in the situations when a group of people want to share information and make recommendations within a social network. In this paper we propose a personal-hosting web services architecture ph-REST for social network based recommendation, in which every user is represented by a dedicated RESTful web services engine that collaborates with others over a social structure formed by co-peers with common interests. The proposed architecture explores the potential of applying service and Cloud computing to personal and social information sharing and assimilation. © 2011 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-25535-9_53",
		"ISSN": "0302-9743",
		"language": "English",
		"author": [
			{
				"family": "Zhong",
				"given": "Y."
			},
			{
				"family": "Zhao",
				"given": "W."
			},
			{
				"family": "Yang",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/T6PTGUCK",
		"type": "article-journal",
		"title": "Towards the web of models: A rule-driven RESTful architecture for distributed systems",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "251–258",
		"volume": "6403 LNCS",
		"abstract": "Competing visions have been jostling to define the long-term future of the Web: WS-*Web Services, the Semantic Web, and RESTful Web Services. This paper presents the initial steps towards a Rule-driven, REST-based architecture for the Web that can enable use cases that the Semantic Web and WS-*communities require. The key enabling ingredient is the use of SBVR models as a media type for resource description that allows models to be exposed and consumed. With formal description of data, advanced scenarios such as inference, service composition, and transactions are feasible within an architecture that is backwards-compatible with today's Web. © 2010 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-16289-3-21",
		"ISSN": "0302-9743",
		"shortTitle": "Towards the web of models",
		"language": "English",
		"author": [
			{
				"family": "Marinos",
				"given": "A."
			},
			{
				"family": "Krause",
				"given": "P."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/DJQHGXWU",
		"type": "article-journal",
		"title": "Goal-based constraint driven dynamic RESTful web service composition using AI techniques",
		"container-title": "Advances in Intelligent Systems and Computing",
		"page": "745–754",
		"volume": "408",
		"abstract": "SOAP and REST are two architectural styles to develop web service where SOAP follows operation centric and REST follows resource centric approach. Objective of dynamic web service modeling is to compose existing web services published on internet and generate new value-added service to satisfy client request; and it receives great response from many researchers. Even though widespread adoption of web service, there are some situation where we need automatic composition of existing web services from service repository and generate workflow automatically to fulfill client objective. After studying many research papers we find that Automatic RESTful Web Service Composition is still unexplored as compare to SOAP/WSDL-based web service. In this research paper, we proposed goal based constraint-driven internal web service composition and automatic workflow (GCDIWBC) algorithm Using AI planning which generates new value-added service by considering nested automatic service composition and generate workflow also. We also considered case where one automatic web service composition can call other automatic web service composition internally in the composition and generate workflow dynamically which will be run on workflow execution engine like WS-BPEL or WSMO. In other words service dynamically generated by GCDIWBC can nested to other generated service by other. GCDIWBC has implemented using prototype of travel scheduling scenario and performance evaluation with RESTful and SOAP/WSDL web services using state-of-the-art JSHON2 AI planner. Result shows that proposed algorithm with RESTful web service using JSHON2 outperforms SOAP/WSDL standard both in its response time and scalability. © Springer Science+Business Media Singapore 2016.",
		"DOI": "10.1007/978-981-10-0129-1_77",
		"ISSN": "2194-5357",
		"language": "English",
		"author": [
			{
				"family": "Rathod",
				"given": "D."
			},
			{
				"family": "Parikh",
				"given": "S."
			},
			{
				"family": "Dahiya",
				"given": "M.S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VSZ2PSKF",
		"type": "paper-conference",
		"title": "Seven challenges for RESTful transaction models",
		"page": "949–952",
		"abstract": "The REpresentational State Transfer (REST) architectural style describes the design principles that made theWorldWideWeb scalable and the same principles can be applied in enterprise context to do loosely coupled and scalable application integration. In recent years, RESTful services are gaining traction in the industry and are commonly used as a simpler alternative to SOAP Web Services. However, one of the main drawbacks of RESTful services is the lack of standard mechanisms to support advanced quality-ofservice requirements that are common to enterprises. Transaction processing is one of the essential features of enterprise information systems and several transaction models have been proposed in the past years to fulfill the gap of transaction processing in RESTful services. The goal of this paper is to analyze the state-of-the-art RESTful transaction models and identify the current challenges. © Copyright 2014 by the International World Wide Web Conferences Steering Committee.",
		"DOI": "10.1145/2567948.2579218",
		"ISBN": "978-1-4503-2745-9",
		"language": "English",
		"author": [
			{
				"family": "Mihindukulasooriya",
				"given": "N."
			},
			{
				"family": "Esteban-Gutiérrez",
				"given": "M."
			},
			{
				"family": "García-Castro",
				"given": "R."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/PH5FA6B6",
		"type": "paper-conference",
		"title": "A novel approach to mapping Web Services to rest",
		"page": "220–228",
		"abstract": "Web Services are defined by the W3C as \"a software system designed to support interoperable machine to machine interaction over a network.\" WS- * and Plain Old XML (POX) are popular approaches to Web Services' implementation. Both approaches can use HyperText Transfer Protocol (HTTP) for transferring their messages and markup their RPC (Remote Procedure Call) based payloads with eXtensible Markup Language (XML). Representational State Transfer (REST) is an alternative approach that is gaining in popularity. We present the issues of XML-RPC based Web Services (XML verbosity and message opacity) and why a RESTful approach solves these issues. We present results which show the improved performance. We present a framework that translates request messages from XML-RPC to RESTful format. This framework is ideally suited to enable enterprises to gradually transition from XML-RPC to RESTful Web Services.",
		"ISBN": "978-0-946881-65-9",
		"language": "English",
		"author": [
			{
				"family": "Kennedy",
				"given": "S."
			},
			{
				"family": "Molloy",
				"given": "O."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GTFEMDSV",
		"type": "article-journal",
		"title": "An integrated approach for designing and validating REST web service compositions",
		"container-title": "WEBIST 2014 - Proceedings of the 10th International Conference on Web Information Systems and Technologies",
		"page": "104–115",
		"volume": "1",
		"abstract": "We present an integrated approach to design and validate RESTful composite web services. We use the Unified Modeling Language (UML) to specify the requirements, behavior and published resources of each web service. In our approach, a service can invoke other services and exhibit complex and timed behavior while still complying with the REST architectural style. We show how to transform service specifications into UPPAAL timed automata for verification and test generation. The service requirements are propagated to the UPPAAL timed automata during the transformation. Their reachability is verified in UPPAAL and they are used for computing coverage level during test generation. We validate our approach with a case study of a holiday booking web service. Copyright © 2014 SCITEPRESS.",
		"language": "English",
		"author": [
			{
				"family": "Rauf",
				"given": "I."
			},
			{
				"family": "Siavashi",
				"given": "F."
			},
			{
				"family": "Truscan",
				"given": "D."
			},
			{
				"family": "Porres",
				"given": "I."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/8WSNTFDU",
		"type": "article-journal",
		"title": "Configurable RESTful service mashup: A Process-Data-Widget approach",
		"container-title": "Applied Mathematics and Information Sciences",
		"page": "637–644",
		"volume": "9",
		"issue": "2",
		"abstract": "Techniques for the mashup of services have been attracting considerable attention; however, reusable and reconfigurable models for the construction of mashup applications are still lacking. The REST (Representational State Transfer) software architecture has been widely accepted due to its usability and simplicity. This makes REST an appropriate foundation for the development of components for mashup applications. This study proposes a software framework based on the REST architecture, called Process-Data-Widget, to assist designers in building mashup applications. The proposed approach is meant to convert time-consuming, manual mashup-construction tasks into systematic, semi-automatic and configurable tasks. Such an approach would enable designers to design service processes, compose service data, and configure widget-based user interfaces by developing a mashup document. The document could then be input into a mashup engine to produce a corresponding mashup application and a new composite RESTful service. © 2015 NSP Natural Sciences Publishing Cor.",
		"DOI": "10.12785/amis/092L39",
		"ISSN": "1935-0090",
		"shortTitle": "Configurable RESTful service mashup",
		"language": "English",
		"author": [
			{
				"family": "Ma",
				"given": "S.-P."
			},
			{
				"family": "Huang",
				"given": "C.-Y."
			},
			{
				"family": "Fanjiang",
				"given": "Y.-Y."
			},
			{
				"family": "Kuo",
				"given": "J.-Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/FVK7G4QU",
		"type": "paper-conference",
		"title": "Linked sensor data: RESTfully serving RDF and GML",
		"page": "49–63",
		"volume": "522",
		"abstract": "Publishing sensor observations on the Linked Data web is the first step in enabling the development of semantic web applications and mashups that can utilise sensor data. We present the design for a prototype API exposing data from the Channel Coastal Observatory in the UK. By combining REST and Linked Data principles we support both Semantic Web clients, OGC GML clients, and hybrid applications that can transpose between these, and other, representations.",
		"shortTitle": "Linked sensor data",
		"language": "English",
		"author": [
			{
				"family": "Page",
				"given": "K.R."
			},
			{
				"family": "De",
				"given": "Roure"
			},
			{
				"family": "Martinez",
				"given": "K."
			},
			{
				"family": "Sadler",
				"given": "J.D."
			},
			{
				"family": "Kit",
				"given": "O.Y."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XSGNEETK",
		"type": "paper-conference",
		"title": "From representations to computations: The evolution of web architectures",
		"page": "255–264",
		"abstract": "REpresentational State Transfer (REST) guided the creation and expansion of the modern web. What began as an internet-scale distributed hypermedia system is now a vast sea of shared and interdependent services. However, despite the expressive power of REST, not all of its benefits are consistently realized by working systems. To resolve the dissonance between the promise of REST and the reality of fielded systems, we critically examine numerous web architectures. Our investigation yields a set of extensions to REST, an architectural style called Computational REST (CREST), that not only offers additional design guidance, but pinpoints, in many cases, the root cause of the apparent dissonance between style and implementation. Furthermore, CREST explains emerging web architectures (such as mashups) and points to novel computational structures. Copyright 2007 ACM.",
		"DOI": "10.1145/1287624.1287660",
		"ISBN": "978-1-59593-811-4",
		"shortTitle": "From representations to computations",
		"language": "English",
		"author": [
			{
				"family": "Erenkrantz",
				"given": "J.R."
			},
			{
				"family": "Gorlick",
				"given": "M."
			},
			{
				"family": "Suryanarayana",
				"given": "G."
			},
			{
				"family": "Taylor",
				"given": "R.N."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2007"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/XDFNT7W7",
		"type": "paper-conference",
		"title": "A framework for RESTful object exchange through schematized XML (unRESTricted)",
		"page": "593–598",
		"abstract": "Client-server architectures with clients on divergent platforms are in need of services that serve a high level of interoperability and a loose binding. It should be prevented that clients become incompatible with the server after server-side changes in the data model. In practice it appears that existing systems don't always meet these requirements and that known solutions are lacking supporting frameworks in the development of these services. This paper presents a framework for building REST-ful services that publish data matching an internal object model. The internal objects are presented to the client by XML which conforms to an XML schema that is agnostic of the framework. The conversion between the XML documents and the internal objects is backed by the framework and abstracted from the service developer. An implementation of this framework in Java is described, together with client-side software that also relieves the client from marshaling logic and processing the server's response. © 2008 IEEE.",
		"DOI": "10.1109/ICDIM.2008.4746728",
		"ISBN": "978-1-4244-2917-2",
		"language": "English",
		"author": [
			{
				"family": "Keer",
				"given": "B.V.D."
			},
			{
				"family": "Rijsselbergen",
				"given": "D.V."
			},
			{
				"family": "Mannens",
				"given": "E."
			},
			{
				"family": "Walle",
				"given": "R.V.D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/CKCHZJIH",
		"type": "paper-conference",
		"title": "RESTify: From RPCs to RESTful HTTP design",
		"page": "11–18",
		"abstract": "Starting with RESTful design is a difficult task - even more if the designer has a RPC or object-oriented background. To support the adaption from RPC- to REST-oriented thinking, we propose RESTify, a straightforward procedure model to redesign a RPC-oriented interface into a hypermediaenabled REST interface. RESTfiy uses a WSDL document of an existing SOAP service and consists of three iterations. The result of each iteration is an enhanced version of the preceding one concerning the REST constraints and is meant to be implemented as a HTTP service. Beside the technical reslt of the process and the design of a RESTful interface, the developer becomes acquainted to the main elements of a RESTful design, the constraints and their application. The results of the evaluation, using a prototypical web application and public SOAP services, are promising. Copyright 2012 ACM.",
		"DOI": "10.1145/2307819.2307824",
		"ISBN": "978-1-4503-1190-8",
		"shortTitle": "RESTify",
		"language": "English",
		"author": [
			{
				"family": "Strauch",
				"given": "J."
			},
			{
				"family": "Schreier",
				"given": "S."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/P5ZF5DPS",
		"type": "chapter",
		"title": "Bridging the SOA and REST architectural styles",
		"container-title": "Migrating Legacy Applications: Challenges in Service Oriented Architecture and Cloud Computing Environments",
		"page": "276–302",
		"abstract": "SOA and REST are the most used architectural styles for distributed interoperability solutions. Each is more adequate to a different class of applications and exhibits, advantages and disadvantages. This chapter performs a comparative study between them, after establishing a hierarchical classification of architectural styles and showing how to derive them by progressively introducing architectural constraints. An underlying model, which relates resources, services, and processes, is presented. It is shown that SOA and REST are dual architectural styles, one oriented towards behavior and the other towards state. This raises the question of whether it is possible to combine them to maximize the advantages and to minimize the disadvantages. This chapter proposes a new architectural style, based on a combination of the best characteristics of SOA and REST, which the authors designate as Structural Services. Unlike REST, resources are able to offer a variable set of operations, and unlike SOA, services are allowed to have structure. This style uses structural interoperability, which includes structural compliance and conformance. © 2013, IGI Global.",
		"ISBN": "978-1-4666-2488-7",
		"language": "English",
		"author": [
			{
				"family": "Delgado",
				"given": "J.C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VVWP8JEX",
		"type": "paper-conference",
		"title": "Comparing architectural styles for service-oriented architectures - A REST vs. SOAP case study",
		"page": "207–215",
		"abstract": "Two architectural styles are currently heavily discussed regarding the design of service-oriented architectures (SOA). Within this chapter we have compared those two alternative styles - the SOAP-style with procedural designs similar to remote procedure calls and the REST-style with loosely coupled services similar to resources of the World Wide Web. We introduce the case of a business network consisting of manufacturers and service providers of the electronics industry for deriving a set of requirements towards a specific SOA implementation. For each architectural style we present a concrete SOA design and evaluate it against the defined set of requirements. © 2009 Springer Science+Business Media, LLC.",
		"DOI": "10.1007/b137171_22",
		"ISBN": "978-0-387-84809-9",
		"language": "English",
		"author": [
			{
				"family": "Becker",
				"given": "J."
			},
			{
				"family": "Matzner",
				"given": "M."
			},
			{
				"family": "Müller",
				"given": "O."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2009"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RBHZSV84",
		"type": "paper-conference",
		"title": "I*-REST: Light-weight i* modeling with RESTful Web services",
		"volume": "1157",
		"abstract": "Environmental changes drive the evolution of organizational software systems. i* allows to model continuous requirements on social and intentional aspects of organizational software systems. However, partially computer-enacted workows are not well supported by current tools. In this paper, we propose i*-REST, an Open Source collection of RESTful Web services that are designed to manipulate existing i* models on-the-large. More specific, we describe two services in detail. The first one allows the creation, modification and storage of Strategic Dependency models. The second service embeds i* model visualizations in arbitrary Web pages. We have evaluated the services in a case study on learning forums. We introduced a workow for the refinement of existing archetypical i* models of learning communities without human intervention. Maintenance and evolution of existing i* models will be much easier, in particular when more i*-REST services become available.",
		"shortTitle": "I*-REST",
		"language": "English",
		"author": [
			{
				"family": "Petrushyna",
				"given": "Z."
			},
			{
				"family": "Ruppert",
				"given": "A."
			},
			{
				"family": "Klamma",
				"given": "R."
			},
			{
				"family": "Renzel",
				"given": "D."
			},
			{
				"family": "Jarke",
				"given": "M."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/SDZP3PKF",
		"type": "article-journal",
		"title": "Transitional resource meta-model: Generating restful service to implement complex activity",
		"container-title": "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
		"page": "257–266",
		"volume": "8180 LNCS",
		"issue": "PART 1",
		"abstract": "Service-oriented architecture is widely adopted in the development of web information system. The construction of web service, however, is challenging, since it should not only meet up with intensively changing requirements but also be capable of handling complex activity where multiple entities are involved. The traditional RESTful service is restricted in implementing complex activity since it is single-resource-oriented. Using SOAP services to implement is possible but time-consuming, thus not adaptive to the sensitive requirements change. Therefore, a Transitional Resource Meta-model (TRM) is proposed in this paper to generate the RESTful service with the capability of executing complex activity in a flexible and fast way. Our proposed model functions on describing the complex activity by using a state transfer sequence for multiple entities as well as generating the service interface and controlling the execution of the service. A case study is given to represent the construction process and generation results of TRM, and a comparison with REST-based architecture and SOAP-based architecture is provided at the end to show the advantages of TRM approach. © 2013 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-41230-1_22",
		"ISSN": "0302-9743",
		"shortTitle": "Transitional resource meta-model",
		"language": "English",
		"author": [
			{
				"family": "Fang",
				"given": "L."
			},
			{
				"family": "Cai",
				"given": "H."
			},
			{
				"family": "Xie",
				"given": "C."
			},
			{
				"family": "Jiang",
				"given": "L."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/PEXRE3P8",
		"type": "paper-conference",
		"title": "RDF-REST: A unifying framework for web APIs and linked data",
		"page": "10–19",
		"volume": "1056",
		"abstract": "There has been a lot of efforts to bridge the gap between web APIs and linked data. The RDF-REST framework, that we developed in the process of building a RESTful service using linked data, is part of them. This paper presents the approach adopted in the RDF-REST framework, and show its benefits in the design and use of web APIs. One of these benefits is an easy integration of existing APIs with each other and with linked data. Copyright © 2013 for the individual papers by the papers' authors.",
		"shortTitle": "RDF-REST",
		"language": "English",
		"author": [
			{
				"family": "Champin",
				"given": "P.-A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/PGVBRBFE",
		"type": "paper-conference",
		"title": "What if the Web were not RESTful?",
		"page": "3–10",
		"abstract": "So-called RESTful services are in widespread use both on the Web, and increasingly, in large enterprises. We say \"so-called\" because in reality, most of these services are not very RESTful. Those active in the REST community know well where these interfaces fail to meet REST principles, however, true understanding remains only in this relatively small community. Unfortunately, the result is a set of interfaces that are ultimately limited in their use, and the deficiencies are not usually recognized until it is too late to make the necessary changes. Our experience has shown that individuals are not being deliberately neglectful, rather, they simply do not know what they do not know. Everyone thinks they \"get REST\", after all, using HTTP to move XML or JSON payloads over the network is very simple. We have found that most individuals begin to understand the nuances of REST when they are explained and they almost always ask for resources that further explain these concepts. Certainly, materials are available, however the best ones are rather substantial in size lessening the chance that many people will read them. In this paper we take a fresh approach to explaining the core principles of REST, by describing a World Wide Web that fails to meet these tenets. We look at each key element, resource orientation, the uniform interface, media types and hyperlinking, and imagine the consequences of not abiding by the REST architectural style on the end user or tools developer of the Web. We then do a similar analysis in the context of Web services and programmatic consumers, reexamining each REST characteristic, describing common mistakes and suggesting improvements. We have found that in discussions, the analogy of the World Wide Web has been very effective at explaining REST. Copyright 2012 ACM.",
		"DOI": "10.1145/2307819.2307823",
		"ISBN": "978-1-4503-1190-8",
		"language": "English",
		"author": [
			{
				"family": "Davis",
				"given": "C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/4UV2F379",
		"type": "article-journal",
		"title": "RESTful Web Services improve the efficiency of data transfer of a whole-farm simulator accessed by Android smartphones",
		"container-title": "Computers and Electronics in Agriculture",
		"page": "14–18",
		"volume": "87",
		"abstract": "The relentlessly increasing importance and application of Information and Communication Technologies (ICTs) in Agriculture have given birth to a new field called e-Agriculture, which focus on improving agricultural and rural development through a variety of technologies. In this sense, Agricultural Information Systems (AISs) are distributed sources of information that exploit ICTs to make agricultural processes and decision making more efficient. In order to integrate AISs and therefore build added value AISs, Web Service technologies seem to be the right path towards heterogeneous systems integration. However, there is still uncertain which is the best implementation approach to integrate Web Service-enabled AISs and mobile devices, i.e., the remote information accessors by excellence in rural areas. We comparatively explore the outcomes of employing either Simple Object Access Protocol (SOAP) or REpresentational State Transfer (REST) approaches in a Web Service-enabled whole-farm simulator accessed from Android-powered smartphones. Memory usage was 24% lower in SOAP, but even older and lower-end smartphones have enough RAM to avoid detrimental effects on performance. REST-based approaches broadly incur in less byte transferred compared to SOAP, which has huge implications on costs. That is particularly important when the Internet is accessed via GPRS or 3G protocols and pay-per-byte data plans as in most of Latin America rural areas. However, when unlimited data usage became less costly and more available in such areas, SOAP might be preferred due to the higher maturity of both the protocol and the available developer environments. © 2012 Elsevier B.V.",
		"DOI": "10.1016/j.compag.2012.05.016",
		"ISSN": "0168-1699",
		"language": "English",
		"author": [
			{
				"family": "Arroqui",
				"given": "M."
			},
			{
				"family": "Mateos",
				"given": "C."
			},
			{
				"family": "Machado",
				"given": "C."
			},
			{
				"family": "Zunino",
				"given": "A."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/AEFJ25U9",
		"type": "manuscript",
		"title": "Enabling distributed manufacturing resources through SOA: The REST approach",
		"genre": "Article in Press",
		"abstract": "The Service Oriented Architecture (SOA) is quite established in enterprise environments as a pattern for software integration. However, traditional industrial architecture based on a vertical hierarchy is still used in old manufacturing organizations, making it difficult to reach the new requirements in industrial automation. There are works related with the use of SOA WS-* stack based frameworks, but this paradigm is not optimal due to the overhead in communication protocols. From this point of view, we propose a lightweight SOA architectural model based on the use of RESTful style for design and modeling of industrial processes. The aim is to explore a low developed research area to improve interoperability and flexibility in certain demanding manufacturing scenarios while similar performance of current industrial control standard is achieved. Theoretical advantages are presented and experimentally evaluated. In the evaluation, a prototype of the lightweight RESTful Framework and several scenarios of industrial devices are presented and response times are measured using two different RESTful protocols: HTTP and CoAP. From the results obtained it can be concluded that the performance of SOA with REST in industrial environments is suitable for current needs. © 2016.",
		"shortTitle": "Enabling distributed manufacturing resources through SOA",
		"language": "English",
		"author": [
			{
				"family": "Espí-Beltrán",
				"given": "J.V."
			},
			{
				"family": "Gilart-Iglesias",
				"given": "V."
			},
			{
				"family": "Ruiz-Fernández",
				"given": "D."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/V4STIAU8",
		"type": "paper-conference",
		"title": "JSON Patch for Turning a Pull REST API into a Push",
		"container-title": "SpringerLink",
		"publisher": "Springer, Cham",
		"page": "435–449",
		"abstract": "REST APIs together with JSON are commonly used by modern web applications to export their services. However, these services are usually reachable in a pull mode which is not suitable for accessing cha",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-319-46295-0_27",
		"DOI": "10.1007/978-3-319-46295-0_27",
		"language": "en",
		"author": [
			{
				"family": "Cao",
				"given": "Hanyang"
			},
			{
				"family": "Falleri",
				"given": "Jean-Rémy"
			},
			{
				"family": "Blanc",
				"given": "Xavier"
			},
			{
				"family": "Zhang",
				"given": "Li"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					10
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/IJB3RW4K",
		"type": "paper-conference",
		"title": "Model-Driven Generation of a REST API from a Legacy Web Application",
		"container-title": "SpringerLink",
		"publisher": "Springer, Cham",
		"page": "133–147",
		"abstract": "Web 2.0 phenomenon, REST APIs and growing mobile service consumption, among other factors, are leading the development of web applications to a new paradigm, named cross-device web application. Those",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-319-04244-2_13",
		"DOI": "10.1007/978-3-319-04244-2_13",
		"language": "en",
		"author": [
			{
				"family": "Rodríguez-Echeverría",
				"given": "Roberto"
			},
			{
				"family": "Macías",
				"given": "Fernando"
			},
			{
				"family": "Pavón",
				"given": "Víctor M."
			},
			{
				"family": "Conejero",
				"given": "José M."
			},
			{
				"family": "Sánchez-Figueroa",
				"given": "Fernando"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					7
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/W4TEZ57S",
		"type": "paper-conference",
		"title": "Designing Web-Based Mobile Services with REST",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "439–450",
		"abstract": "The Web is emerging as the favorite platform for delivering applications and services. The REST architectural style comprises the key principles behind its design and success. While REST is originally",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-540-93851-4_42",
		"DOI": "10.1007/978-3-540-93851-4_42",
		"language": "en",
		"author": [
			{
				"family": "Riva",
				"given": "Claudio"
			},
			{
				"family": "Laitkorpi",
				"given": "Markku"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2007",
					9
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/CKNBC2Q8",
		"type": "article-journal",
		"title": "Survey of Semantic Description of REST APIs",
		"page": "69–89",
		"URL": "http://link.springer.com/chapter/10.1007/978-1-4614-9299-3_5",
		"DOI": "10.1007/978-1-4614-9299-3_5",
		"language": "en",
		"author": [
			{
				"family": "Verborgh",
				"given": "Ruben"
			},
			{
				"family": "Harth",
				"given": "Andreas"
			},
			{
				"family": "Maleshkova",
				"given": "Maria"
			},
			{
				"family": "Stadtmüller",
				"given": "Steffen"
			},
			{
				"family": "Steiner",
				"given": "Thomas"
			},
			{
				"family": "Taheriyan",
				"given": "Mohsen"
			},
			{
				"family": "Walle",
				"given": "Rik Van",
				"dropping-particle": "de"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/KCRP86NF",
		"type": "paper-conference",
		"title": "Fixed-Mobile Hybrid Mashups: Applying the REST Principles to Mobile-Specific Resources",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "172–182",
		"abstract": "Mashups have already for years been quite popular and common in the Internet. However, data sources used for creating mashups rarely include anything from the vast potential of the mobile domain and m",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-540-85200-1_20",
		"DOI": "10.1007/978-3-540-85200-1_20",
		"shortTitle": "Fixed-Mobile Hybrid Mashups",
		"language": "en",
		"author": [
			{
				"family": "Mäkeläinen",
				"given": "Sami"
			},
			{
				"family": "Alakoski",
				"given": "Timo"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					9
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/NSEPMER5",
		"type": "paper-conference",
		"title": "REST APIs: A Large-Scale Analysis of Compliance with Principles and Best Practices",
		"container-title": "SpringerLink",
		"publisher": "Springer, Cham",
		"page": "21–39",
		"abstract": "Quickly and dominantly, REST APIs have spread over the Web and percolated into modern software development practice, especially in the Mobile Internet where they conveniently enable offloading data an",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-319-38791-8_2",
		"DOI": "10.1007/978-3-319-38791-8_2",
		"shortTitle": "REST APIs",
		"language": "en",
		"author": [
			{
				"family": "Rodríguez",
				"given": "Carlos"
			},
			{
				"family": "Baez",
				"given": "Marcos"
			},
			{
				"family": "Daniel",
				"given": "Florian"
			},
			{
				"family": "Casati",
				"given": "Fabio"
			},
			{
				"family": "Trabucco",
				"given": "Juan Carlos"
			},
			{
				"family": "Canali",
				"given": "Luigi"
			},
			{
				"family": "Percannella",
				"given": "Gianraffaele"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					6
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/2ZFDTXI6",
		"type": "paper-conference",
		"title": "RAFT-REST - A Client-Side Framework for Reliable, Adaptive and Fault-Tolerant RESTful Service Consumption",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "104–118",
		"abstract": "The client/server paradigm in distributed systems leads to multi-stakeholder architectures with messages exchanged over connections between client applications and services. In practice, there are man",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-642-40651-5_9",
		"DOI": "10.1007/978-3-642-40651-5_9",
		"language": "en",
		"author": [
			{
				"family": "Spillner",
				"given": "Josef"
			},
			{
				"family": "Utlik",
				"given": "Anna"
			},
			{
				"family": "Springer",
				"given": "Thomas"
			},
			{
				"family": "Schill",
				"given": "Alexander"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2013",
					9
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GAECX43J",
		"type": "paper-conference",
		"title": "Detection of REST Patterns and Antipatterns: A Heuristics-Based Approach",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "230–244",
		"abstract": "REST (REpresentational State Transfer), relying on resources as its architectural unit, is currently a popular architectural choice for building Web-based applications. It is shown that design pattern",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-662-45391-9_16",
		"DOI": "10.1007/978-3-662-45391-9_16",
		"shortTitle": "Detection of REST Patterns and Antipatterns",
		"language": "en",
		"author": [
			{
				"family": "Palma",
				"given": "Francis"
			},
			{
				"family": "Dubois",
				"given": "Johann"
			},
			{
				"family": "Moha",
				"given": "Naouel"
			},
			{
				"family": "Guéhéneuc",
				"given": "Yann-Gaël"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					11
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/NZWUG7D7",
		"type": "paper-conference",
		"title": "In Search of an Internet of Things Service Architecture: REST or WS-*? A Developers’ Perspective",
		"publisher": "Springer Berlin Heidelberg",
		"page": "326–337",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-642-30973-1_32",
		"DOI": "10.1007/978-3-642-30973-1_32",
		"shortTitle": "In Search of an Internet of Things Service Architecture",
		"language": "en",
		"author": [
			{
				"family": "Guinard",
				"given": "Dominique"
			},
			{
				"family": "Ion",
				"given": "Iulia"
			},
			{
				"family": "Mayer",
				"given": "Simon"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					12
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/WRUR85PZ",
		"type": "paper-conference",
		"title": "Transformations Have to be Developed ReST Assured",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "1–15",
		"abstract": "Model transformations do not simply appear. They have to be not-so-simply developed. In early phases of development, there may exist only an intuition or an educated guess on some of the characteristi",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-540-69927-9_1",
		"DOI": "10.1007/978-3-540-69927-9_1",
		"language": "en",
		"author": [
			{
				"family": "Siikarla",
				"given": "Mika"
			},
			{
				"family": "Laitkorpi",
				"given": "Markku"
			},
			{
				"family": "Selonen",
				"given": "Petri"
			},
			{
				"family": "Systä",
				"given": "Tarja"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					7
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/RFXJZ5R3",
		"type": "paper-conference",
		"title": "Metamodeling vs Metaprogramming: A Case Study on Developing Client Libraries for REST APIs",
		"container-title": "SpringerLink",
		"publisher": "Springer, Cham",
		"page": "205–216",
		"abstract": "Web-services with REST APIs comprise the majority of the programmable web. To access these APIs more safely and conveniently, language specific client libraries can hide REST details behind regular pr",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-319-42061-5_13",
		"DOI": "10.1007/978-3-319-42061-5_13",
		"shortTitle": "Metamodeling vs Metaprogramming",
		"language": "en",
		"author": [
			{
				"family": "Scheidgen",
				"given": "Markus"
			},
			{
				"family": "Efftinge",
				"given": "Sven"
			},
			{
				"family": "Marticke",
				"given": "Frederik"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016",
					7
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/9H3CN9MT",
		"type": "paper-conference",
		"title": "BPEL for REST",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "278–293",
		"abstract": "Novel trends in Web services technology challenge the assumptions made by current standards for process-based service composition. Most RESTful Web service APIs, which do not rely on the Web service d",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-540-85758-7_21",
		"DOI": "10.1007/978-3-540-85758-7_21",
		"language": "en",
		"author": [
			{
				"family": "Pautasso",
				"given": "Cesare"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2008",
					9
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/Z9ZHXQIT",
		"type": "article-journal",
		"title": "REST-Based Semantic Annotation of Web Services",
		"container-title": "SpringerLink",
		"page": "269–279",
		"abstract": "The advance in research conducted in the web services area has allowed organizations to integrate their applications, enabling the automation of business processes in several areas. However, it is nec",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-319-32467-8_25",
		"DOI": "10.1007/978-3-319-32467-8_25",
		"language": "en",
		"author": [
			{
				"family": "Lira",
				"given": "Cleber"
			},
			{
				"family": "Caetano",
				"given": "Paulo"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2016"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/9JS2EQE6",
		"type": "article-journal",
		"title": "Distributed Evolutionary Computation Using SOAP and REST Web Services",
		"page": "89–111",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-642-30154-4_5",
		"DOI": "10.1007/978-3-642-30154-4_5",
		"language": "en",
		"author": [
			{
				"family": "Castillo",
				"given": "P. A."
			},
			{
				"family": "García-Sánchez",
				"given": "P."
			},
			{
				"family": "Arenas",
				"given": "M. G."
			},
			{
				"family": "Bernier",
				"given": "J. L."
			},
			{
				"family": "Merelo",
				"given": "J. J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GRA34RMC",
		"type": "article-journal",
		"title": "Management Server Architecture for REST Web Service Composition",
		"container-title": "SpringerLink",
		"page": "585–593",
		"abstract": "RESTful web service are becoming more popular with the explosive use of smartphone applications. Thus, we propose the concept of management server for composed RESTful web services. Due to limited res",
		"URL": "http://link.springer.com/chapter/10.1007/978-94-007-4516-2_60",
		"DOI": "10.1007/978-94-007-4516-2_60",
		"language": "en",
		"author": [
			{
				"family": "Choi",
				"given": "Min"
			},
			{
				"family": "Lee",
				"given": "Wonjae"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/DI93CC4W",
		"type": "paper-conference",
		"title": "An Approach to Enable Replacement of SOAP Services and REST Services in Lightweight Processes",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "338–346",
		"abstract": "In the last few years, several Web APIs implementing the REST principles were created. Process modellers often need to use both SOAP and REST services within a single process. In this paper we present",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-642-16985-4_30",
		"DOI": "10.1007/978-3-642-16985-4_30",
		"language": "en",
		"author": [
			{
				"family": "Giorgio",
				"given": "Teodoro De"
			},
			{
				"family": "Ripa",
				"given": "Gianluca"
			},
			{
				"family": "Zuccalà",
				"given": "Maurilio"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2010",
					7
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/94VUMNW2",
		"type": "article-journal",
		"title": "SeaHttp: A Resource-Oriented Protocol to Extend REST Style for Web of Things",
		"container-title": "J. Comput. Sci. Technol.",
		"page": "205–215",
		"volume": "29",
		"issue": "2",
		"abstract": "Web of Things (WoT) makes it possible to connect tremendous embedded devices to web in Representational State Transfer (REST) style. Some lightweight RESTful protocols have been proposed for the WoT t",
		"URL": "http://link.springer.com/article/10.1007/s11390-014-1423-z",
		"DOI": "10.1007/s11390-014-1423-z",
		"ISSN": "1000-9000, 1860-4749",
		"shortTitle": "SeaHttp",
		"language": "en",
		"author": [
			{
				"family": "Hou",
				"given": "Chen-Da"
			},
			{
				"family": "Li",
				"given": "Dong"
			},
			{
				"family": "Qiu",
				"given": "Jie-Fan"
			},
			{
				"family": "Shi",
				"given": "Hai-Long"
			},
			{
				"family": "Cui",
				"given": "Li"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014",
					3
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/GM7F8B6V",
		"type": "paper-conference",
		"title": "Computational REST Meets Erlang",
		"container-title": "SpringerLink",
		"publisher": "Springer, Berlin, Heidelberg",
		"page": "244–259",
		"abstract": "Today’s applications are developed in a world where the execution context changes continuously. They have to adapt to these changes at run-time if they want to offer their services without interruptio",
		"URL": "http://link.springer.com/chapter/10.1007/978-3-642-21952-8_18",
		"DOI": "10.1007/978-3-642-21952-8_18",
		"language": "en",
		"author": [
			{
				"family": "Sivieri",
				"given": "Alessandro"
			},
			{
				"family": "Cugola",
				"given": "Gianpaolo"
			},
			{
				"family": "Ghezzi",
				"given": "Carlo"
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					6
				]
			]
		},
		"accessed": {
			"date-parts": [
				[
					"2017",
					1,
					30
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/IU3CAWP2",
		"type": "paper-conference",
		"title": "A Conversation Based Approach for Modeling REST APIs",
		"page": "165–174",
		"abstract": "Conversations are a well-known concept in service design to describe complex interactions between a client and one or multiple services. The REST architectural style constrains the characteristics of clients, servers and their interactions in REST architectures which consequently has an impact on conversations in such systems. The relation between conversations and REST architectures and how such Restful conversations can be characterized has not been studied in detail yet. In this paper we discuss the characteristics of conversations in REST architectures and introduce an initial set of commonly used conversation types. Based on this, we propose to use conversations as a modeling tool for the design of REST APIs at a higher level of abstraction. We also introduce a corresponding interaction centric metamodel for REST APIs. The characterization of Restful conversations enables a new interaction centric viewpoint on REST architectures which can be also applied for modeling REST APIs on an abstraction level that enables users to focus on the essential functionality of their REST API. © 2015 IEEE.",
		"DOI": "10.1109/WICSA.2015.20",
		"ISBN": "978-1-4799-1922-2",
		"language": "English",
		"author": [
			{
				"family": "Haupt",
				"given": "F."
			},
			{
				"family": "Leymann",
				"given": "F."
			},
			{
				"family": "Pautasso",
				"given": "C."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/HFMFI4XP",
		"type": "article-journal",
		"title": "Semi-automatic semantic service annotation for SOAP and REST web services",
		"container-title": "Communications in Computer and Information Science",
		"page": "70–77",
		"volume": "194 CCIS",
		"abstract": "Until now, most service annotation has been added the semantics to WSDL, that is a description of SOAP based web services. But REST services have been widely used because of simplicity and usability. In order to discover the most suitable services among various web services and compose them, the integrated service annotation of SOAP and REST web services is necessary. In this paper, we present semantic service framework which is designed for user's goal based service discovery and composition. And we present the semi-automatic service annotation for SOAP and REST web services. The proposed annotation approach deals with functional semantics, non-functional semantics, and data semantics from web service description and web service portal. Based on this service annotation, it is useful to discover and compose services that satisfy the user's goal. © 2011 Springer-Verlag.",
		"DOI": "10.1007/978-3-642-22603-8_7",
		"author": [
			{
				"family": "Yoo",
				"given": "H."
			},
			{
				"family": "Park",
				"given": "Y."
			},
			{
				"family": "Bae",
				"given": "H."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/E55J4SBQ",
		"type": "chapter",
		"title": "ubiREST: A RESTful service-oriented middleware for ubiquitous networking",
		"container-title": "Advanced Web Services",
		"page": "475–500",
		"abstract": "The computing and networking capabilities of today's wireless mobile devices allow for seamlessly-networked, ubiquitous services, which may be dynamically composed at run-time to accomplish complex tasks. This vision, however, remains challenged by the inherent mobility of such devices, which makes services highly volatile. These issues call for a service-oriented middleware that should (i) deal with the run-time growth of the application in terms of involved services (flexibility), (ii) accommodate heterogeneous and unforeseen services into the running application (genericity), and (iii) discover new services at run time and rearrange the application accordingly (dynamism). This chapter discusses the design and implementation of ubiREST, a service-oriented middleware that leverages REST principles to effectively enable the ubiquitous networking of Services. ubiREST specifically defines a layered communication middleware supporting RESTful Services while exploiting nowadays ubiquitous connectivity. © Springer Science+Business Media New York 2014. All rights are reserved.",
		"ISBN": "978-1-4614-7535-4",
		"shortTitle": "ubiREST",
		"language": "English",
		"author": [
			{
				"family": "Caporuscio",
				"given": "M."
			},
			{
				"family": "Funaro",
				"given": "M."
			},
			{
				"family": "Ghezzi",
				"given": "C."
			},
			{
				"family": "Issarny",
				"given": "V."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2014"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/W3VVGRTP",
		"type": "article-journal",
		"title": "The GIS Web Services Dynamic Composition Based on REST Architecture Style Research",
		"container-title": "Communications in Computer and Information Science",
		"page": "372–377",
		"volume": "315",
		"abstract": "Since single GIS web service's function is limited, dynamic composition of those existing GIS web services to implement more complex task has become an important mean to satisfy all internet users' changeable requirements. However, the application of the research for GIS web services composition is still infancy with the following limitations: Few researches have been done on system framework of GIS web services dynamic composition; the current service composition research focuses on certain key technologies, for example: service composition scheme selection algorism based on quality. The main scientific finding of this research is to set up the GIS web services composition architecture based on Representational State Transfer (REST) architecture style, and to lay a foundation to the dynamic composition of GIS web services on light-weighted clients based on script-level codes. © Springer-Verlag Berlin Heidelberg 2012.",
		"DOI": "10.1007/978-3-642-34240-0_49",
		"ISSN": "1865-0929",
		"language": "English",
		"author": [
			{
				"family": "Zhang",
				"given": "S."
			},
			{
				"family": "Wang",
				"given": "F."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2012"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VEPRC9WB",
		"type": "article-journal",
		"title": "Scenario-based design and validation of REST web service compositions",
		"container-title": "Lecture Notes in Business Information Processing",
		"page": "145–160",
		"volume": "226",
		"abstract": "We present an approach to design and validate RESTful composite web services based on user scenarios. We use the Unified Modeling Language (UML) to specify the requirements, behavior and published resources of each web service. In our approach, a service can invoke other services and exhibit complex and timed behavior while still complying with the REST architectural style. We specify user scenarios via UML Sequence Diagrams. The service specifications are transformed into UPPAAL timed automata for verification and test generation. The service requirements are propagated to the UPPAAL timed automata during the transformation. Their reachability is verified in UPPAAL and they are used for computing coverage level during test generation. We validate our approach with a case study of a holiday booking web service. © Springer International Publishing Switzerland 2015.",
		"DOI": "10.1007/978-3-319-27030-2_10",
		"ISSN": "1865-1348",
		"language": "English",
		"author": [
			{
				"family": "Rauf",
				"given": "I."
			},
			{
				"family": "Siavashi",
				"given": "F."
			},
			{
				"family": "Truscan",
				"given": "D."
			},
			{
				"family": "Porres",
				"given": "I."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2015"
				]
			]
		}
	},
	{
		"id": "http://zotero.org/groups/121453/items/VKNGGD57",
		"type": "paper-conference",
		"title": "Adaption of Archetype Patterns for mobile cloud-based business apps",
		"container-title": "2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops)",
		"page": "100-105",
		"source": "IEEE Xplore",
		"event": "2011 IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops)",
		"abstract": "The creating of reusable mobile solutions is influenced by many factors. The platforms are arbitrary, the target audience can be new to mobile software, and the devices are not always online and restricted in their computational capabilities. This paper presents an archetype pattern- and REST-driven approach for building customizable, flexible, and efficient mobile business applications. Furthermore, offline scenarios will be covered in the context of REST web services based upon the recently published “offline strategy pattern”.",
		"DOI": "10.1109/PERCOMW.2011.5766849",
		"author": [
			{
				"family": "Damm",
				"given": "S."
			},
			{
				"family": "Ritz",
				"given": "T."
			},
			{
				"family": "Strauch",
				"given": "J."
			}
		],
		"issued": {
			"date-parts": [
				[
					"2011",
					3
				]
			]
		}
	}
]